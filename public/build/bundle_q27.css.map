{
  "version": 3,
  "file": "bundle_q27.css",
  "sources": [
    "ChoiceMatrixPreview.svelte"
  ],
  "sourcesContent": [
    "<!--\r\n *   File Name   : ChoiceMatrixPreview.svelte\r\n *   Description : Choice Matrix module\r\n *   Author      : Sundaram Tripathi (uc-sdt)\r\n *   Package     : pe-items\r\n *   Last update : 19-Nov-2019\r\n -->\r\n <script>\r\n    import lib from './parseCSV.js'; \r\n    \r\n    import { onMount,beforeUpdate,afterUpdate } from \"svelte\";\r\n    import {AH,XMLToJSON, onUserAnsChange } from \"../helper/HelperAI.svelte\";\r\n    import objectHelper from './choiceMatrixHelper.svelte';\r\n    import { each } from 'svelte/internal';\r\n    import { writable } from \"svelte/store\";\r\n    import { apiInitializeRandomSeq } from '../../lib/UCLIB.js';\r\n    export let showAns;\r\n    \r\n   let isIE;\r\n    let mainId = \"\"; \r\n        export let xml; \r\n        export let CM;\r\n        let state = {};\r\n        let stateData = writable({\r\n                cdata: \"\",\r\n                stem: \"\",\r\n                xml: \"\",\r\n                theme:\"\",\r\n                font:\"\",\r\n                maxWidth:\"\",\r\n                totalcorrectans:\"\" \r\n        })\r\n        const unsubscribe = stateData.subscribe((items) => { \r\n        state = items;\r\n    })\r\n\r\n    let theme_color = {\r\n\t\ttheme1: '#5B9BD5',\r\n\t\ttheme2: '#3B67BC',\r\n\t\ttheme3: '#F6C3A2',\r\n\t\ttheme4: '#70AD47',\r\n\t\ttheme5: '#745998'\r\n\t}\r\n\tlet theme_color_terms = {\r\n\t\ttheme1: '#DEEAF6',\r\n\t\ttheme2: '#D4DEF1',\r\n\t\ttheme3: '#FAE0CF',\r\n\t\ttheme4: '#E2EFD9',\r\n\t\ttheme5: '#E1DAE9',\r\n\t}\r\n    \r\n            let cm = {\r\n                cdata:\"\"\r\n            };\r\n        \r\n    \r\n        ///////  XML change then automatically reload code ///////////////\r\n        beforeUpdate(()=> {\r\n            if (xml) {\r\n                state.xml = xml ;\r\n                loadModule(xml,window.uaXML);\r\n            }\r\n    \r\n            // checking for if xml is exist or not\r\n            // if(xml) {\r\n            //     if (window.isReviewMode == true) {\r\n            //         // this condition will true in test area\r\n                    \r\n            //             modeOn();                                   \r\n            //     } else {\r\n                    \r\n            //         previewUserAns();\r\n            //         modeOff();\r\n            //     }\r\n            // }\r\n        });  \r\n    \r\n        // function for checking the focus\r\n    /*    function checkFocus(list){\r\n            let is_focus = false;\r\n            jQuery(\".choiceMatrixRender\").find(\".\"+list).each(function() {\r\n                if(jQuery(this).is(\":focus\")) {\r\n                    is_focus = true;\r\n                    return false;\r\n                }\r\n            });\r\n            return is_focus;\r\n        }  */\r\n    \r\n        afterUpdate(()=>{\r\n            if(window.isReviewMode != true)\r\n            hideCorIncorIcon();\r\n        })\r\n        ////////////// Call after the rendring ////////////////\r\n        onMount(()=> {\r\n             // Check the radio when press the Enter Key ADA\r\n        /*    jQuery('body').on('keydown', '.label_choice', function(e) { \r\n                if(e.which === 13) {\r\n                    jQuery(this).click();\r\n                }\r\n            }); */\r\n            AI.listen(document,'keydown','.label_choice', function(_this,e){\r\n                if(e.which === 13) {\r\n                    _this.click();\r\n                }\r\n            }) \r\n        \r\n            \r\n    /*     //////////////     replace js using set-review and unset-review button ///////\r\n            binding the set-review and unset-review\r\n            jQuery(\"#set-review\").on('click',function() {\r\n                setTimeout(function(){\r\n                    modeOn();\r\n                }.bind(this),100);\r\n            });\r\n    \r\n            jQuery(\"#unset-review\").on('click',function() {\r\n                previewUserAns();\r\n                modeOff();\r\n            });\r\n    */\r\n            \r\n        });\r\n    \r\n        /////////////// Loding the xml and uaXML ///////////////////\r\n        function loadModule(loadXml,uaXML) {\r\n            loadXml = XMLToJSON(loadXml);\r\n            parseXMLPreview(loadXml,uaXML);\r\n        }\r\n    \r\n        ///////// FUnction parsing the xml ////////////////////////\r\n        function parseXMLPreview(MYXML,uaXML) {\r\n            // setting state of theme, font, maxwidth\r\n            state.theme=MYXML.smxml._theme;\r\n            state.font=MYXML.smxml._font;\r\n            state.maxWidth = ((MYXML.smxml._maxwidth)?MYXML.smxml._maxwidth: 800 );\r\n            \r\n    \r\n            let formattedData = lib.parseCSVFormat(MYXML.smxml.__cdata);\r\n            let cdata = formattedData;\r\n            let rawData = [];\r\n    \r\n            // copy cdata into rawData////// \r\n    \r\n           /* jQuery.map(cdata, function (value, index) {\r\n                rawData[index] = value;\r\n            });   Replaced     */\r\n    \r\n            rawData = JSON.parse(JSON.stringify(cdata));\r\n    \r\n    \r\n            \r\n            state.cdata = rawData; \r\n            state.stem = rawData.stem;\r\n            cm.cdata = rawData;\r\n            let len = cm.cdata.term.length;\r\n            state.totalcorrectans = len ;\r\n            modeOff();\r\n            \r\n            // User anser checking/////////\r\n            if(uaXML) {\r\n                try {\r\n                    // parsing the json data\r\n                    uaXML = JSON.parse(uaXML);\r\n                    let rawUaXML = [];\r\n                    // storing uaXML in rawUaXML and storing its value\r\n                /*    jQuery.map(uaXML, function (value, index) {\r\n                        rawUaXML[index] = value;\r\n                    }); replaced   */\r\n    \r\n                    rawUaXML = JSON.parse(JSON.stringify(uaXML));\r\n                    \r\n                    \r\n                    //    setting the data-userans on the basis of ans\r\n                        // rawUaXML.ans.map(function(data,i) {\r\n                        //     alert(\"#\"+data.userAns);\r\n                        //     jQuery(\".test_area\").find(\"#\"+data.userAns).attr(\"data-userans\",data.userAns);\r\n                        // });\r\n\r\n\r\n                    \r\n                    // let datauser;\r\n                        rawUaXML.ans.map(function(data,i) {\r\n                            let test_area_len = document.getElementsByClassName('test_area');\r\n                            for(let j = 0; j < test_area_len.length; j++ ) {\r\n                                let test_area_find = AH.find(test_area_len[j], \"#\"+data.userAns);\r\n                                if(test_area_find) test_area_find.setAttribute(\"data-userans\",data.userAns)\r\n                                \r\n                            } \r\n                        })\r\n\r\n\r\n    \r\n                        // for showing the userans , that is the answer which is marked by the user\r\n                        previewUserAns();\r\n                    \r\n                } catch (e) {\r\n                    //uaXML = \"\";\r\n                }\r\n            } else {\r\n                // if is not user ans then unchecked all the radio btn\r\n                /*    jQuery(\".test_radio\").each(function () {\r\n                        jQuery(this)[0].checked = false;\r\n                        jQuery(this).attr('data-userans',\"\");\r\n                    })  */\r\n                    let test_radio_len = document.getElementsByClassName('test_radio');\r\n                    for(let i = 0; i < test_radio_len.length; i++) {\r\n                        test_radio_len[i].checked = false;\r\n                        test_radio_len[i].setAttribute('data-userans',\"\");           \r\n                    }\r\n                }\r\n        }\r\n    \r\n        ///////////  Storing the user answer whenever clicked////////////////\r\n        function setUserAns(e) {\r\n            let id = e.target.id;\r\n            let name = e.target.name;\r\n            // set the user ans blank\r\n        //    jQuery(mainId+\" .test_area input[name=\" + name + \"]\").attr(\"data-userans\", \"\"); Replaced\r\n    \r\n            let test_area_input = document.querySelectorAll(mainId+\" .test_area input[name=\" + name + \"]\");\r\n            for (let i = 0; i < test_area_input.length; i++ ) {\r\n                test_area_input[i].setAttribute(\"data-userans\",\"\");\r\n            }\r\n        \r\n    \r\n    \r\n    \r\n            // setting the data-userans on which user is clicked\r\n            //jQuery(mainId+\" .test_area\").find(\"#\" + id + \"\").attr(\"data-userans\", id);// Replaced\r\n    \r\n            let test_area_len = document.getElementsByClassName(mainId+\" .test_area\");\r\n            for( let i=0; i < test_area_len.length; i++) {\r\n                let test_area_data = AH.find(test_area_len[i],\"#\" + id + \"\");\r\n                if(test_area_data) test_area_data.setAttribute(\"data-userans\", id);\r\n            } //Fixed\r\n            let userans = { \"type\": \"34\", \"ans\": [] };\r\n    \r\n            /////////// updating the user ans /////////////////////////\r\n            /* jQuery(mainId+\" .test_radio\").each(function () {\r\n                if (jQuery(this)[0].checked == true) {\r\n                    userans.ans.push({\r\n                        id: jQuery(this).attr(\"data-termid\"),\r\n                        userAns: jQuery(this).attr(\"id\")\r\n                    });\r\n                }\r\n            });*/\r\n            \r\n            let test_radio = document.getElementsByClassName('test_radio');\r\n            for(let i = 0; i<test_radio.length; i++ ) {\r\n                if (test_radio[i].checked == true) {\r\n                    userans.ans.push({\r\n                        id: test_radio[i].getAttribute(\"data-termid\"),\r\n                        userAns: test_radio[i].getAttribute(\"id\")\r\n                    })\r\n                }\r\n            }  \r\n        \r\n            // for autograding\r\n            \r\n            // updaing the value in the textarea \r\n            //jQuery(\"#special_module_user_xml\").val(JSON.stringify(userans)); // Replaced;\r\n\r\n            if (document.getElementById('special_module_user_xml'))\r\n            document.getElementById('special_module_user_xml').value = JSON.stringify(userans);\r\n    \r\n            displayAnswer();  \r\n        }\r\n    \r\n        ///////////////////////// This function display answer wether the function is correct or incorrect///////////////////\r\n        function displayAnswer() {\r\n            // setTimeout(function () {\r\n                // check the ans\r\n                let ans = checkAns();\r\n                ans = ((ans) ? \"Correct\" : \"Incorrect\");\r\n                // mark the answer correct or incorrect x\r\n               ((window.uaXML)? jQuery(\"#answer\").prop(\"checked\", ans == \"Correct\") : onUserAnsChange(ans)); // Replaced\r\n                // ((window.uaXML)? document.getElementById(\"#answer\").setAttribute(\"checked\", ans == \"Correct\") : showAns(ans));\r\n            // }.bind(this), 200);\r\n        } \r\n    \r\n        // function check the answer\r\n        function checkAns() {\r\n            let is_correct = 0;\r\n            let temp = 0;  \r\n    \r\n            // traversing through each radio btn\r\n            // jQuery(\".test_radio\").each(function () {\r\n            //     // checking the condition that its value is same as data-correct\r\n            //     if (jQuery(this).attr('value') == jQuery(this).attr('data-correct')) {\r\n            //         // if it is checked then set the is_correct =1  otherwise is_correct = 0 and return false\r\n            //         if (jQuery(this)[0].checked == true) {\r\n            //             jQuery(this).attr('as', 1);\r\n            //             is_correct = 1;\r\n            //         } else {\r\n            //             is_correct = 0;\r\n            //             jQuery(this).attr('as', 0);\r\n            //             return false;\r\n            //         }\r\n            //     }\r\n            // });  // Replaced\r\n    \r\n            let test_radio_ans = document.getElementsByClassName('test_radio');\r\n            for(let i =0; i < test_radio_ans.length; i++) {\r\n                if(test_radio_ans[i].getAttribute('value') == test_radio_ans[i].getAttribute('data-correct')) {\r\n                    if(test_radio_ans[i].checked == true) {\r\n                        test_radio_ans[i].setAttribute('as',1);\r\n                        is_correct = 1;\r\n                    } else {\r\n                        is_correct = 0;\r\n                        test_radio_ans[i].setAttribute('as',0);\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n    \r\n            // for calculating the point\r\n         /*   jQuery(\".test_radio\").each(function () {\r\n                if (jQuery(this).attr('value') == jQuery(this).attr('data-correct')) {\r\n                    if (jQuery(this)[0].checked == true) {\r\n                        temp++;\r\n                    }\r\n                }\r\n    \r\n                if(typeof calculatePoint != \"undefined\") {\r\n                    calculatePoint(state.totalcorrectans, temp);\r\n                }\r\n            }); \r\n            return is_correct;\r\n        */\r\n    \r\n            for(let i = 0; i < test_radio_ans.length; i++) {\r\n                if(test_radio_ans[i].getAttribute('value') == test_radio_ans[i].getAttribute('data-correct')) {\r\n                    if(test_radio_ans[i].checked == true) {\r\n                        temp++;\r\n                    }\r\n                }\r\n                if(typeof calculatePoint != \"undefined\") {\r\n                    calculatePoint(state.totalcorrectans, temp);\r\n                }\r\n            }\r\n            return is_correct;\r\n    \r\n    \r\n        }\r\n    \r\n        // for user aswer tab\r\n        function yourAnswer() {\r\n            changeBackground(\"your-ans\");\r\n            previewUserAns();\r\n            // for showing the correct/incorrect icon\r\n            showCorIncorIcon();\r\n        }\r\n    \r\n        /////////  Preview the user answer ///////////////\r\n        function previewUserAns() {\r\n            \r\n            /*jQuery(\".test_radio\").each(function () {\r\n                if (jQuery(this).attr('id') == jQuery(this).attr('data-userans')) {\r\n                    jQuery(this)[0].checked = true;\r\n                } else {\r\n                    jQuery(this)[0].checked = false;\r\n                }\r\n            }); // Replaced*/\r\n    \r\n            let test_radio_len = document.getElementsByClassName('test_radio');\r\n            for(let i=0; i<test_radio_len.length; i++) {\r\n                if(test_radio_len[i].getAttribute('id')==test_radio_len[i].getAttribute('data-userans')) {\r\n                    test_radio_len[i].checked = true;\r\n                } else {\r\n                    test_radio_len[i].checked = false;\r\n                }\r\n            }\r\n        }\r\n    \r\n        // correct answer tab\r\n        function correctAnswer() {\r\n            changeBackground(\"correct-ans\");\r\n            previewCorrectAns();\r\n    \r\n            // for showing the correct/incorrect icon\r\n            hideCorIncorIcon();\r\n        }\r\n    \r\n        // for showing correct answer\r\n        function previewCorrectAns() {\r\n        /*    jQuery(mainId+\" .test_radio\").each(function () {\r\n                if (jQuery(this).attr('value') == jQuery(this).attr('data-correct')) {\r\n                    jQuery(this)[0].checked = true;\r\n                } else {\r\n                    jQuery(this)[0].checked = false;\r\n                }\r\n            });   //Replaced     */ \r\n    \r\n            let test_radio = document.querySelectorAll((mainId+\" .test_radio\"));\r\n            for( let i = 0; i < test_radio.length; i++ ) {\r\n                if(test_radio[i].getAttribute('value') == test_radio[i].getAttribute('data-correct')) {\r\n                    test_radio[i].checked = true;\r\n                } else {\r\n                    test_radio[i].checked = false;\r\n                }\r\n            }\r\n            \r\n        }\r\n    \r\n        /////// This function setReview mode ////////////// \r\n        function modeOn() {\r\n            window.isReviewMode = true;\t\r\n           // jQuery(mainId+' #sm_controller').show(); // Replaced\r\n            document.querySelector(mainId+' #sm_controller').style.display = \"block\";\r\n            //jQuery(mainId+\" .test_radio\").attr('disabled', true); // Replaced\r\n            let test_radio = document.querySelectorAll(mainId+\" .test_radio\");\r\n            for(let i = 0; i<test_radio.length; i++) {\r\n                test_radio[i].disabled = true;\r\n            }\r\n            yourAnswer();\r\n            changeBackground(\"your-ans\");\r\n        }\r\n    \r\n        /////// This function unsetReview mode //////////////  \r\n        function modeOff() {\r\n                window.isReviewMode = false;\r\n           // jQuery(\".test_radio\").attr('disabled', false); /// replace \r\n           let len = document.getElementsByClassName('test_radio').length;\r\n           for(let i = 0; i<len; i++) {\r\n             document.getElementsByClassName('test_radio')[i].disabled = false;\r\n           }\r\n          // document.getElementsByClassName('test_radio').disabled = false;\r\n          //  jQuery('#sm_controller').hide(); replaced\r\n          setTimeout(function(){\r\n            document.querySelector(\"#sm_controller\").style.display = \"none\";\r\n          },200);\r\n            \r\n    \r\n           \r\n            hideCorIncorIcon();  \r\n            //jQuery(\".dbg-success input:checked\").siblings(\".label_choice\").attr(\"title\",\"\"); // Replaced\r\n\r\n            // AH.select(\".dbg-success input\",\"checked\").forEach((_elm)=>{\r\n            //     AH.siblings(_elm,\".label_choice\").forEach((_e)=>{\r\n            //         _e.setAttribute(\"title\",\"\")                    \r\n            //     })\r\n            // }); Fix\r\n            \r\n            \r\n            //jQuery(\".dbg-danger input:checked\").siblings(\".label_choice\").attr(\"title\", \"\"); // Replaced\r\n\r\n            // AH.select(\".dbg-danger input:checked\").forEach((_elm)=>{\r\n            //     AH.siblings(_elm,\".label_choice\").forEach((_e)=>{\r\n            //         _e.setAttribute(\"title\",\"\")                    \r\n            //     })\r\n            // }); Fix\r\n        }\r\n    \r\n        /////// Changing the background color//////////////\r\n        function changeBackground(btn) {\r\n           //jQuery(mainId+' #sm_controller button').removeClass(\"active\"); // Replaced \r\n            AH.removeClass(mainId+' #sm_controller button',\"active\")\r\n           // jQuery(mainId+' #sm_controller .' + btn + '').addClass(\"active\"); // Replaced\r\n            AH.addClass(mainId+' #sm_controller .' + btn + '',\"active\")\r\n        }\r\n    \r\n        // This function showing correct or incorrect icon////////////////\r\n        function showCorIncorIcon() {     \r\n            //jQuery(\".dbg-success input:checked\").siblings(\".fa-check\").css({ \"display\": \"inline-flex\" }); // Replaced\r\n            // debugger;\r\n            AH.select(\".dbg-success input\",\"checked\").forEach((_elm)=>{\r\n                AH.siblings(_elm,'.fa-check').forEach((_e)=>{\r\n                    _e.style.display = \"inline-flex\";\r\n                });\r\n            })\r\n            \r\n            \r\n            //jQuery(\".dbg-danger input:checked\").siblings(\".fa-close\").css({ \"display\": \"inline-flex\" });\r\n\r\n            AH.select(\".dbg-danger input\",\"checked\").forEach((_elm)=>{\r\n                AH.siblings(_elm,'.fa-close').forEach((_e)=>{\r\n                    _e.style.display = \"inline-flex\";\r\n                });\r\n            })\r\n\r\n\r\n            //jQuery(\".dbg-success input\").removeAttr(\"as\"); // Replaced\r\n            AH.selectAll('.dbg-success input').forEach((_this)=>{\r\n                _this.removeAttr('as');\r\n            }); // Fix\r\n        \r\n            \r\n            //jQuery(\".dbg-danger input\").removeAttr(\"as\"); // Replaced\r\n            AH.selectAll('.dbg-danger input').forEach((_this)=>{\r\n                _this.removeAttr('as');\r\n            }); // Fix\r\n            \r\n\r\n            //jQuery(\".dbg-success input:checked\").attr(\"as\",1); // Removed\r\n            AH.select(\".dbg-success input\",\"checked\").forEach((_succRem)=>{\r\n                _succRem.setAttribute(\"as\",1);\r\n            })\r\n\r\n            //jQuery(\".dbg-danger input:checked\").attr(\"as\", 0); // Removed\r\n            \r\n            AH.select(\".dbg-success input\",\"checked\").forEach((_dangRem)=>{\r\n                _dangRem.setAttribute(\"as\",0);\r\n            })\r\n\r\n\r\n             //jQuery(\".dbg-success input:checked\").siblings(\".label_choice\").attr(\"title\",\"is marked as correct\");\r\n            AH.select(\".dbg-success input\",\"checked\").forEach((_elm)=>{\r\n                AH.siblings(_elm,'.label_choice').forEach((_e)=>{\r\n                    _e.setAttribute(\"title\",\"is marked as correct\");\r\n                });\r\n            })\r\n\r\n\r\n            //jQuery(\".dbg-danger input:checked\").siblings(\".label_choice\").attr(\"title\", \"is marked as incorrect\");\r\n            AH.select(\".dbg-danger input\",\"checked\").forEach((_elm)=>{\r\n                AH.siblings(_elm,'.label_choice').forEach((_e)=>{\r\n                    _e.setAttribute(\"title\",\"is marked as incorrect\");\r\n                });\r\n            })\r\n        }\r\n    \r\n        /////// Hiding correct or incorrect answer ////////////////\r\n        function hideCorIncorIcon() {\r\n            \r\n            //jQuery(\".fa-check\"); // Replaced\r\n             //jQuery(\".fa-close\").hide(); // Replaced\r\n            let hide_icon_length =  document.getElementsByClassName('fa-check');\r\n            let hide_icon_length1 = document.getElementsByClassName('fa-close');\r\n            for (let i=0; i<hide_icon_length.length; i++) {\r\n                hide_icon_length[i].style.display = 'none';\r\n                hide_icon_length1[i].style.display = 'none';\r\n            }\r\n        }\r\n    \r\n        // for setting the icon style\r\n       function setIconStyle(ie) {\r\n            if(ie == true) {\r\n                return({\r\n                    paddingLeft: '14px',\r\n                    display: 'inline-flex',\r\n                    position: 'absolute'\r\n                });\r\n            } else {\r\n                return({\r\n                    paddingLeft:\"15px\",\r\n                    display: 'none',\r\n                    position: 'absolute'\r\n                }); \r\n            }\r\n        }\r\n        \r\n        \r\n        \r\n    </script>\r\n        <main>\r\n                <div id = \"choicemain\" style = {'margin-bottom:20px'}>\r\n                    <center>\r\n    \r\n                        <button type = \"button\" class = \"h h-imp\" id = \"set-review\" on:click = {()=>{modeOn()}}></button>\r\n                        <button type = \"button\" class = \"h h-imp\" id = \"unset-review\" on:click = {()=>{previewUserAns(),modeOff()}}></button>\r\n                        <div\r\n                            class = \"btn-group clearfix review\"\r\n                            id = \"sm_controller\"\r\n                            style = {'display:none'}\r\n                        >\r\n                            <button\r\n                                type = \"button\"\r\n                                class = \"btn correct-ans btn-light\"\r\n                                on:click = {correctAnswer}\r\n                            >Correct Answer</button>\r\n                            <button\r\n                                type = \"button\"\r\n                                class = \"btn your-ans btn-light\"\r\n                                on:click = {yourAnswer}\r\n                            >Your Answer</button>\r\n                        </div>  \r\n                    </center>\r\n                    <center>\r\n                        <table class = {\"table table-bordered testmode_table \"} id=\"test_table\" style=\"{'position:relative, margin-top:20px,width:'+state.maxWidth+\"px\"}};font-family: Georgia;\">\r\n                            <thead>\r\n                                <tr class = \"table-head\">\r\n                                    <th\r\n                                        class = {\"preview_header \" + ((state.theme !== \"theme3\") ? \"text-center text-white\" : \"text-center\")}\r\n                                        tab-index = \"0\"\r\n                                        style = \"background-color:{theme_color[state.theme]}\"\r\n                                        \r\n                                    >{state.stem}</th>\r\n                                    {#if state.cdata}\r\n                                        {#each state.cdata.option as data, i} \r\n                                            <th\r\n                                                key = {i}\r\n                                                class = {\"preview_header adjust_width \" + ((state.theme !== \"theme3\") ? data.id + \"text-center text-white\" : data.id + \"text-center\")}\r\n                                                tab-index = \"0\"\r\n                                                style = \"background-color:{theme_color[state.theme]}\"\r\n                                            >{data.text}</th>\r\n                                        {/each}\r\n                                    {/if}\r\n                                </tr> \r\n                            </thead>\r\n                            <tbody>\r\n                                {#if cm.cdata}\r\n                                {#each cm.cdata.term as data,i} \r\n                                <tr key = {i}>\r\n                                    <td\r\n                                        class = {data.id}\r\n                                        tab-index = \"0\"\r\n                                        style = \"background-color:{(((i % 2) == 0)?(theme_color_terms[state.theme]): \"#FFF\")};font-size:14pt;vertical-align:middle;font-family:{state.font}\"\r\n                                    >{data.text}</td>\r\n                                    \r\n                                    {#each cm.cdata.option as data2, j} \r\n                                    <td\r\n                                    key = {j}\r\n                                    id = {'tb' + (i) + (j)}\r\n                                    tabindex = {0}\r\n                                    class = {\"text-center test_area \" + ((data2.id == data.correct) ? \"dbg-success\" : \"dbg-danger\")} \r\n                                    style = \"background-color:{(((i % 2) == 0)?(theme_color_terms[state.theme]): \"#FFF\")}\"\r\n                                >\r\n                                    <i\r\n                                        class = \"fa fa-check\"\r\n                                        aria-hidden = \"true\"\r\n                                        style = {setIconStyle(isIE)}\r\n                                    ></i>  \r\n                                    <i\r\n                                        class = \"fa fa-close\"\r\n                                        aria-hidden = \"true\"\r\n                                        style = {setIconStyle(isIE)}\r\n                                    ></i>\r\n                                    <input\r\n                                        type = \"radio\"\r\n                                        class = \"test_radio CMRad\"\r\n                                        style = {'vertical-align:middle;'}\r\n                                        value = {data2.id}\r\n                                        name = {\"tm\" + (i + 1)}\r\n                                        id = {'t' + (i) + (j)}\r\n                                        data-termid = {data.id}\r\n                                        data-correct = {data.correct}\r\n                                        data-userans = \"\"\r\n                                        on:click = {setUserAns}\r\n                                        data-role = \"none\"\r\n                                    />\r\n                                    <label tab-index = \"0\" class = {'label_choice customRadCM ' + ((j % 2 == 0) ? \"tureitemColorCM\" : \"falseitemColorCM\")} for={'t' + (i) + (j)}>\r\n                                    </label>\r\n                                </td>\r\n                                    {/each}\r\n                                </tr>\r\n                                {/each}\r\n                                \r\n                                {/if}\r\n                            </tbody>\r\n                        </table>\r\n                    </center>               \r\n                </div>\r\n           </main>\r\n    \r\n           <style>\r\n            .fa-check {\r\n                color: #46A546;\r\n                position:relative;\r\n                left:50px;\r\n            }\r\n            \r\n            .fa-close {\r\n                color: #A80000; \r\n                left:50px;\r\n            }\r\n            \r\n            .fa-close,\r\n            .fa-check {\r\n                margin-left: -26px; \r\n                font-size: 18px; \r\n                position: relative;\r\n                bottom: 10px;\r\n            }\r\n            \r\n            .fa-close,\r\n            .fa-check,\r\n            .middle_align {\r\n                vertical-align: middle!important;\r\n            }\r\n            \r\n            .middle_align {\r\n                width: 164px;\r\n                min-width: 164px;\r\n            } \r\n            \r\n            .topic_input {\r\n                min-width: 257px;\r\n            }\r\n            \r\n            .preview_header {\r\n                font-size: 16pt;\r\n                font-weight: bold;\r\n                vertical-align: middle;\r\n            }\r\n            \r\n            .adjust_width {\r\n                width: 10%;\r\n                text-align: center;\r\n            }\r\n            \r\n            </style>   "
  ],
  "names": [],
  "mappings": "AAgpBY,SAAS,cAAC,CAAC,AACP,KAAK,CAAE,OAAO,CACd,SAAS,QAAQ,CACjB,KAAK,IAAI,AACb,CAAC,AAED,SAAS,cAAC,CAAC,AACP,KAAK,CAAE,OAAO,CACd,KAAK,IAAI,AACb,CAAC,AAED,uBAAS,CACT,SAAS,cAAC,CAAC,AACP,WAAW,CAAE,KAAK,CAClB,SAAS,CAAE,IAAI,CACf,QAAQ,CAAE,QAAQ,CAClB,MAAM,CAAE,IAAI,AAChB,CAAC,AAED,uBAAS,CACT,uBAAS,CACT,aAAa,cAAC,CAAC,AACX,cAAc,CAAE,MAAM,UAAU,AACpC,CAAC,AAED,aAAa,cAAC,CAAC,AACX,KAAK,CAAE,KAAK,CACZ,SAAS,CAAE,KAAK,AACpB,CAAC,AAED,YAAY,cAAC,CAAC,AACV,SAAS,CAAE,KAAK,AACpB,CAAC,AAED,eAAe,cAAC,CAAC,AACb,SAAS,CAAE,IAAI,CACf,WAAW,CAAE,IAAI,CACjB,cAAc,CAAE,MAAM,AAC1B,CAAC,AAED,aAAa,cAAC,CAAC,AACX,KAAK,CAAE,GAAG,CACV,UAAU,CAAE,MAAM,AACtB,CAAC"
}