{"version":3,"file":"AlignMatchPreview-ad24e870.js","sources":["../../../clsSMAlignMatch/showAnswer.svelte","../../../clsSMAlignMatch/AlignMatchPreview.svelte"],"sourcesContent":["<script>\n    export let jsondataCategory;\n    export let objValues;\n    export let state;\n    export let correct_ans_bg = '';\n    export let your_ans_class = '';\n    export let user_ans_table;\n</script>\n{#if jsondataCategory}\n    <table class=\"table\" id=\"alignmatch-table\">\n        <tbody>\n            <tr class=\"remedcolumn height50\">\n                {#each jsondataCategory.categories as obj}\n                    <td key={obj.text + '_' + obj.id} class=\"steel-bg\">\n                        <h3 tabindex=\"0\" class=\"m-0 font-italic\">{obj.text}</h3>\n                    </td>\n                {/each}\n            </tr>\n            {#each objValues as rowTagWise, i}\n                <tr key={i} class=\"{correct_ans_bg} remedcolumn row_{i + 1}\">\n                    {#if rowTagWise }\n                        {#each rowTagWise as col, ind}\n                            <td key={ind} col={col.id} class='position-relative {your_ans_class} align-middle column_{ind + 1}'>\n                                {#if user_ans_table == 1}\n                                    {#if col.imagealt && col.imageurl && state.userAnswerArr[col.tags][ind].imageurl != ''}\n                                        <img\n                                            class=\"imagData\"\n                                            src=\"//s3.amazonaws.com/jigyaasa_content_static//{state.userAnswerArr[col.tags][ind].imageurl}\"\n                                            tabindex=\"0\"\n                                            alt=\"{col.imagealt}\"\n                                            title=\"{col.imagealt}\"\n                                        />\n                                    {:else if col.label != ''}\n                                        <div\n                                            class=\"elementText\"\n                                            tabindex=\"0\"\n                                            title=\"{col.label}\"\n                                        >{ @html state.userAnswerArr[col.tags][ind].label }</div>\n                                    {/if}\n                                {:else}\n                                    {#if col.imagealt && col.imageurl && col.imageurl != ''}\n                                        <div>\n                                            <img\n                                                class=\"imagData\"\n                                                src=\"//s3.amazonaws.com/jigyaasa_content_static//{col.imageurl}\"\n                                                tabindex=\"0\"\n                                                alt=\"{col.imagealt}\"\n                                                title=\"{col.imagealt}\"\n                                            />\n                                        </div>\n                                    {:else if col.label != ''}\n                                        <div\n                                            class=\"elementText\"\n                                            tabindex=\"0\"\n                                            title={col.label}\n                                        >{ @html col.label }</div>\n                                    {/if}\n                                {/if}\n                            </td>\n                        {/each}\n                    {/if}\n                </tr>\n            {/each}\n        </tbody>\n    </table>\n{/if}","<!--\n *  File Name   : AlignMatchPreview.svelte\n *  Description : Container for AlignMatch preview Module\n *  Author      : Rashmi Kumari\n *  Package     : pe-items\n *  Last update : 05-Jan-2021\n *  Last Updated By : Rashmi Kumari\n-->\n<script>\n    import { onMount, afterUpdate } from \"svelte\";\n    import { XMLToJSON, AH, onUserAnsChange} from '../helper/HelperAI.svelte';\n    import ItemHelper from '../helper/ItemHelper.svelte';\n    import ShowAnswer from './showAnswer.svelte';\n    import l from '../src/libs/editorLib/language';\n    import './css/alignmatch.min.css';\n    \n    export let xml;\n    export let uxml;\n    export let showAns;\n    export let isReview;\n    export let updateCSV;\n    export let editorState;\n    const CORRECT = 2,\n        INCORRECT = 0;\n    let jsonData = {},\n        state = {\n            // contains xml\n            xml: \"\",\n            // not used\n            content: \"\",\n            // not used\n            settings: \"\",\n            // shows the remediation status\n            remediationState: false,\n            // allowed to perform the task\n            gameStatus: false,\n            // used for set the match container width\n            maxWidth: \"\",\n            // contains user answer performed\n            userAnswerArr: [],\n            // used to set the height of the categories item container\n            imgHeight: \"\",\n            // not used\n            idCheck: 0,\n            correct_match: []\n        }\n    // contains userXML\n    let userXML = {};\n    let windowwidth;\n    let targetView      = \"none\";\n    let isAnswerCorrect = []; //used for coloring of individual row(true: green row, false: red row)\n    let blnAllAttempted = false; //used to check if all the questions are attempted and correct atleast once, if firstTime correct then accidently incorrect, it doesn't matter. At least once correct.\n    let correctAnswerArray = []; //stores correct Answer tagWise\n    let obj = [], tmpArr = [], noOfQuestions;\n    // contains correct attemped by user\n    let ignoreItemIdKeys =  [];\n    // contains the items id which not exist in 'correctAnswerArray' array\n    let ignoreItemIds = [];\n    onMount(() => {\t\n        state.xml = xml;\n        state.uxml = uxml;\n        if (state.uxml == '<smans type=\"35\"></smans>' || state.uxml == '<SMANS></SMANS>') {\n            // sets the user answer xml value blank if task not performed by user\n            state.uxml = '';\n        }\n        /* @saquib:Added this condition due to usexml break*/\n        if (state.uxml && state.uxml.includes(\"&useransxml=\")) {\n            // replaces the string '&useransxml=' to blank of user answer xml \n            let replacedVal = state.uxml.replace(\"&useransxml=\", \"\");\n            // re-set the value of user answer xml after remove the string '&useransxml='\n            state.uxml = replacedVal;\n        }\n        loadModule(xml);\n        if (editorState && editorState.isCSV) {\n            // updates the value of props isCSV\n            updateElements('csv'); // update elements\n        }\n    });\n\n    afterUpdate(() => {\n        if (ignoreItemIdKeys.length > 0) {\n            if (!blnAllAttempted) {\n                ignoreItemIdKeys.forEach( (i, id) => {\n                    // contains the value of key 'tags' of item have id equals to the value of variable 'id'\n                    let tag = obj[id].tags;\n                    correctAnswerArray[tag].slice(1).forEach( (i, val) => {\n                        // contains the items id which not exist in 'correctAnswerArray' array\n                        ignoreItemIds.push(val.id);\n                    });\n                });\n            }\n        }\n    });\n\n    $: {\n        loadModule(xml);\n\t\tif (isReview) {\n            targetView = \"block\";\n            setReview();\n\t\t} else {\n            targetView = \"none\";\n            unsetReview();\n            updateElements();\n        }\n\t}\n\n    // loads the module according to the value of question xml and user xml\n    function loadModule(loadXml) {\n        reverseToInitial();\n        // contains json data of xml\n        loadXml = XMLToJSON(loadXml);\n        // updates the xml after parsing the xml and shows answer\n        parseXMLPreview(loadXml);\n        // update the image after trigger the loaded event\n        updateImage();\n    }\n\n    // update the image after trigger the loaded event\n    function updateImage() {\n        AH.selectAll(\".elementContainer\").forEach(function () {\n            // it is category selector\n            let element_id = this;\n            AH.find(element_id, 'img', 'all').forEach(function (j, val) {\n                // contains index of the category\n                let id = AH.select(val).getAttribute('data-check');\n                // removes the value of height from item container that exist inside current category\n                AH.select('.categoryitemcontainer_' + id).height = '';\n                // removes the value of height from previous button that exist inside current category\n                AH.select('.prevbutton_' + id).height = '';\n                // removes the value of height from next button that exist inside current category\n                AH.select('.nextbutton_' + id).height = '';\n                // fired the load event to the element equals the value of variable 'val'\n                AH.select(val).trigger(\"load\");\n            });\n        });\n    }\n\n    // updates the xml after parsing the xml and shows answer\n    function parseXMLPreview(MYXML) {\n        // sets the value of state maxWidth\n        state.maxWidth = ((MYXML.smxml._maxwidth) ? MYXML.smxml._maxwidth : 800);\n        // contains the value of cdata\n        jsonData = JSON.parse(MYXML.smxml.__cdata);\n        // creates temporary array obj & temporary array tmpArr\n        jsonData.item.items.forEach(function (item) {\n            // contains data of array key 'items' defined at index equals to the value of variable 'key' \n            obj[item.id] = item;\n        });\n        // contains no of question exist\n        noOfQuestions = jsonData.item.items.length / jsonData.category.categories.length;\n        correctAnswerArray = [];\n        state.correct_match = [];\n        jsonData.item.items.forEach(function (value, seq) {\n            if (correctAnswerArray[value.tags] == null) {\n                // makes value blank at index equals to the value of key 'tags' of object defined in variable 'value' of array correctAnswerArray\n                correctAnswerArray[value.tags] = [];\n                // makes value blank at index equals to the value of key 'tags' of object defined in variable 'value' of array tmpArr\n                tmpArr[value.tags] = [];\n            }\n            correctAnswerArray[value.tags].push(value);\n            // pushes the object defined in variable 'value' into array defined at index equals to the value of key 'tags' of object defined in variable 'value'\n            tmpArr[value.tags].push(value);\n            state.correct_match['category_' + seq] = false;\n            value.sequence = seq;\n        });\n        // used to check that user answer value is defined in array tmpArr or not\n        let tmpArrDone = false;\n        if (xml != undefined && (state.uxml != '' && state.uxml != undefined)) {\n            // contains json data of user answer xml\n            userXML = JSON.parse(state.uxml);\n            // shows the answer (Correct/Incorrect)\n            displayAnswer();\n            // destruct the array have value equals to the value of key 'correct_attempt' of userXML object\n            Object.keys(userXML.items).forEach((itemArr) => {\n                if (userXML.items[itemArr].slice(-1)[0] == 2) {\n                    // sets the value 'true' at index equals to the value of variable 'itemKey' of array isAnswerCorrect\n                    isAnswerCorrect[itemArr] = true;\n                }\n            });\n            // contains true if attemped question equals to the no of exist question otherwise contains false\n            blnAllAttempted = (userXML.correct_attempt.length === noOfQuestions);\n            if (blnAllAttempted) {\n                // apply the opacity '0.7' and cursor style 'not-allowed' and adds class complete to the Match container\n                AH.selectAll('.alignTestarea', 'addClass', 'complete');\n                AH.setCss(\".categorycontainer\", {'opacity': '0.7','cursor': 'not-allowed'});\n                // disabled the 'Match' button\n                AH.select('.matchbutton').disabled = true;\n            }\n            // returns enumerable properties of a simple array.\n            let firstRowIds = Object.keys(userXML.items);\n            // checks for blank question exist or not\n            let blnQueExists;\n            for (let i in tmpArr) {\n                for (let j in tmpArr[i]) {\n                    if (j == 0) {\n                        // defines the value true or false according to the matched condition\n                        blnQueExists = firstRowIds.indexOf(tmpArr[i][j].id) > -1;\n                    } else if (!blnQueExists) {\n                        // sets the value of multi-dimention array tmpArr at row equals to the value of variable 'i' and column equals to the value of variable 'j'\n                        tmpArr[i][j] = {\n                            // defines the value blank of key 'imageurl'\n                            imageurl: '',\n                            // defines the value 'Unattempted' of key 'label' \n                            label: 'Unattempted'\n                        }\n                    } else if (blnQueExists) {\n                        // contains value of item id from the value of 'id' key defined at row equals to the value of variable 'i' and column 0 of multi-dimention array 'tmpArr' \n                        let queId = tmpArr[i][0].id;\n                        // contains the value defined at row equals to the value of variable 'queId' and column equals to the value of variable 'j' - 1\n                        let _uXmlAnsItem = userXML.items[queId][j - 1];\n                        // sets the value of multi-dimention array tmpArr at row equals to the value of variable 'i' and column equals to the value of 'j' to the value of key equals to the value of variable '_uXmlAnsItem' of object obj\n                        tmpArr[i][j] = obj[_uXmlAnsItem];\n                    }\n                }\n            }\n            // sets the value 'true' of variable 'tmpArrDone'  to show that user answer value is defined in tmpArr array\n            tmpArrDone = true;\n        }\n\n        if (!tmpArrDone) {\n            for (let i in tmpArr) {\n                for (let j in tmpArr[i]) {\n                    if (j > 0) {\n                        // sets the value of multi-dimention array tmpArr at row equals to the value of variable 'i' and column equals to the value of variable 'j'\n                        tmpArr[i][j] = {\n                            imageurl: '',\n                            imagealt: '',\n                            label: 'Unattempted'\n                        }\n                    }\n                }\n            }\n        }\n\n        // sets the value of state userAnswerArr\n        state.userAnswerArr = tmpArr;\n        // sets the value of state xml\n        state.xml = jsonData;\n        // allow to start the game\n        beginGame();\n    }\n\n    // shows the answer (Correct/Incorrect)\n    function displayAnswer() {\n        // contains true or false according to match the condition\n        let blnAllCorrect = (userXML.answer && userXML.answer == CORRECT);\n        // shows correct or incorrect according to the value of variable 'blnAllCorrect'\n        if(editorState)  {\n            showAns(blnAllCorrect ? 'Correct' : 'Incorrect');\n        } else {\n            AH.select(\"#answer\").checked = blnAllCorrect;\n            if (!editorState && state.uxml && state.uxml != '') {\n                let blnAllCorrectStatus = blnAllCorrect ? true : false; \n                onUserAnsChange({uXml: state.uxml, ans: blnAllCorrectStatus});\n            }\n        }\n    }\n\n    // return an array that contains the value of that properties which are the own properties of object not inherited properties which is passed in argument at the time of function calling \n    function objectValues(obj) {\n        let res = [];\n        for (let index in obj) {\n            if (obj.hasOwnProperty(index)) {\n                // pushes the value of key that is equals to the value of variable 'index' of object 'obj'\n                res.push(obj[index]);\n            }\n        }\n        // not clear what does it work\n        window.prettifyContent && prettifyContent({\n            imgAltText: 1,\n            container: ['#alignmatch-table']\n        });\n        // returns the array res\n        return res;\n    }\n\n    // sets the height of next, previous buttons and also of category item container\n    function onImgLoad(event) {\n        // contains the index of the category in which this image lies\n        let id = event.target.getAttribute('data-check');\n        // contains the height of the item container including keyword 'px'\n        let containerHeight = AH.select('.categoryitemcontainer_' + id).style.height;\n        // contains the value after reducing 11 from the value of height \n        let elementContainerHeight = containerHeight.substr(0, containerHeight.indexOf(\"p\")) - 11;\n        // contains real height of the image\n        let height = event.target.naturalHeight;\n        if (elementContainerHeight != '' && elementContainerHeight != null && !isNaN(elementContainerHeight)) {\n            if (elementContainerHeight <= height) {\n                // sets the value of state 'height'\n                state.imgHeight = height;\n                // used to set the height of item container and of next, previous buttons\n                updateColumnHeight(state.imgHeight, id);\n            }\n        } else {\n            // sets the value of state 'height'\n            state.imgHeight = height;\n            // used to set the height of item container and of next, previous buttons\n            updateColumnHeight(state.imgHeight, id);\n        }\n    }\n\n    // used to set the height of item container and of next, previous buttons\n    function updateColumnHeight(height, index) {\n        // sets the height of item container of category have index defined in variable 'index'\n        AH.select('.categoryitemcontainer_' + index).style.height = (height + 11) + \"px\";\n        // sets the height of item previous button of category have index defined in variable 'index'\n        AH.select('.prevbutton_' + index).style.height = (height + 50) + \"px\";\n        // sets the height of item next button of category have index defined in variable 'index'\n        AH.select('.nextbutton_' + index).style.height = (height + 50) + \"px\";\n    }\n\n    // shows the item randomly after click on next or previous button and in case of csv it updates the value of props isCSV\n    function updateElements(action) {\n        setTimeout(function () {\n            AH.selectAll(\".categoryinnercontainer \", 'all').forEach(function (container, i) {\n                AH.find(container, '.element', 'all').forEach(function (val, k) {\n                    // sets unique id attribute of each items lies in same category\n                    val.setAttribute('id', 'element_' + (k + 1));\n                    val.style.display = 'none';\n                });\n                // contains number of questions exist\n                let eleLen = AH.find(container, '.element', 'all').length;\n                // contains the random number that cab be 1 to value of variable 'eleLen'\n                let toShow = Math.floor(Math.random() * eleLen) + 1;\n                // shows the item have id 'element_' + value of the variable 'toShow' inside the category at index equals to the value of variable 'key'\n                AH.select('.categoryitemcontainer_'+ i + ' #element_' + toShow).style.display = '';\n            });\n        }, 200);\n\n        if (action == 'csv') {\n            setTimeout(function () {\n                // sets the value 'false' of prop isCSV \n                updateCSV('csv', false);\n                console.log(\"csv Updated\");\n            }, 1200);\n        }\n    }\n\n    // allow to start the game\n    function beginGame() {\n        setTimeout(function () {\n            if (!blnAllAttempted) {\n                // sets the value 'true' of state gameStatus that allow to perform the task\n                state.gameStatus = true\n            }\n        }, 200);\n    }\n\n    // sets the value 'false' of state gameStatus\n    function reverseToInitial() {\n        state.gameStatus = false;\n    }\n\n    // For ADA\n    function keydownAda(event) {\n        if (event.which === 13) {\n            // click the textarea element or image upload icon on which keydown\n            this.click();\n        }\n    }\n\n    function prevbutton() {\n        if (!blnAllAttempted) {\n            // selects next sibling item that have class 'categoryinnercontainer'\n            let categoryinnercontainer = AH.nextElm(this, '.categoryinnercontainer');\n            // selects items that is visible in that category which previous button clicked\n            let catInnerImg;\n            AH.find(categoryinnercontainer, '.categoryitemcontainer .categoryiteminnercontainer .element', 'all').forEach(function (i) {\n                if(getComputedStyle(i, null).display == 'table-cell') {\n                    catInnerImg = i;\n                }\n            });\n            if (catInnerImg && AH.prevElm(catInnerImg)) {\n                // shows previous sibling item and hides current item of that category whicn previous button clicked \n                AH.prevElm(catInnerImg).style.display = '';\n                AH.nextElm(AH.prevElm(catInnerImg)).style.display = 'none';\n            } else {\n                // hides the currently visible item that exist in that category which previous button clicked\n                if (catInnerImg) {\n                    catInnerImg.style.display = 'none';\n                }\n                // hides all items inside that category which previous button clicked and shows the last item\n                AH.find(categoryinnercontainer, '.categoryitemcontainer .categoryiteminnercontainer .element').style.display = 'none';\n                AH.find(categoryinnercontainer, '.categoryitemcontainer .categoryiteminnercontainer .element:last-child').style.display = '';\n            }\n            return false;\n        }\n    }\n\n    function nextbutton() {\n        if (!blnAllAttempted) {\n            // selects previous sibling item that have class 'categoryinnercontainer'\n            let categoryinnercontainer = AH.prevElm(this, '.categoryinnercontainer');\n            let catInnerImg;\n            // selects items that is visible in that category which next button clicked\n            AH.find(categoryinnercontainer, '.categoryitemcontainer .categoryiteminnercontainer .element', 'all').forEach(function (i) {\n                if(getComputedStyle(i, null).display == 'table-cell') {\n                    catInnerImg = i;\n                }\n            });\n            if (catInnerImg && AH.nextElm(catInnerImg)) {\n                // shows next sibling item and hides current item of that category whicn next button clicked \n                AH.nextElm(catInnerImg).style.display = '';\n                AH.prevElm(AH.nextElm(catInnerImg)).style.display = 'none';\n            } else {\n                // hides the currently visible item that exist in that category which next button clicked\n                if (catInnerImg) {\n                    catInnerImg.style.display = 'none';\n                }\n                // hides all items inside that category which next button clicked and shows the first item\n                AH.find(categoryinnercontainer, '.categoryitemcontainer .categoryiteminnercontainer .element').style.display = 'none';\n                AH.find(categoryinnercontainer, '.categoryitemcontainer .categoryiteminnercontainer .element:first-child').style.display = '';\n            }\n            return false;\n        }\n    }\n\n    function setReview() {\n        isReview = true;\n        targetView = \"block\";\n        setTimeout(function() {\n            AH.selectAll('.your_ans_td:first-child').forEach((tdval) => {\n                let td_id = tdval.getAttribute('col');\n                if(isAnswerCorrect[td_id]) {\n                    AH.parent(tdval).classList.add('typeCorrect');\n                } else {\n                    AH.parent(tdval).classList.add('typeIncorrect');\n                }\n            }, 100);\n        });\n        // shows the answer (Correct/Incorrect)\n        displayAnswer();\n    }\n\n    function unsetReview() {\n        targetView = \"none\";\n        isReview = false;\n    }\n\n    function matchButton() {\n        if (!blnAllAttempted) {\n            // selects the closest element that have class 'alignTestarea' when click on match button\n            let alignTestarea = this.closest('.alignTestarea');\n            // selects the visible items inside container category\n            let visibleEle = [];\n            AH.find(alignTestarea, '.categorycontainer .categoryinnercontainer .categoryitemcontainer .categoryiteminnercontainer .element', 'all').forEach(function(val) {\n                if(getComputedStyle(val, null).display == 'table-cell') {\n                    visibleEle = [...visibleEle, val];\n                }\n            });\n            let tagName, firstTagName;\n            let blnCorrect = null;\n            let currentItem = null;\n            let mainKey = null;\n            visibleEle.forEach(function (value, key) {\n                // contains the value of 'data-tags' attribute of element defined in variable 'value'\n                tagName = value.getAttribute('data-tags');\n                // used for contain the item value\n                let itemValue;\n                if (key == 0) {\n                    // sets the value of variable 'tagName' to variable 'firstTagName'\n                    firstTagName = tagName;\n                }\n                if (AH.find(value, 'img')) {\n                    // contains value of src attribute of img tag exist inside the element defined in variable 'value'\n                    itemValue = AH.find(value, 'img').getAttribute('src');\n                } else {\n                    // contains text of div element exist inside the element defined in variable 'value'\n                    itemValue = AH.find(value, 'div').textContent;\n                }\n                /**userXML generation start*/\n                // contains all the items available\n                let items = state.xml.item.items;\n                //changed to for in loop\n                for (let i in items) {\n                    // contains value exist at index 'i' of array 'items'\n                    let qxmlItem = items[i];\n                    if (qxmlItem.tags == tagName) {\n                        // contains image src or text according to the value of key 'imageurl' of object qxmlItem\n                        let valueOfItem = ((qxmlItem.imageurl) ? '//s3.amazonaws.com/jigyaasa_content_static//' + qxmlItem.imageurl : qxmlItem.label);\n                        if (valueOfItem == itemValue) {\n                            // contains object qxmlItem\n                            currentItem = qxmlItem;\n                            break;\n                        }\n                    }\n                }\n\n                if (userXML.items == null) {\n                    // defines empty object into the value of items key of object userXML\n                    userXML.items = {};\n                }\n\n                if (key == 0) {\n                    // sets value equals to the value of variable tagName of variable 'blnCorrect'\n                    blnCorrect = tagName;\n                    // contains the value of key 'id' of object 'currentItem'\n                    mainKey = currentItem.id;\n                    // assign blank array at the key have value equals to the value of variable 'mainKey' of key 'items' of object userXML\n                    userXML.items[mainKey] = [];\n                } else {\n                    if (tagName != blnCorrect) {\n                        // sets value 'null' of variable 'blnCorrect'\n                        blnCorrect = null;\n                    }\n                    // pushes the value 'id' key of object currentItem into array defined at key equals to the value of variable 'mainKey'\n                    userXML.items[mainKey].push(currentItem.id);\n                    // defines the object that have key 'imageurl' and 'label' into state object userAnswerArr where array key is equals to the value of variable 'firstTagName' and index is equals to the value of variable 'key' image url and\n                    state.userAnswerArr[firstTagName][key] = {\n                        imageurl: currentItem.imageurl,\n                        label: currentItem.label\n                    }\n                }\n                /**userXML generation end */\n            });\n            // defines the value of variable 'wrongAnswer'\n            let wrongAnswer = (blnCorrect == null);\n            // pushes the value 'CORRECT/INCORRECT' according to the value of variable 'wrongAnswer' into array key 'items' of object userXML\n            userXML.items[mainKey].push(wrongAnswer ? INCORRECT : CORRECT);\n\n            /**storing only the ids of questions that are attempted and correct as least once.\n                ***SECTION START */\n            userXML.correct_attempt = userXML.correct_attempt || [];\n            if (!wrongAnswer && userXML.correct_attempt.indexOf(mainKey) == -1) {\n                // pushes the value of variable 'mainKey' into array key 'correct_attempt' of object userXML\n                userXML.correct_attempt.push(mainKey);\n            }\n            /**SECTION END */\n            // update the value of array isAnswerCorrect have key equals to the value of variable 'mainKey'\n            isAnswerCorrect[mainKey] = !wrongAnswer;\n            // sets the value of state 'userAnswerArr'\n            state.userAnswerArr = state.userAnswerArr;\n            // defines the variable 'correctCount'\n            let correctCount = 0;\n            for (let item in userXML.items) {\n                // contains array defined at key equals to the value of variable 'item' in array key 'items' of object userXML\n                let itemArr = userXML.items[item];\n                if (itemArr.slice(-1)[0] === CORRECT) {\n                    // increases the value of variable 'correctCount' by 1\n                    correctCount += 1;\n                }\n            }\n            // finds total no of question exist\n            let totalcount = AH.selectAll(\".categoryiteminnercontainer:first-child .elementContainer .element\").length;\n            if (typeof calculatePoint != \"undefined\") {\n                // sets the value of variable 'totalcount' to the input element have id 'answer_points' and type hidden and value of the variable 'correctCount' to the input element have id 'user_points' and type hidden\n                calculatePoint(totalcount, correctCount);\n            }\n            // by default sets INCORRECT value of the key 'answer' of userXML object\n            userXML.answer = INCORRECT;\n            if (noOfQuestions === correctCount) {\n                // sets CORRECT value of the key 'answer' of userXML object\n                userXML.answer = CORRECT;\n            }\n            // contains true if attemped question equals to the no of exist question otherwise contains false\n            blnAllAttempted = (userXML.correct_attempt.length === noOfQuestions);\n            if (!wrongAnswer) {\n                // enables reset button if any matching made correct\n                AH.select('#reset_btn').disabled = false;\n                AH.selectAll(\".categoryinnercontainer \", 'all').forEach(function (container, i) {\n                    if (AH.find(container, '.element', 'all').length > 1) {\n                        AH.find(container, '.element', 'all').forEach(function (val) {\n                            // removes the visible element have class 'element' inside the category defined at index equals to the value of variable 'key'\n                            if(getComputedStyle(val, null).display == 'table-cell') {\n                                if (i != 0) {\n                                    state.correct_match[val.getAttribute('seq_no')] = true;\n                                }\n                            }\n                        });\n                        setTimeout(function() {\n                            AH.find(container, '.element', 'all').forEach(function (val, k) {\n                                // sets unique id attribute of each items lies in same category\n                                val.setAttribute('id', 'element_' + (k + 1));\n                                val.style.display = 'none';\n                            });\n                            // contains number of questions exist\n                            let eleLen = AH.find(container, '.element', 'all').length;\n                            // contains the random number that cab be 1 to value of variable 'eleLen'\n                            let toShow = Math.floor(Math.random() * eleLen) + 1;\n                            // shows the item have id 'element_' + value of the variable 'toShow' inside the category at index equals to the value of variable 'key'\n                            AH.select('.categoryitemcontainer_'+ i + ' #element_' + toShow).style.display = '';\n                        }, 100);\n                    } else {\n                        // apply the opacity '0.7' and cursor style 'not-allowed' and adds class complete to the Match container\n                        AH.setCss(\".categorycontainer\", {'opacity': '0.7','cursor': 'not-allowed'});\n                        AH.selectAll('.categorycontainer', 'addClass', \"complete\")\n                        // not allowed click on previous and next button \n                        AH.setCss(\".nextbutton\", {'pointer-events': 'none'});\n                        AH.setCss(\".prevbutton\", {'pointer-events': 'none'});\n                        // disabled the 'Match' button\n                        AH.select('.matchbutton').disabled = true;\n                        // shows game completion message\n                        AH.alert(\"Game Completed!!\");\n                        // shows the answer (Correct/Incorrect)\n                        displayAnswer();\n                    }\n                });\n            } else {\n                // apply shake effect for transition just like as slide\n                if (AH.select(\".categorycontainer \").classList.contains(\"wrong_ans\")) {\n                    AH.selectAll('.categorycontainer', 'removeClass', \"wrong_ans\");\n                }\n                setTimeout(function() {\n                    AH.selectAll('.categorycontainer', 'addClass', \"wrong_ans\");\n                }, 100)\n                // shows the warning message\n                AH.alert(\"Please match all the items correctly.\", 4);\n            }\n            // allow to start the game\n            beginGame();\n            // tells that user xml changed\n            ISSPECIALMODULEUSERXMLCHANGE = 1;\n            // update the user answer xml\n            state.uxml = JSON.stringify(userXML);\n            AH.select(\"#special_module_user_xml\").value = JSON.stringify(userXML);\n            //AH.selectAll('.yourAnswer .remedcolumn td:first-child')\n        }\n    }\n\n    function resetButton() {\n        // makes user answer xml value blank\n        userXML = {};\n        isAnswerCorrect = []; //used for coloring of individual row(true: green row, false: red row)\n        blnAllAttempted = false; //used to check if all the questions are attempted and correct atleast once, if firstTime correct then accidently incorrect, it doesn't matter. At least once correct.\n        correctAnswerArray = []; //stores correct Answer tagWise\n        AH.selectAll('.categorycontainer', 'removeClass', 'complete');\n        AH.setCss(\".categorycontainer\", {'opacity': '1', 'cursor': 'pointer'});\n        // allows click on next and previous button\n        AH.setCss(\".nextbutton\", {'pointer-events': 'auto'});\n        AH.setCss(\".prevbutton\", {'pointer-events': 'auto'});\n        // enabled the 'Match' button\n        AH.select('.matchbutton').disabled = false;\n        // removes performed useranswer\n        state.uxml = '';\n        // makes value blank of state 'xml'\n        state.xml = '';\n        state.correct_match = [];\n        // reload the module after removing user answer that was performed previously\n        loadModule(xml);\n        // shows the first item of each row\n        AH.select('.categoryitemcontainer .categoryiteminnercontainer .elementContainer .element:first-child').style.display = '';\n        // disabled the reset button\n        AH.select('#reset_btn').disabled = true;\n    }\n\n    function handleReviewMode(mode) {\n        if (mode == 'c') {\n            AH.select('.correctAnswer').style.display = 'block';\n            AH.select('.yourAnswer').style.display = 'none';\n        } else if (mode == 'u') {\n            AH.select('.yourAnswer').style.display = 'block';\n            AH.select('.correctAnswer').style.display = 'none';\n        }\n    }\n\n</script>\n<svelte:window bind:innerWidth={windowwidth} />\n<div>\n    <div class=\"switchbutton\">\n        <ItemHelper \n            on:setReview = {setReview}\n            on:unsetReview = {unsetReview}\n            reviewMode={isReview}\n            handleReviewClick = {handleReviewMode}\n        />\n    </div>\n    <div class=\"alignTestarea px-3 mx-auto mt-3 {targetView == 'block' ? 'h' : ''}\" style=\"max-width: { state.maxWidth }\">\n        <div class=\"categorycontainer center-block {(windowwidth > 1200) ? 'span9' : ''}\">\n            {#if state.xml}\n                {#each state.xml.category.categories as datai, index}\n                    <div class=\"row np mb-3\" key={index}>\n                        <div class=\"prevbutton col-lg-1 col-md-1 col-sm-2 col-2 px-sm-3 px-0 prevbutton_{index}\" tabindex={0} title=\"previous\" on:click|preventDefault=\"{prevbutton}\" on:keydown=\"{keydownAda}\">\n                            <span class=\"icomoon-arrow-left font26 btnGrp\"></span>\n                        </div>\n                        <div class=\"categoryinnercontainer p-0 r-lg col-lg-10 col-md-10 col-sm-8 col-8\">\n                            <div class=\"categorytitle card_border\">\n                                <div class=\"font20 text-center text-dark\" tabindex={0} title={datai.text}>{@html datai.text}</div>\n                            </div>\n                            <div class=\"categoryitemcontainer p-1 categoryitemcontainer_{index}\">\n                                <div class=\"categoryiteminnercontainer w-100 h-100 text-center\">\n                                    <div class=\"elementContainer w-100 h-100 d-table\">\n                                        {#each state.xml.item.items as dataj}\n                                            {#if datai.id == dataj.category && (ignoreItemIds.indexOf(dataj.id) == -1)}\n                                                {#if state.correct_match['category_'+ dataj.sequence] == false}\n                                                    <div class=\"element bg-white m-0\" seq_no='category_{dataj.sequence}' key={dataj.id} data-tags={dataj.tags} style=\"display: none\">\n                                                        {#if dataj.imageurl != ''}\n                                                            <img data-check={index} src=\"//s3.amazonaws.com/jigyaasa_content_static//{dataj.imageurl}\" on:load={onImgLoad} class=\"img-fluid\" tabindex={0} alt=\"{(dataj.imagealt) ? dataj.imagealt : \"No alt of image\"}\" title={(dataj.imagealt) ? dataj.imagealt : \"No alt of image\"}/>\n                                                        {:else if dataj.label != ''}\n                                                            <div class=\"elementText\" tabindex={0} title={dataj.label}>{@html dataj.label}</div>\n                                                        {/if}\n                                                    </div>\n                                                {/if}\n                                            {/if}\n                                        {/each}\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"nextbutton col-md-1 col-lg-1 col-sm-2 col-2 px-sm-3 px-0 nextbutton_{index}\" tabindex={0} title=\"next\" on:click=\"{nextbutton}\" on:keydown=\"{keydownAda}\">\n                            <span class=\"icomoon-arrow-right-2 font26 btnGrp\"></span>\n                        </div>\n                    </div>\n                {/each}\n            {/if}\n        </div>\n        <div class=\"text-center\">\n            {#if AH.get('alignMatchReset') == true}\n                <button type=\"button\" id=\"reset_btn\" class=\"btn btn-primary me-sm-2 me-0 mb-2 reset_btn\" disabled=\"disabled\" on:click=\"{resetButton}\">{l.reset}</button>\n            {/if}\n            {#if state.xml}\n                <button type=\"button\" class=\"matchbutton btn btn-primary mb-2\" on:click=\"{matchButton}\">{state.xml.settings.matchButtonText}</button>\n            {/if}\n        </div>\n    </div>\n    {#if targetView == 'block'}\n        <div class=\"finalResult\">\n            <div class=\"scoreDiv\">\n                <div class=\"correctAnswer h\"> \n                    <ShowAnswer jsondataCategory={jsonData.category}  objValues={objectValues(correctAnswerArray)} {state} correct_ans_bg=\"typeCorrect\"/>\n                </div>\n                <div class=\"yourAnswer\">\n                    <ShowAnswer user_ans_table=1 jsondataCategory={jsonData.category}  objValues={objectValues(correctAnswerArray)} {state} your_ans_class=\"your_ans_td\"/>\n                </div>\n            </div>\n        </div>\n    {/if}\n</div>"],"names":["l"],"mappings":"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"}