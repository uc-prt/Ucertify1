{"version":3,"file":"ItemPlugin-096e5784.js","sources":["../../../clsSMStepAlgo/StepAlgo.svelte","../../../clsSMMixedItem/ItemPlugin.svelte"],"sourcesContent":["\r\n<!-- \r\n*  File Name   : StepAlgo.svelte\r\n*  Description : Saving answer tool and question model boxes\r\n*  Author      : Sundaram Tripathi\r\n*  Version     : 1.0\r\n*  Package     : svelte_items\r\n*  Last update :  -->\r\n<script>\r\n    import {writable} from 'svelte/store';\r\n    import { Button, Dialog, Checkbox } from 'svelte-mui/src';\r\n    import l from '../src/libs/editorLib/language.js';\r\n    import { beforeUpdate,onMount } from 'svelte';\r\n    import {AH,XMLToJSON,JSONToXML} from \"../helper/HelperAI.svelte\";\r\n\r\n     window.spanCounter = 0;\r\n    // window.currentId = \"\";\r\n    // window.currentInp = \"\";\r\n    let state = {};\r\n    let new_xml = {}\r\n    var all_steps = [];\r\n    export let stopAuthoringUpdate;\r\n    export let xml;\r\n    export let editorState;\r\n    export let getChildXml;\r\n\r\n    \r\n    \r\n    let stateData = writable({\r\n        xml                         : '',         \r\n        fillInTheBlanksChoice       : 1,\r\n        opened                      : false,\r\n        deleteIndex                 : \"\",\r\n        remediationToggle           : false,\r\n        snackback                   : false,\r\n        input_ans                   : '',\r\n        spanCounter                 : 0,\r\n        currentId                   : '',\r\n        currentInp                  : ''\r\n\r\n    })\r\n\r\n    const unsubscribe = stateData.subscribe((items)=>{\r\n        state = items;\r\n    })\r\n\r\n    onMount(()=>{\r\n        if(xml) {\r\n            new_xml = XMLToJSON(xml);\r\n            showItems(new_xml.smxml.step);\r\n            //jQuery('#sticky_checkbox_0').trigger('click');\r\n            AH.select(\"#sticky_checkbox_0\").click();\r\n            //setTimeout(function() {\r\n                //jQuery('#sticky_checkbox_0').trigger('click');\r\n                AH.select('#sticky_checkbox_0').click();\r\n            //}, 1000);\r\n        }\r\n        setTimeout(function() {\r\n            //jQuery('.save_button_steps').prop('disabled', 'disabled');\r\n            AH.selectAll('.save_button_steps','attr',{disabled:'disabled'});\r\n            initEditor();\r\n        }, 500);\r\n\r\n        // jQuery(document).on(\"click touchstart\", \".editFill\", function() {\r\n\t\t// \tif(jQuery(this).attr(\"type\") == \"t\") {\r\n\t\t// \t\teditTextbox(jQuery(this).attr(\"originalKey\"));\r\n\t\t// \t} else if(jQuery(this).attr(\"type\") == \"e\") {\r\n\t\t// \t\teditMathbox(jQuery(this).attr(\"originalKey\"));\r\n\t\t// \t}\r\n\t\t// })\r\n\r\n        AH.listen(document,'click','.editFill',function(curr,e) {\r\n            if(curr.getAttribute(\"type\") == \"t\") {\r\n                editTextbox(curr.getAttribute(\"originalKey\"));\r\n            } else if(curr.getAttribute(\"type\") == \"e\") {\r\n                editMathbox(curr.getAttribute(\"originalKey\"));\r\n            }\r\n        })\r\n\r\n        AH.listen(document,'touchstart','.editFill',function(curr,e) {\r\n            if(curr.getAttribute(\"type\") == \"t\") {\r\n                editTextbox(curr.getAttribute(\"originalKey\"));\r\n            } else if(curr.getAttribute(\"type\") == \"e\") {\r\n                editMathbox(curr.getAttribute(\"originalKey\"));\r\n            }\r\n        })\r\n\r\n\r\n\r\n    })\r\n\r\n    function editTextbox(key) {\r\n        //console.log('checking');\r\n\t\tkey = key.replace(/%{|}%/g, \"\");\r\n\t\tkey = key.split(\"|\");\r\n\t\tlet ans = key[0].trim();\r\n        \r\n\t\tlet ans_type = ((key[1])?key[1].trim():\"\");\r\n\t\t\r\n            state.numeric = ((ans_type == \"n\")? true : false );\r\n            state.fillInTheBlanksChoice = 1;\r\n            state.open = true;\r\n        \r\n\t\t//this.setState({fillInTheBlanksChoice:1});\r\n\t\t//this.setState({open:true});\r\n\t\tif(ans.indexOf(\"#style#\") != -1) {\r\n\t\t\tlet customStyle  = ans.split(\"#style#\")\r\n\t\t\t//jQuery(\"#responseDialog #customStyleText\").val(customStyle[1]);\r\n            AH.select(\"#responseDialog #customStyleText\").value = customStyle[1];\r\n\r\n\t\t\t//jQUery(\"#input1\").val(customStyle[0]);\r\n            //AH.select(\"#input1\").value = customStyle[0];\r\n            state.input_ans = customStyle[0];\r\n\t\t} else {\r\n\t\t\t//jQuery(\"#input1\").val(ans);\r\n            // setTimeout(()=>{\r\n            //     AH.select(\"#input1\").value = ans;\r\n            // },100)\r\n            state.input_ans = ans;\r\n\t\t}\t\r\n    }\r\n\r\n\r\n    function editMathbox(key) {\r\n\t\tkey = key.replace(/%{|}%/g, \"\");\r\n\t\tkey = key.split(\"|\");\r\n\t\tlet ans = key[0].trim();\r\n\t\tlet ans_type = ((key[1])?key[1].trim():\"\");\r\n\t\t// this.setState({\r\n        //     customStyle:((ans.indexOf(\"#style#\") != -1)?true:false),\r\n        //     fillInTheBlanksChoice:2,\r\n        //     open:true\r\n        // });\r\n        state.customStyle = ((ans.indexOf(\"#style#\") != -1)?true:false);\r\n        state.fillInTheBlanksChoice =2;\r\n        state.open = true;\r\n\t\t//this.setState({fillInTheBlanksChoice:2}); ## ALready commented\r\n\t\t//this.setState({open:true}); ## ALready commented\r\n\r\n\t\tif(ans.indexOf(\"#style#\") != -1) {\r\n\t\t\tlet customStyle  = ans.split(\"#style#\")\r\n\t\t\t//$(\"#responseDialog #customStyleText\").val(customStyle[1]);\r\n            AH.select(\"#responseDialog\").value = customStyle[1];\r\n            AH.select('#customStyleText').value = customStyle[1];\r\n\t\t\t//$(\"#input\"+i).val(customStyle[0]);\r\n            AH.select(\"#input\"+i).value = customStyle[0];\r\n\t\t} else {\r\n            //$(\"#input\").val(ans);\r\n            AH.select(\"#input\").value = ans;\r\n\t\t}\t\r\n\t}\r\n    \r\n    beforeUpdate(()=>{\r\n        if (xml != state.xml) {\r\n            state.xml = xml;\r\n            if (stopAuthoringUpdate === true) return;\r\n            new_xml = XMLToJSON(state.xml);\r\n            showItems(new_xml.smxml.step);\r\n        }\r\n    })\r\n\r\n    function showItems(steps) {\r\n        steps = replaceVariables(steps);\r\n        all_steps = steps;\r\n        setToggle(all_steps);\r\n        parseXmlAuthoring(steps);\r\n    }\r\n\r\n    function setToggle(steps) {\r\n        let toogle = '';\r\n        steps.map(function(item, index) {\r\n            if(item._viewonly == 1) {\r\n                all_steps[index].toggle = 1;\r\n            } else {\r\n                all_steps[index].toggle = 0;\r\n            }\r\n        })\r\n        return all_steps;\r\n    } \r\n\r\n    function replaceVariables(latex_str) {\r\n        let latex_arr = [];\r\n        let latex_arr_check = latex_str;\r\n        if(latex_arr_check.length == undefined && latex_arr_check != \"\") {\r\n            latex_arr.push(latex_arr_check);\r\n        } else {\r\n            latex_arr = latex_arr_check;\r\n        }\r\n        latex_arr.map(function(item, index) {\r\n            let cdata = item.__cdata;\r\n            let vars = cdata.match(/<{[\\s\\S]*?}>/gm);\r\n            if(vars) {\r\n                vars.map(function(element) {\r\n                    let item = element.match(/<\\{(.*?)\\}>/g);\r\n                    item = item.toString().replace(/<\\{|\\}>/g, '');\r\n                    item = \"var:\"+item;\r\n                    item = item.trim();\r\n                    cdata = cdata.replace(element, item);\r\n                });\r\n            }\r\n            latex_arr[index].__cdata = cdata;\r\n        });\r\n        return latex_arr;\r\n    }\r\n\r\n    function parseXmlAuthoring(steps) {\r\n        steps.map(function(item, index) {\r\n            let cdata = item.__cdata;\r\n            let answerKey = cdata.match(/%{[\\s\\S]*?}%/gm);\r\n            let answerType = '';\r\n            if(answerKey) {\r\n                //jQuery(answerKey).each(function(i){\r\n                answerKey.forEach(function(data,i){\r\n                    let originalKey = answerKey[i];\r\n                    let latexKey = \"\";\r\n                    let editMath = \"\";\r\n                    answerType = answerKey[i].match(/\\|(.*?)}%$/gm);\r\n                    answerType = (answerType) ? answerType[0].replace(/\\||}%/gm, '') : 't';\r\n                    let innerKey = \"\";\r\n                    let icon = \"\";\r\n                    let type = \"\";\r\n                    if(answerType == \"t\") {\r\n                        type = answerType;\r\n                        innerKey = \"Textbox\";\r\n                        icon = \"icomoon-insert-template\";\r\n                    } else if(answerType == \"n\") {\r\n                        type = \"t\";\r\n                        innerKey = \"Numeric\";\r\n                        icon = \"icomoon-insert-template\";\r\n                    } else if(answerType== \"e\") {\r\n                        type = answerType;\r\n                        innerKey = \"Math\";\r\n                        latexKey = originalKey.replace(/\\%\\{|\\|e\\}\\%/g, \"\");\r\n                        latexKey = \"latex=\\\"\"+latexKey+\"\\\"\";\r\n                        editMath = \"editMath\";\r\n                        icon = \"icomoon-insert-template\";\r\n                    }\r\n                    var regex = new RegExp(RegExp.quote(originalKey));\r\n                    cdata = cdata.replace(regex, \"<span id=\\\"latexSpan\"+(state.spanCounter = ++state.spanCounter)+\"\\\" \"+latexKey+\" type='\"+type+\"' class='alert alert-info editFill \"+editMath+\"' originalkey='\"+originalKey+\"' style='padding: 5px;outline: none;line-height:40px;cursor:move;color:#000' contentEditable='false'><i style='padding-right:4px' class='\"+icon+\"'></i>\"+innerKey+\"</span>\");\r\n                });\r\n            }\r\n            all_steps[index].__cdata = cdata;\r\n        });\r\n\t}\r\n\r\n\r\n\r\n    function goNext(id) {\r\n        let ref = document.querySelector(\"#\"+id);\r\n        if(ref.checked) {\r\n            state.gonext = true;\r\n            new_xml.smxml._gonext = \"1\";\r\n        } else {\r\n            state.gonext = false;\r\n            new_xml.smxml._gonext = \"0\";\r\n        }\r\n        updateXML();\r\n    }\r\n\r\n    function fixedAnswer(id) {\r\n        let ref = document.querySelector(\"#\"+id);\r\n        if(ref.checked) {\r\n            state.variable_button = true;\r\n            new_xml.smxml._fixed = \"1\";\r\n        } else {\r\n            state.variable_button = false;\r\n            new_xml.smxml._fixed = \"0\";\r\n        }\r\n        updateXML();\r\n    }\r\n\r\n    function handleChangeCheckbox(id, fillid, e) {\r\n        let name = e.target.name;\r\n        let ref = document.querySelector(\"#\"+name+id);\r\n        let val = \"_\"+e.target.value;\r\n        let seq = id;\r\n        if(ref.checked) {\r\n            new_xml.smxml.step[seq][val] = \"1\"; \r\n        } else {\r\n            new_xml.smxml.step[seq][val] = \"0\";\r\n        }\r\n        //let data = jQuery('#'+fillid).html();\r\n        let data = document.querySelector('#'+fillid).innerHTML;\r\n        updateXML();\r\n    }\r\n\r\n\r\n    function handleDisable(i) {\r\n        console.log('handle click');\r\n        //jQuery('#save_step_'+i).removeAttr('disabled');\r\n        AH.select('#save_step_'+i,'removeAttr','disabled');\r\n    }\r\n\r\n    function handleRadio(index, fillid, event) {\r\n        if(all_steps[index].toggle == 1) {\r\n            all_steps[index].toggle = 0\r\n            new_xml.smxml.step[index]._viewonly = \"0\";\r\n            new_xml.smxml.step[index]._attempt = \"1\";\r\n        } else {\r\n            all_steps[index].toggle == 1;\r\n            new_xml.smxml.step[index]._viewonly = \"1\";\r\n            new_xml.smxml.step[index]._attempt = \"0\";\r\n        }\r\n        //let data = jQuery('#'+fillid).html();\r\n        let data = document.querySelector('#'+fillid).innerHTML;\r\n        updateXML();\r\n    }\r\n\r\n    function deleteEvent(index, data) {\r\n        let delete_event;\r\n        if(data == 'steps') {\r\n            delete_event = all_steps;\r\n            if(delete_event.length > 2) {\r\n                const add = delete_event.splice(index, 1);\r\n            } else {\r\n                AH.alert(\"You have atleast 2 steps.\");\r\n            }\r\n        all_steps = delete_event; \r\n        updateXML();\r\n        } else if(data == 'algo') {\r\n            state.opened = true;\r\n            state.deleteIndex = index;\r\n        };\r\n        \r\n    }\r\n\r\n    function handleSave(id, fillid) {\r\n        //let data = jQuery('#'+fillid).html();\r\n        let data = document.querySelector('#'+fillid).innerHTML;\r\n        data = data.replace(/&amp;/g,'&'); // replace amp to maintain html entity.\r\n        all_steps[id].__cdata = data; \r\n        //jQuery('#save_step_'+id).prop('disabled', 'disabled');\r\n        //document.querySelector('#save_step_'+id).disabled = true;\r\n        AH.select('#save_step_'+id,'attr',{disabled:'disabled'})\r\n        updateXML();\r\n    }\r\n\r\n    function updateXML() {\r\n        let fixans = new_xml.smxml._fixed;\r\n        let gonext = new_xml.smxml._gonext;\r\n        let xml = '<smxml type=\"37\" fixed=\"'+fixans+'\" gonext=\"'+gonext+'\">';\r\n        all_steps.map(function(element, i) {\r\n            let seq = i+1;\r\n            let viewonly = element._viewonly;\r\n            let mode = element._mode;\r\n            let attempt = element._attempt;\r\n            let sticky = element._sticky;\r\n            let data = element.__cdata;\r\n            // data = self.reverseReplaceVariables(data);\r\n            data = reverseHtmlSpecialChars(data);\r\n            data = replaceSpaces(data);\r\n            data  = data.replace(/&quot;/g, '\"').replace(/&nbsp;/g, ' ');\r\n            data  = data.replace(/'/g, '\"').replace(/\\n/g, '');\r\n            let arr = data.match(/<span(.*?)>(.*?)<\\/span>/gi);\r\n            if(arr) {\r\n                for(var i=0; i<arr.length; i++) {\r\n                    let originalkey = arr[i].match(/originalkey=\"%(.*?)%\"/g);\r\n                    if(originalkey) {\r\n                        originalkey = originalkey.toString().replace(/originalkey=/g, '').replace(/\"%|%\"/g, '%');\r\n                        data = data.replace(arr[i], originalkey);\r\n                    }\r\n                }\r\n            }\r\n            let cdata = data;\r\n            xml = xml + \"<step seq='\"+seq+\"'\" + ((attempt != undefined)? \" attempt ='\"+attempt+\"'\" : ' ') + ((viewonly != undefined)? \" viewonly ='\"+viewonly+\"'\" : ' ') + ((mode != undefined)? \" mode ='\"+mode+\"'\" : ' ') + ((sticky != undefined)? \" sticky ='\"+sticky+\"'\" : ' ') +\"><!--[CDATA[\"+cdata+\"]]--></step>\";\r\n        });\r\n        xml = xml + \"</smxml>\";\r\n        getChildXml(xml);\r\n    }\r\n\r\n    function reverseHtmlSpecialChars(data) {\r\n        let tags = data.match(/&lt;(.*?)&gt;/gm);\r\n\t\tlet tag = '';\r\n\t\tif(tags) {\r\n\t\t\tfor(var i=0; i<tags.length; i++) {\r\n                tag = tags[i];\r\n                tags[i] = tags[i].replace(/&lt;/g, \"<\").replace(/&gt;/g, \">\");\r\n                data = data.replace(tag, tags[i]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn data;\r\n    }\r\n\r\n    function replaceSpaces(data) {\r\n        let matching = data.match(/var:var\\d+\\s+\\s+/g);\r\n        let match;\r\n        if(matching) {\r\n            matching.map(function(item, index){\r\n                match = item.trim();\r\n                data = data.replace(item,match);\r\n            });\r\n        }\r\n        return data;\r\n    }\r\n\r\n    function addEvent(data) {\r\n        let obj = {};\r\n        obj._seq = all_steps.length+1;\r\n        obj._viewonly = \"1\";\r\n        obj._attempt = \"0\";\r\n        obj._mode = \"0\";\r\n        obj.__cdata = \"New Step\";\r\n        all_steps.push(obj);\r\n        updateXML();\r\n        state.snackback = true;\r\n        var timer = setTimeout(function() {\r\n            initEditor();\r\n            clearTimeout(timer);\r\n        }, 500);\r\n    }\r\n\r\n    function initEditor() {\r\n        // jQuery(document).on(\"click\", \".editMath\", function(e){\r\n        //     window.currentId = jQuery(this).attr('id');\r\n        // });\r\n\r\n        AH.listen(document,\"click\",\".editMath\",function(_this,e){\r\n            // window.currentId = _this.getAttribute('id');\r\n            state.currentId = _this.getAttribute('id');\r\n        })\r\n\r\n        // jQuery(document).on(\"click\", \".materialOverlay\", function(e){\r\n\t\t// \twindow.currentId = null;\r\n        //     window.currentInp = null;\r\n        // });\r\n\r\n        AH.listen(document,'click','.materialOverlay',function(e){\r\n            //window.currentId = null;\r\n            state.currentId  = null;\r\n            //window.currentInp = null;\r\n            state.currentInp = null;\r\n        })\r\n\r\n\t\ttinyMCE.PluginManager.add('res', function(editor, url) {\r\n            editor.addMenuItem('resp', {\r\n                text:\"Add response\",\r\n                id:'addToken',\r\n                onclick: function () {\r\n                    handleOpen();\r\n                },\r\n                context: 'insert',\r\n                prependToContext: true\r\n            });\r\n        });\r\n\t\ttinymce.PluginManager.load('equationeditor', themeUrl+'svelte_items/tinymce/plugins/equationeditor/plugin.min.js');\r\n\t\ttinymce.init({\r\n            selector: '.tinymce-editor-res',\r\n            inline: true,\r\n            theme: 'modern',\r\n            skin: 'skin02',\r\n            min_width: 100,\r\n            resize: true,\r\n            menubar: false,\r\n            toolbar: true,\r\n            elementpath: false,\r\n            statusbar: false,\r\n            force_br_newlines: true,\r\n            remove_trailing_brs: true,\r\n            forced_root_block: false,\r\n            extended_valid_elements: 'span[onClick|contentEditable]',\r\n            valid_elements: \"*[*]\",\r\n\t\t\tfixed_toolbar_container: '#toolbar_container',\r\n            extended_valid_elements: 'uc:syntax,uc:ref',\r\n            custom_elements: 'uc:syntax,~uc:ref',\r\n            plugins: [\r\n                \"lists link image charmap print preview anchor\",\r\n                \"searchreplace code fullscreen\",\r\n                \"insertdatetime media table contextmenu paste res equationeditor \"\r\n            ],\r\n            content_css: themeUrl+'svelte_items/src/libs/mathquill.css',\r\n            toolbar: [\r\n            ' bold italic underline | equationeditor'\r\n            ],\r\n            contextmenu:\"resp\",\r\n            paste_as_text: true\r\n        });\r\n\t}\r\n\r\n    function handleClose() {\r\n        if(state.fillInTheBlanksChoice == 2) {\r\n\t\t\t//window.currentId = null;\r\n            state.currentInp = null;\r\n\t\t}\r\n        state.open = false; \r\n    }\r\n\r\n    function updateDialog(targetVal) {  \r\n        state.fillInTheBlanksChoice = targetVal;\r\n    }\r\n\r\n    function addEditable() {\r\n\t\t//let txt = jQuery(\"#input\");\r\n        let txt = document.querySelector(\"#input\");\r\n        //let caretPos = txt[0].selectionStart;\r\n        let caretPos = txt.selectionStart;\r\n\t\t//let textAreaTxt = txt.val();\r\n        let textAreaTxt = txt.value;\r\n         var txtToAdd = \"\\\\MathQuillMathField\";\r\n        var txtToAdd  = \"user Response\";\r\n        //txt.val(textAreaTxt.substring(0, caretPos) + txtToAdd + textAreaTxt.substring(caretPos));\r\n        txt.value = textAreaTxt.substring(0, caretPos) + txtToAdd + textAreaTxt.substring(caretPos);\r\n\t}\r\n\r\n    function latexEdit() {\r\n        state.open = true;\r\n    }\r\n\r\n    function storeAns() {\r\n\t\tvar validate = 0;\r\n\t\tif(state.fillInTheBlanksChoice == 1) {\r\n\t\t\t//let ans = jQuery(\"#input1\").val();\r\n            let ans = document.querySelector(\"#input1\").value;\r\n\t\t\t//let numeric = jQuery(\"#responseDialog #numeric\")[0].checked;\r\n            let numeric = document.querySelector(\"#responseDialog #numeric\").checked;\r\n            if(numeric == true) {\r\n\t\t\t\tans += \" |n\";\r\n\t\t\t}\r\n\t\t\tif(ans.trim() == \"\") {\r\n\t\t\t\tvalidate = 1;\r\n\t\t\t\tvalidate(\"All fields are required\");\r\n\t\t\t} else {\r\n\t\t\t\ttinyMCE.activeEditor.insertContent(\"<span type='t' class='alert alert-info editFill' originalKey='%{\"+ans.trim()+\"}%' style='padding: 5px;outline: none;line-height:40px;cursor:move;color:#000' contentEditable='false'><i style='padding-right:4px' class='icomoon-insert-template'></i>\"+((numeric == true)?\"Numeric\":\"Textbox\")+\"</span>\");\r\n\t\t\t}\r\n        }\r\n        if(state.fillInTheBlanksChoice == 2) {\r\n\t\t\t//let e = jQuery(\"#input\").val();\r\n            let e = document.querySelector(\"#input\").value;\r\n\t\t\tif(validate == 0) {\r\n\t\t\t\t//document.querySelector(\"#\"+window.currentId).setAttribute(\"latex\",e);\r\n                document.querySelector(\"#\"+state.currentId).setAttribute(\"latex\",e);\r\n\t\t\t\t//document.querySelector(\"#\"+window.currentId).setAttribute(\"originalKey\",\"%{\"+e+\"|e}%\");\r\n                document.querySelector(\"#\"+state.currentId).setAttribute(\"originalKey\",\"%{\"+e+\"|e}%\");\r\n\t\t\t\t//window.currentId = null;\r\n                state.currentId = null;\r\n\t\t\t\t//window.currentInp = null;\r\n                state.currentInp = null;\r\n\t\t\t} else {\r\n\t\t\t\tvalidate(\"All fields are required\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(validate == 0) {\r\n\t\t\thandleClose();\r\n\t\t}\r\n    }\r\n\r\n    function handleOpen() {\r\n        // this.setState({\r\n        //     open: true,\r\n        //     codetype: false,\r\n        //     numeric: false\r\n        // });\r\n        state.open = true;\r\n        state.codetype = false;\r\n        state.numeric = false;\r\n        //this.setState({codetype: false}); #already commented on also react\r\n        //this.setState({numeric: false}); #already commented on also react\r\n    }\r\n\r\n</script> \r\n<main>\r\n    <div class=\"mt-imp border\">\r\n        <div class=\"border-bottom d-flex justify-content-between px-2 pt-1\">\r\n            <div class=\"d-inline-block pt-1 float-start cr_step\" style={'font-size:20px;position:relative;'}>{l.create_steps}</div>\r\n            <div style={{}}>\r\n                <div class=\"modes_checkbox d-inline-block top-checkbox_gonext position-relative top2\">\r\n                    \r\n                    <Checkbox  \r\n                        id=\"go_next\" \r\n                        defaultChecked = {state.gonext ? true: false} \r\n                        on:click={(e)=>{goNext(\"go_next\",e)}} \r\n                    >{\"Go Next\"}</Checkbox>\r\n                        \r\n                </div>\r\n                <div class=\"modes_checkbox d-inline-block m-l top-checkbox_fix position-relative top2\">\r\n                    <Checkbox  \r\n                        id=\"fixedans_checkbox\" \r\n                        defaultChecked = {state.variable_button ? true: false} \r\n                        on:click={(e)=>{fixedAnswer(\"fixedans_checkbox\",e)}} \r\n                    >{\"Fix Answer\"} </Checkbox>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"outer_steps mt-3 mx-3 clear-both\">\r\n            <!-- {this.all_steps.map((item, index) => -->\r\n            {#each all_steps as item,index}\r\n                <fieldset key={index} style={'border:1px solid grey'} class=\"new_steps seq_inbox fw shadow-sm mb-2\">\r\n                    <legend class=\"font18 mb ms-2 pl-1\" style={'width:1em;float:none;'}>{index+1}</legend>\r\n                    <div class=\"d-inline-block table_width ms-2 pl-1 pb-2 mb-1\" style={'width:97%;'}>\r\n                        <div \r\n                            data-seq={index} \r\n                            class=\"tinymce-editor-res steps_edit p-1 border fillAuthor\"\r\n                            id={`fillAuthor_${index}`} \r\n                            style={'padding:0 8px;overflow:auto;outline:none'} \r\n                            contentEditable={true}\r\n                            data-text=\"Enter text here\"\r\n                            on:keyup={(e)=>{handleDisable(index,e)}}\r\n                        >\r\n                        {@html item.__cdata}\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"view_checkbox d-inline-block light-cyan-bg px-2 p-1 full-width fwidth\">\r\n                    <div class=\"test d-inline-block\">\r\n                        <span class=\"pointer d-inline-block plain_text\" data-toggle=\"tooltip\" title=\"Don't use any interactive item!\" for={`viewonly_radio_${index}`}>{l.plain_text}</span>\r\n                        <span class=\"stat-percent ms-4\" style={'display:inline-block;position:relative;'}>\r\n                            <span class=\"form-check form-switch\">\r\n                                <input type=\"checkbox\" class=\"form-check-input\" id={\"switchElement\"+index}\r\n                                    checked={(item.toggle == \"1\"? false: true)}\r\n                                    on:change={(e)=>{handleRadio(index, 'fillAuthor_'+index,e)}}\r\n                                    color=\"primary\"\r\n                                >\r\n                                <label for={\"switchElement\"+index}>{l.interactive}</label>\r\n                                \r\n                            </span>\r\n                        </span>\r\n                    </div> \r\n                    <div class=\"d-inline-block plain_text ms-3\" >\r\n                        <div class=\"modes_checkbox d-inline-block ms-2\">\r\n                            <span class=\"check_box d-inline-block\">\r\n                                <!-- {(item._mode == \"1\") ? -->\r\n                                {#if item._mode == \"1\"}\r\n                                    <Checkbox data-seq={index} class=\"inner_inputs option_checkbox\" on:click={(e)=>{handleChangeCheckbox(index, 'fillAuthor_'+index,e)}} type=\"checkbox\" value=\"mode\" name=\"mode_checkbox_\" id={`mode_checkbox_${index}`} checked={true}\r\n                                    />\r\n                                {:else}\r\n                                    <Checkbox data-seq={index} class=\"inner_inputs option_checkbox\" on:click={(e)=>{handleChangeCheckbox(index, 'fillAuthor_'+index,e)}} type=\"checkbox\" value=\"mode\" name=\"mode_checkbox_\" id={`mode_checkbox_${index}`} checked={false}\r\n                                    />\r\n                                {/if}\r\n\r\n                            </span>\r\n                            <label class=\"font-weight-normal me-1 position-relative top2 right35\" for={`mode_checkbox_${index}`}>{l.no_validation}</label>\r\n                        </div>\r\n                        <!-- {index == 0 ?  -->\r\n                        {#if index == 0}\r\n                            <div class=\"stick_checkbox d-inline-block\">\r\n                                <span class=\"check_box d-inline-block\">\r\n\r\n                                    <!-- {(item._sticky == \"1\") ? -->\r\n                                    {#if item._sticky == \"1\"} \r\n                                        <Checkbox data-seq={index} checked={true} class=\"inner_inputs option_checkbox\" on:click={handleChangeCheckbox.bind(this, index, 'fillAuthor_'+index)} type=\"checkbox\" value=\"sticky\" name=\"sticky_checkbox_\" id={`sticky_checkbox_${index}`}/>\r\n                                    {:else}\r\n                                        <Checkbox data-seq={index} checked={false} class=\"inner_inputs option_checkbox\" on:click={handleChangeCheckbox.bind(this, index, 'fillAuthor_'+index)} type=\"checkbox\" value=\"sticky\" name=\"sticky_checkbox_\" id={`sticky_checkbox_${index}`}/>\r\n                                    {/if}\r\n                                </span>\r\n                                <label class=\"font-weight-normal me-1 position-relative top2 right35\" for={`sticky_checkbox_${index}`}>{l.sticky}</label>\r\n                            </div>\r\n                        {/if} \r\n                    </div>\r\n                    <div style={'display:inline-block;float:right;'} class=\"buttons edit_steps\">\r\n                        <div class=\"d-inline-block mr\" style={'display:inline-block;'} on:click={(e)=>{deleteEvent(index, 'steps',e)}}>\r\n                            <button type=\"button\" class=\"btn btn-light font12\">{l.delete}</button>\r\n                        </div> \r\n                        <div class=\"d-inline-block\" style={'text-align:right;margin-top:6px;'}>\r\n                            <button id={`save_step_${index}`} type=\"button\" on:click={(e)=>{handleSave(index, 'fillAuthor_'+index,e)}} class=\"btn btn-primary font12 save_button_steps\">{l.save}</button>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                </fieldset>\r\n            <!-- )} -->\r\n            {/each}\r\n        </div>\r\n        <div class=\"row mx-3 mt-3 pb-3\">\r\n            <Button variant=\"fab\" color=\"primary\" mini aria-label=\"Add\"\r\n                on:click={addEvent.bind(this, 'steps')}\r\n                class=\"btn btn-outline-primary rounded position-relative bottom0 bg-white shadow-sm height30\"\r\n                style={'float:left;width:120px;height:30px;border:1px solid #4285f4;color:#4285f4;text-transform:none;'}>\r\n                <span class=\"font18\">&#43; &nbsp;</span> Add Step\r\n            </Button>\r\n        </div>\r\n        <Dialog overlayClass=\"materialOverlay\"  bind:visible={state.open} on:close={handleClose.bind(this)} disableEnforceFocus={true} width=\"650\" class=\"row\" style={'background-color: #fff;'}>\r\n                    <!-- <DialogTitle \r\n                        classes={{\r\n                            root:\"p-md editor_modal_title\"\r\n                        }}\r\n                        > -->\r\n                    <div slot=\"title\">\r\n                        <div class=\"mr-lg float-left\" style={'padding-top:10px;padding-left:13px;font-size:18px;'}>{l.fill_header}</div>\r\n                        \r\n                        <div class=\"float-right mr-4\">\r\n\t\t\t\t\t\t\t<div class=\"btn-group mt-1 row ml-0\">\r\n\t\t\t\t\t\t\t\t<button type=\"button\" class={\"btn btn-light col-3\" + ((state.fillInTheBlanksChoice == 1)? \" active\": \"\")} value={1} on:click={updateDialog.bind(this, 1)} >Text</button>\r\n\t\t\t\t\t\t\t\t<button type=\"button\" class={\"btn btn-light col-9\" + ((state.fillInTheBlanksChoice == 2)? \" active\": \"\")} value={2} on:click={updateDialog.bind(this, 2)} >Mathematical Equation</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n                    </div>\r\n                    <!-- </DialogTitle> -->\r\n                    <div>\r\n                        <div id=\"responseDialog\">\r\n                            {#if state.fillInTheBlanksChoice == 1}\r\n                                <div>\r\n                                    <div class=\"d-flex mr-2\">\r\n                                        <div class=\"width100\">\r\n                                            <Checkbox  id = \"numeric\" checked = {state.numeric}>{\"Numeric\"}</Checkbox>\r\n                                            \r\n                                        </div>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                id = \"input1\"\r\n                                                value = {state.input_ans}\r\n                                                class=\"form-control mr-4 ml-3\"\r\n                                                style={'margin:5px'}\r\n                                                auto:focus = {true}\r\n                                                placeholder = {((AH.select(\"#input1\").innerHTML != \"\")?l.fill_text_placeholder:\"\")}\r\n                                            />\r\n                                    </div>\r\n                                    <div class=\"text-danger font-weight-bold ml-2 mt-3\">* Note:</div>\r\n                                    <div class=\"text-danger ml-2\" style={'text-indent:15px'}>{l.fill_text_help1}</div>\r\n                                    <div class=\"text-danger ml-2\" style={'text-indent:15px'}>2. Please do not include space.</div>\r\n                                </div>\r\n                            {:else}\r\n                                <div>\r\n                                    <div class=\"d-flex\">\r\n                                        <input\r\n                                            type=\"text\"                                \r\n                                            id = {\"input\"}\r\n                                            class = \"latexInp form-control\"\r\n                                            style = {'margin:5px;width:71%;'}\r\n                                            auto:focus = {true}\r\n\r\n                                        />                            \r\n                                        <Button \r\n                                            variant = \"contained\" \r\n                                            color = \"primary\"\r\n                                            style = {'border:1px solid #4285f4;color:#4285f4;text-transform:none;'} \r\n                                            on:click = {addEditable}\r\n                                            class=\"btn btn-outline-primary height30 bg-white shadow-sm mt-1 top1 ml-1\"\r\n                                        >\r\n                                        Add Response\r\n                                        </Button>                           \r\n                                        <div class = \"latexEditButton d-inline-block\">\r\n                                            <Button \r\n                                                id = {\"latexEdit\"}\r\n                                                variant = \"contained\" \r\n                                                color = \"primary\"\r\n                                                style = {'margin:5px;display:none;'} \r\n                                                on:click = {latexEdit}                                   \r\n                                            >\r\n                                            Edit\r\n                                            </Button>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"text-danger font-weight-bold ml-1\">* Note:</div>\r\n                                    <div class=\"text-danger ml-1\" style={'text-indent: 15px;'}>{l.fill_math_help1}</div>\r\n                                    <div class=\"text-danger ml-1\" style={'text-indent: 15px;'}>{l.fill_math_help2}</div>\r\n                                </div>\r\n                            {/if}    \r\n                        </div>\r\n\r\n\r\n                    </div>\r\n                    <div class=\"svelteFooter\">\r\n                        <Button variant=\"contained\" on:click={handleClose} >\r\n                            {l.cancel}\r\n                        </Button>,\r\n                        <Button variant=\"contained\" on:click={storeAns}\r\n                            class=\"bg-primary text-white\">{l.done}\r\n                        </Button>\r\n                    </div>\r\n        </Dialog>\r\n</main>\r\n\r\n\r\n    \r\n\r\n\r\n<style>\r\n    .font18 {\r\n        font-size: 16px;\r\n    }\r\n    .fwidth   {\r\n        width: 100%;\r\n    }\r\n\r\n    .light-cyan-bg {\r\n        background-color: #d4e4ff; \r\n        color: #333;\r\n    }\r\n\r\n    .top2 {\r\n        top: 2px;\r\n    }\r\n    .right5 {\r\n        right: 5px;\r\n    }\r\n\r\n    .right35 {\r\n        right: 35px;\r\n    }\r\n\r\n    .step_checkbox {\r\n        width: 22%;\r\n        border: 1px solid black;\r\n        margin-left: 10px;\r\n        position: relative;\r\n        bottom: 1px;\r\n        cursor: pointer;\r\n        padding: 3px 2px 0;\r\n    }\r\n                \r\n    /* .steps_edit:empty:before {\r\n        content: attr(data-text),\r\n        content-editable:false;\r\n    } */\r\n\r\n    .fixed_ans {\r\n        top: 10px;\r\n        position: relative;\r\n        float: right;\r\n        border: 1px solid #e0e0e0;\r\n        background-color: #f5f5f5;\r\n        border-radius: 4px;\r\n        padding: 5px;\r\n        font-size: 15px;\r\n        font-weight: 700;\r\n    }\r\n\r\n    .check_box {\r\n        right: 24px;\r\n        position:relative;\r\n        width: 40px;\r\n    }\r\n\r\n    .inner_inputs {\r\n        margin: 0 12px!important;\r\n    }      \r\n    \r\n    .pointer {\r\n        cursor: pointer !important;\r\n    }\r\n\r\n    .width100 {width: 100px;}\r\n\r\n    /* .edit_steps {\r\n        margin-top: 11px!important;\r\n    }\r\n    .view_checkbox {\r\n        height: 75px;\r\n    }\r\n    .plain_text {\r\n        position: relative;\r\n        bottom: 20px;\r\n    } */\r\n\r\n    :global([id^=\"fillmain\"]) {\r\n        overflow:hidden;\r\n        /*width:700px;  testing*/\r\n        text-align:left;\r\n    }\r\n    :global([id^=\"fillmain\"] pre) {\r\n        background: none;\r\n        border: none;\r\n        font-size: 14px!important;\r\n    }\r\n    :global([id^=\"fillmain\"] .string) {\r\n        min-height:50px;\r\n        margin-top:10px;\r\n        margin-right:10px;\r\n    }\r\n    :global([id^=\"fillmain\"] .footerstr) {\r\n        position:relative;\r\n        margin-top: 10px;\r\n        background-color: #ccc;\r\n        padding: 15px;\r\n        min-height: 60px;/*100px;*/\r\n    }\r\n    :global([id^=\"fillmain\"] .footerstr .arrow-up) {\r\n        position: absolute;\r\n        top: -10px;\r\n        right: 50%;\r\n        width: 0;\r\n        height: 0;\r\n        border-left: 10px solid transparent;\r\n        border-right: 10px solid transparent;\r\n        border-bottom: 10px solid #ccc;\r\n    }\r\n    :global([id^=\"fillmain\"] .fill-row) {\r\n        padding:6px;\r\n    }\r\n    :global([id^=\"fillmain\"] .fillelement, [id^=\"fillmain\"] .drag-resize) {\r\n        height:30px;\r\n        display:inline-block;\r\n        position:relative;\r\n        min-height: 30px;\r\n        margin: 1px;\r\n    }\r\n\r\n    :global(#fillmain .drag-resize) {\r\n        height:30px;\r\n        display:inline-block;\r\n        position:relative;\r\n        min-height: 30px;\r\n        margin: 1px;\r\n    }\r\n    :global(#fillmain input[type=\"text\"]) {\t\r\n        height:99%!important;\r\n        resize: none;\r\n        font-size:12px;\r\n        color: #000;\r\n        max-width: 800px;\r\n    }\r\n    :global(#fillmain select) {\t\r\n        height:99%!important;\r\n        resize: none;\r\n        font-size:12px;\r\n        color: #000;\r\n        max-width: 800px;\r\n    }\r\n    :global([id^=\"fillmain\"] .drag-resize) {\r\n        vertical-align:middle;\r\n        border:1px solid #31B731;\r\n        text-align:center;\r\n        padding:3px;\r\n        font-size: 14px;\r\n    }\r\n    :global([id^=\"fillmain\"] .drag-resize.ui-draggable) {\r\n        cursor:move;\r\n    }\r\n    :global([id^=\"fillmain\"] .drop-hover) {\r\n        border: 1px dashed red!important;\r\n        box-shadow: 0 0 0 2px yellow inset;\r\n        outline: 1px solid blue;\r\n    }\r\n    :global([id^=\"fillmain\"] .fillcheck ul) {\r\n        width:220px;\r\n    }\r\n    :global([id^=\"fillmain\"] .fillcheck li.selected) {\r\n        background-color: #E5E5E5;\r\n    }\r\n    :global(.fillcheck .selected .icomoon-checkmark-3:before) {\r\n        float: left;\r\n        color: blue;\r\n        padding: 3px;\r\n        position: relative;\r\n        right: 14px;\r\n    }\r\n    :global(.fillcheck .icomoon-close-2:before) {\r\n        float: left;\r\n        color: blue;\r\n        position: relative;\r\n        right: 14px;\r\n        font-size: 20px;\r\n    }\r\n    :global(.MathJax_Display) {\r\n            display : inline!important;\r\n    }\r\n    :global([id^=\"fillmain\"] .select) {\r\n        font-size: 15px;\r\n    }\r\n    :global([id^=\"fillmain\"] .textarea) {\r\n        vertical-align:middle;\r\n        border-radius:3px;\r\n        background:#ffe;\r\n        border: 1px solid #ccc;\r\n        -webkit-box-shadow: inset 0 1px 1px rgba(0,0,0,0.075);\r\n        box-shadow: inset 0 1px 1px rgba(0,0,0,0.075);\r\n    }\r\n    :global(.ui-draggable-disabled) {\r\n        cursor: no-drop!important;\r\n        opacity: 0.5!important;\r\n    }\r\n                \r\n</style>","<script>\r\n    import NewAuthoring from '../clsSMStepAlgo/StepAlgo.svelte';\r\n\r\n    export let xml;\r\n    export let editorState;\r\n    export let getChildXml;\r\n    export let stopAuthoringUpdate;\r\n    export let uxml;\r\n    \r\n\r\n</script>\r\n<main>\r\n    {#if parseInt(editorState.content_icon) == 2}\r\n        <NewAuthoring xml = {xml} getChildXml = {getChildXml} stopAuthoringUpdate = {stopAuthoringUpdate} uxml={uxml} />\r\n    {/if}\r\n</main>"],"names":["ctx","bind","this","__cdata","_mode","_sticky","l","sticky","insert","append","plain_text","interactive","no_validation","delete","save","toggle","addEditable","fill_math_help1","fill_math_help2","numeric","fill_text_help1","input_ans","AH","select","innerHTML","fill_text_placeholder","cancel","done","fillInTheBlanksChoice","fill_header","gonext","variable_button","length","open","create_steps","txt","document","querySelector","caretPos","selectionStart","textAreaTxt","value","substring","window","spanCounter","state","new_xml","all_steps","stopAuthoringUpdate","xml","editorState","getChildXml","writable","opened","deleteIndex","remediationToggle","snackback","currentId","currentInp","subscribe","items","editTextbox","key","ans","replace","split","trim","ans_type","indexOf","customStyle","editMathbox","i","showItems","steps","latex_str","latex_arr","latex_arr_check","undefined","push","map","item","index","cdata","vars","match","element","toString","replaceVariables","_viewonly","setToggle","answerKey","answerType","forEach","data","originalKey","latexKey","editMath","innerKey","icon","type","regex","RegExp","quote","parseXmlAuthoring","goNext","id","checked","smxml","_gonext","updateXML","fixedAnswer","_fixed","handleChangeCheckbox","fillid","e","name","target","ref","val","seq","step","handleDisable","console","log","handleRadio","event","_attempt","deleteEvent","delete_event","splice","alert","handleSave","disabled","viewonly","mode","attempt","tags","tag","reverseHtmlSpecialChars","matching","replaceSpaces","arr","originalkey","initEditor","listen","_this","getAttribute","tinyMCE","PluginManager","add","editor","url","addMenuItem","text","[object Object]","codetype","context","prependToContext","tinymce","load","themeUrl","init","selector","inline","theme","skin","min_width","resize","menubar","toolbar","elementpath","statusbar","force_br_newlines","remove_trailing_brs","forced_root_block","extended_valid_elements","valid_elements","fixed_toolbar_container","custom_elements","plugins","content_css","contextmenu","paste_as_text","handleClose","onMount","XMLToJSON","click","setTimeout","selectAll","curr","beforeUpdate","obj","_seq","timer","clearTimeout","targetVal","validate","activeEditor","insertContent","setAttribute","parseInt","content_icon","uxml"],"mappings":"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"}