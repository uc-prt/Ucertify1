{"version":3,"file":"SliderItemPreview-0bc14ab5.js","sources":["../../../clsSMSlider/SliderItemPreview.svelte"],"sourcesContent":["<!--\n *  File Name   : SliderItemPreview.svelte\n *  Description : Container for Slider preview Module\n *  Author      : Rashmi Kumari\n *  Package     : pe-items\n *  Last update : 19-Jan-2021\n *  Last Updated By : Rashmi Kumari\n-->\n<script>\n    import { onMount } from \"svelte\";\n    import l from '../src/libs/editorLib/language';\n    import ItemHelper from '../helper/ItemHelper.svelte';\n    import { XMLToJSON, onUserAnsChange } from '../helper/HelperAI.svelte';\n    export let xml;\n    export let uxml;\n    export let showAns;\n    export let isReview;\n    export let editorState;\n    let localSliderData = [], userAnsXML, user_ans_tab = true ;\n    let state = {\n        datauserans: {}\n    };\n    let targetView      = \"none\";\n    let result, onError = \"\";\n    $: {\n\t\tif (isReview) {\n            targetView = \"block\";\n            // display the correct or incorrect according to the answer matched\n            displayAns();\n            setReview();\n\t\t} else {\n            targetView = \"none\";\n        }\n        if (xml != state.xml) {\n            // update the value of state 'xml'\n            state.xml = xml;\n            // updates the value of sliders elements and load the module\n            loadModule(xml);\n\n            // used to contain the json data of previous xml and next xml\n            let oldjsonraw, newjsonraw;\n            // assign the json data of previous xml into variable 'oldjsonraw'\n            oldjsonraw = XMLToJSON(xml == \"\" ? state.xml : xml);\n            // assign the json data of next xml into variable 'newjsonraw'\n            newjsonraw = XMLToJSON(state.xml);\n            // contains the array of json object having key slider of json oldjsonraw\n            let oldjson = jsontoArray(oldjsonraw.smxml.slider);\n            // contains the array of json object having key slider of json newjsonraw\n            let newjson = jsontoArray(newjsonraw.smxml.slider);\n            oldjson.map(function (data, i) {\n                if (newjson[i] != undefined) {\n                    if (data._defaultans != newjson[i]._defaultans) {\n                        /* updates the value of state 'datauserans' having key  'data.key' to the value of slider key at index 'i' of json jsonraw */\n                        state.datauserans[data._key] = newjson[i]._defaultans;\n                    }\n                }\n            })\n            if (uxml) {\n                let uaXML;\n                // converts user answer xml into json object and assign the value to uaXML variable\n                uaXML = XMLToJSON(uxml);\n                if (typeof (uaXML.smans.slider) != \"undefined\") { //@sneh: added this line because map function was generating error in quiz player\n                    localSliderData.map(function (data, i) {\n                        // updates the value of array state datauserans at defined index with the value of slider's key array at index 'i' of json uaXML \n                        state.datauserans[data.sliderid] = uaXML.smans.slider[i]._userAns;\n                    });\n                }\n            }\n        }\n\t}\n    onMount(() => {\n        loadModule(xml);\n        // used for native team\n        if (window.inNative) {\n            window.getHeight && window.getHeight();\n        }\n    });\n\n    // converts json into array\n    function jsontoArray(obj) {\n        if (Array.isArray(obj) == false) {\n            // contains json data\n            let temp = obj;\n            // creates array\n            obj = [];\n            // assign the json data at index 0 \n            obj[0] = temp;\n        }\n        // returns an array containing json data\n        return obj;\n    }\n\n    //checked\n    // updates the value of sliders elements and load the module\n    function loadModule(loadXml) {\n        loadXml = XMLToJSON(loadXml);\n        // parses the xml and updates the values of sliders elements\n        parseXMLPreview(loadXml);\n    }\n\n    //checked\n    // parses the xml and updates the values of sliders elements\n    function parseXMLPreview(SLIDERXML) {\n        try {\n            // contains array of slider object\n            let sliderData = SLIDERXML.smxml.slider;\n            // creates an array for storing the data to update the values of sliders elements\n            localSliderData = [];\n            if (sliderData) {\n                if (Array.isArray(sliderData) == false) {\n                    // creates an array\n                    sliderData = [];\n                    // assign the value of slider key at index zero\n                    sliderData[0] = SLIDERXML.smxml.slider;\n                }\n            }\n            for (let i = 0; i < sliderData.length; i++) {\n                localSliderData.push({\n                    // used to set the id of the range element of the slider at index 'i'\n                    sliderid: sliderData[i]._key,\n                    // used to set the value of range element of slider at index 'i' when correct answer button is clicked\n                    anskey: sliderData[i]._anskey,\n                    // used to set the title value of the slider at index 'i'\n                    title_val: sliderData[i]._title,\n                    // used to set the step value of the slider at index 'i'\n                    step_val: sliderData[i]._step,\n                    // used to set the default value of the slider at index 'i'\n                    defaultans: sliderData[i]._defaultans,\n                    // not used any where so can be remove it\n                    defaultans_id: \"defaultans\" + sliderData[i]._key,\n                    // not used any where so can be remove it\n                    title_id: \"title\" + sliderData[i]._key,\n                    // not used any where so can be remove it\n                    step_id: \"step\" + sliderData[i]._key,\n                    // not used any where so can be remove it\n                    sliderans: \"slider\" + sliderData[i]._key,\n                    // not used any where so can be remove it\n                    remove_item: \"remove_item\" + sliderData[i]._key,\n                    // not used any where so can be remove it\n                    minid: \"min\" + sliderData[i]._key,\n                    // not used any where so can be remove it\n                    maxid: \"max\" + sliderData[i]._key,\n                    sliderop: \"sliderop\" + sliderData[i]._key,\n                    // used to define the min value of the range element and value of label min of slider at index 'i'\n                    minval: sliderData[i]._minmax.split(\",\")[0],\n                    // used to define the max value of the range element and value of label max of slider at index 'i'\n                    maxval: sliderData[i]._minmax.split(\",\")[1],\n                });\n            }\n        } catch (error) {\n            onError = error;\n            console.log({\n                'error': error,\n                'function': 'parseXMLPreview',\n                'File': 'SliderItemPreview.js'\n            });\n        }\n    }\n\n    // display the correct or incorrect according to the answer matched\n    function displayAns() {\n        // contains correct or incorrect according to the return value of checkAns method\n        let ans = checkAns();\n        if (editorState) {\n            // shows the answer correct or incorrect according to the value of variable 'ans'\n            showAns(ans);\n        }\n    }\n\n    /* defines the user answer xml, checks the answer and returns correct or incorrect according to the match of result */\n    function checkAns() {\n        // used for switch on next question in prepengine if current question is attempted\n        ISSPECIALMODULEUSERXMLCHANGE = 1;\n        // used to create user answer xml\n        userAnsXML = \"<smans type='30'>\";\n        result = true;\n        localSliderData.map(function (data) {\n            state.datauserans[data.sliderid] = (state.datauserans[data.sliderid]) === undefined ? data.defaultans : state.datauserans[data.sliderid];\n            if (parseInt(data.anskey) != parseInt(state.datauserans[data.sliderid])) {\n                result = false;\n            } \n            userAnsXML += \"<slider id='\" + data.sliderid + \"' userAns='\" + state.datauserans[data.sliderid] + \"'></slider>\";\n        });\n        userAnsXML += \"</smans>\";\n        // defined this condition for not update the user answer xml if user has not performed anything\n        // if (localSliderData.length > 0) {\n        //     // defines the user answer xml\n        //     uxml = userAnsXML;\n        // }\n        if(!editorState) {\n            onUserAnsChange({uXml: userAnsXML, ans: result});\n        }\n        if (result) {\n            //AH.select(\"#answer\").checked = true; //@sneh : this was commented that's why in quiz player answer was not recording\n            return \"Correct\";\n        } else {\n            //AH.select(\"#answer\").checked = false; //@sneh : this was commented that's why in quiz player answer was not recording\n            return \"Incorrect\";\n        }\n    }\n\n    // change the value of state datauserans after changing the value of slider range\n    function handleRange() {\n        // updates the value of state datauserans at given key \n        state.datauserans[this.id] = this.value;\n        // updates the value of state datauserans\n        state.datauserans = state.datauserans;\n        // display the correct or incorrect according to the answer matched\n        displayAns();\n    }\n\n    //checked\n    // checks and show the answer, shows correct answer and your answer button and not allow the user to perform the task\n    function setReview() {\n        targetView = \"block\";\n        isReview = true;\n    }\n\n    //checked\n    // allow the user to perform the task and hides correct answer and your answer button\n    function unsetReview() {\n        targetView = \"none\";\n        isReview = false;\n    }\n\n    //checked\n    function handleReviewMode(mode) {\n        if (mode == 'c') {\n            user_ans_tab = false;\n        } else if (mode == 'u') {\n            user_ans_tab = true;\n        }\n    }\n    \n</script>\n<link onload=\"this.rel='stylesheet'\" rel=\"preload\" as=\"style\" href=\"{editor.baseUrlTheme}clsSMSlider/css/slider.min.css\" />\n{#if onError != \"\" }\n    <div class=\"alert alert-danger font-weight-bold\">\n        <span>{l.oops_msg} </span>\n    </div>\n{/if}\n<div class=\"text-center\">\n    <ItemHelper \n        on:setReview = {setReview}\n        on:unsetReview = {unsetReview}\n        reviewMode={isReview}\n        handleReviewClick = {handleReviewMode}\n    />\n    <div id=\"slidermain\">\n        <div class=\"slider_item_container\">\n            {#each localSliderData as data, i}\n                <div key={i} class=\"clearfix slider_container my-3 rounded w-100\">\n                    <div class=\"slider_heading_test text-start text-white bg-primary\" tabindex=\"0\">\n                        <span> {data.title_val}</span>\n                    </div>\n                    <div class=\"col-md-12 select_slider_test w-100 pt-3 px-3 pb-2\">\n                        <input\n                            id={data.sliderid}\n                            type=\"range\"\n                            name=\"sliderrange\"\n                            min={data.minval}\n                            max={data.maxval}\n                            step={data.step_val}\n                            class=\"slideritem\"\n                            value={(targetView == \"block\" && user_ans_tab == false) ? parseInt(data.anskey) : (state.datauserans[data.sliderid] == 0 || state.datauserans[data.sliderid] == undefined) ? parseInt(data.defaultans) : parseInt(state.datauserans[data.sliderid])}\n                            disabled={targetView == 'block' ? true : false}\n                            on:input={handleRange}\n                            tabindex=\"0\"\n                        />\n                        {#if (targetView == \"block\" && user_ans_tab == true)}\n                            {#if data.anskey == state.datauserans[data.sliderid]}\n                                <span class=\"correct_incorrect_icon_fill position-absolute\">\n                                    <span class=\"icomoon-new-24px-checkmark-circle-1 font-weight-bold text-success\"></span>\n                                </span>\n                            {:else}\n                                <span class=\"correct_incorrect_icon_fill position-absolute\">\n                                    <span class=\"icomoon-new-24px-cancel-circle-1 font-weight-bold text-danger\"></span>\n                                </span>\n                            {/if}\n                        {/if}\n                        <div class=\"range_details mt-2 row mx-0\">\n                            <div class=\"minRange float-start col px-0 text-start\" tabindex=\"0\">\n                                <span>{l.min_val}: {data.minval}</span>\n                            </div>\n                            <div class=\"rangevalue col px-0\" tabindex=\"0\">\n                                <div class=\"current_val\">\n                                    {#if !(targetView == \"block\" && user_ans_tab == false)}\n                                        <span>{l.current_val}: {(state.datauserans[data.sliderid] == 0  || state.datauserans[data.sliderid] == undefined) ? (data.defaultans) : (state.datauserans[data.sliderid])} </span>\n                                    {:else}\n                                        <span> {l.correct_val}: {data.anskey} </span>\n                                    {/if}\n                                </div>\n                            </div>\n                            <div class=\"max_val float-end col px-0 text-end\" tabindex=\"0\">\n                                <span> {l.max_val}: {data.maxval} </span>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            {/each}\n        </div>\n    </div>\n</div>\n"],"names":["l"],"mappings":"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"}