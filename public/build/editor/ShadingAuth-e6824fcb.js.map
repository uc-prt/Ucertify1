{"version":3,"file":"ShadingAuth-e6824fcb.js","sources":["../../../clsSMShadedGrid/inputField.svelte","../../../clsSMShadedGrid/shadedGridTable.svelte","../../../clsSMShadedGrid/ShadingAuth.svelte"],"sourcesContent":["<script>\r\n    import { createEventDispatcher } from 'svelte';\r\n    import l from '../src/libs/editorLib/language';\r\n    export let labelname;\r\n    export let datalabel;\r\n    export let name, id, max, value, msgdetail, shwmsg, set_corr_ans;\r\n    const dispatch = createEventDispatcher();\r\n</script>\r\n{#if set_corr_ans == 1}\r\n    <input \r\n        type=\"number\" \r\n        min=\"1\" \r\n        max={max} \r\n        class=\"form-control inputChange\" \r\n        id=\"methodCount\" \r\n        name=\"methodCount\" \r\n        data-label=\"Number of correct\" \r\n        value={value} \r\n        on:change=\"{(e)=>dispatch('handleChange', {value: e})}\"\r\n        on:blur=\"{(e)=>dispatch('inputChangeBlur', {value: e})}\"\r\n    />\r\n{:else}\r\n    <div class=\"col-sm-6 inline-block\">\r\n        <div class=\"font-weight-bold mb-2\">{labelname}</div>\r\n        <div>\r\n            <input type=\"number\" min=\"1\" max=\"{max}\" name=\"{name}\" id=\"{id}\" class=\"form-control width100 inline-block inputChange\" data-label=\"{datalabel}\" \r\n                value={value} on:change=\"{(e)=>dispatch('handleChange', {value: e})}\" on:blur=\"{(e)=>dispatch('inputChangeBlur', {value: e})}\"/>\r\n        </div>\r\n        {#if shwmsg == 1}\r\n            <div class=\"mt-1\">\r\n                <span class=\"font13 text-danger\">\r\n                    <span class=\"icomoon-24px-info-5 pr-1\"></span>\r\n                    {l.multiple_of} {msgdetail}px\r\n                </span>\r\n            </div>\r\n        {/if}\r\n    </div>\r\n{/if}","<script>\r\n    import { createEventDispatcher } from 'svelte';\r\n    export let table_id, table_class, total_row_count, table_value;\r\n    const dispatch = createEventDispatcher();\r\n</script>\r\n<table id={table_id} class={table_class}>\r\n    <tbody>\r\n        {#if total_row_count && total_row_count.length > 0}\r\n            {#each total_row_count as data, i}\r\n                <tr id={data.id}>\r\n                    {#if table_value && table_value.length > 0}\r\n                        {#each table_value as value}\r\n                            {#if i == value.rowno}\r\n                                <td \r\n                                    id={value.id} \r\n                                    data-hidden=\"no\" \r\n                                    tabindex=\"0\" \r\n                                    data-grid=\"no\" \r\n                                    data-id={value.dataid} \r\n                                    class={`${value.class} gridColor pointer`}\r\n                                    on:click=\"{(e)=>dispatch('gridClick', {value: e})}\"\r\n                                    on:keyup=\"{(e)=>dispatch('adaKeyupClick', {value: e})}\" \r\n                                    style=\"width: {value.width}; height: {value.height}\"\r\n                                ></td>\r\n                            {/if}\r\n                        {/each}\r\n                    {/if}\r\n                </tr>\r\n            {/each}\r\n        {/if}\r\n    </tbody>\r\n</table>","<!--\r\n *  File Name   : ShadingAuth.svelte\r\n *  Description : Container for Shading Authoring Module\r\n *  Author      : Rashmi Kumari\r\n *  Package     : svelte_items\r\n *  Last update : 05-Feb-2021\r\n *  Last Updated By : Rashmi Kumari\r\n-->\r\n<script>\r\n    import { onMount, afterUpdate, beforeUpdate } from \"svelte\";\r\n    import { XMLToJSON, AH, JSONToXML} from '../helper/HelperAI.svelte';\r\n    import l from '../src/libs/editorLib/language';\r\n    import InputField from './inputField.svelte';\r\n    import ShadedGridTable from \"./shadedGridTable.svelte\";\r\n    export let getChildXml;\r\n    export let xml;\r\n    let state = {\r\n        xml:'',\r\n        gridWidth: \"\",\r\n        gridHeight: \"\",\r\n        rowCount: \"1\",\r\n        colCount: \"4\",\r\n        cellWidth: \"2\",\r\n        cellHeight: \"2\",\r\n        correctAns: [],\r\n        correctCount: 1,\r\n        shadedCell: [],\r\n        cellLocked: 'false',\r\n        hiddenCell: [],\r\n        authorMethod: \"byLocation\",\r\n        methodCount: \"\",\r\n        lockedCellValue: \"\",\r\n    };\r\n    let cellShaded;\r\n    let showSelectedAns = \"\";\r\n    let sizeMultipleIndex = 40;\r\n    let table_value, total_row_count, table_corr_value;\r\n\r\n\r\n\r\n\r\n    onMount(() => {\r\n        state.xml = xml;\r\n        const e = new Event(\"change\"); \r\n        const element = document.querySelector('#set') \r\n        element.dispatchEvent(e);\r\n        loadModule(xml);\r\n    });\r\n\r\n\r\n    $: {\r\n        let index, showAnsIndex;\r\n        table_value = [], total_row_count = [], table_corr_value = [];\r\n        // to create grids\r\n        for (let i = 0; i < state.rowCount; i++) {\r\n            total_row_count = [\r\n                ...total_row_count, {\r\n                    id : 'gridRow_' + i\r\n                }\r\n            ];\r\n\t\t\tfor (let j = 0; j < state.colCount; j++) {\r\n\t\t\t\tindex = state.shadedCell.indexOf(i + \"_\" + j);\r\n                cellShaded = (index!= -1) ? \"gridSelected\" : \"\";\r\n                // To check for correct answer cells\r\n                showAnsIndex = state.correctAns.indexOf(i + \"_\" + j);\r\n                if (state.correctAns != \"\") {\r\n\t\t\t\t\tshowSelectedAns = (showAnsIndex!= -1) ? \"gridSelected\" : \"\";\r\n\t\t\t\t} else {\r\n\t\t\t\t\tshowSelectedAns = \"\";\r\n\t\t\t\t}\r\n                table_value = [\r\n                    ...table_value, {\r\n                        id : \"grid\"+ i + \"_\" + j,\r\n                        dataid: i + \"_\" + j,\r\n                        class: cellShaded,\r\n                        width: parseInt(state.gridWidth) + 'px',\r\n                        height: parseInt(state.gridHeight) + 'px',\r\n                        rowno: i\r\n                    }\r\n                ];\r\n                table_corr_value = [\r\n                    ...table_corr_value, {\r\n                        id : \"grid_a\"+ i + \"_\" + j,\r\n                        dataid: i + \"_\" + j,\r\n                        class: showSelectedAns,\r\n                        width: parseInt(state.gridWidth) + 'px',\r\n                        height: parseInt(state.gridHeight) + 'px',\r\n                        rowno: i\r\n                    }\r\n                ];\r\n\t\t\t}\r\n        }\r\n        if (xml!=state.xml) {\r\n\t\t\tstate.xml = xml;\r\n\t\t\tloadModule(xml); \t\r\n\t\t}\r\n    }\r\n\r\n    // loads the module and update the xml\r\n    function loadModule(loadXml) {\r\n        // contains the json data of xml\r\n\t\tloadXml = XMLToJSON(loadXml);\r\n        // parses the xml and updates the sliders elements value\r\n\t\tparseXMLAuthoring(loadXml);\r\n        \r\n    }\r\n\r\n    // parses the xml and updates the values of sliders elements\r\n    function parseXMLAuthoring(MYXML) {\r\n        try {\r\n            state.correctAns = (MYXML.smxml._correctAns.trim()) ? MYXML.smxml._correctAns.split(\",\") : [];\r\n            state.authorMethod = MYXML.smxml._correctCount ? 'byCount' : 'byLocation';\r\n            state.shadedCell = (MYXML.smxml._shadedCell.trim()) ? MYXML.smxml._shadedCell.split(\",\") : [];\r\n            state.rowCount = MYXML.smxml._rowCount;\r\n            state.colCount = MYXML.smxml._colCount;\r\n            state.gridWidth = parseInt(MYXML.smxml._cellWidth) * sizeMultipleIndex;\r\n            state.gridHeight = parseInt(MYXML.smxml._cellHeight) * sizeMultipleIndex;\r\n            state.cellWidth = MYXML.smxml._cellWidth;\r\n            state.cellHeight = MYXML.smxml._cellHeight;\r\n            state.cellLocked = MYXML.smxml._lockedCell;\r\n            if(state.cellLocked == 'true') {\r\n                AH.select('#lock_author_cell').checked = true;\r\n            } else {\r\n                AH.select('#lock_author_cell').checked = false;\r\n            }\r\n            // update the xml after converting json xml into xml\r\n\t\t\tgetChildXml(JSONToXML(MYXML));\r\n\t\t} catch(events) {\r\n            console.warn({\r\n                'error': events.message,\r\n                'function name': 'parseXMLAuthoring',\r\n                'File name': 'ShadingAuth.svelte'\r\n            });\r\n\t\t}\r\n\t}\r\n    \r\n    //it manages the click event on grid\r\n    function authorClick(e) {\r\n        let cell = e.detail.value.target.id;\r\n\t\tlet selectedGrid;\r\n\t\tlet index;\r\n\t\tselectedGrid = AH.select(\".shadingAuth #\"+cell).getAttribute(\"data-id\");\r\n\t\tif ((!AH.select(\".shadingAuth #\"+cell).classList.contains(\"lockedGrid\"))) {\r\n\t\t\tif (AH.select(\".shadingAuth #\"+cell).getAttribute(\"data-grid\") == \"no\") {\r\n                AH.selectAll(\".shadingAuth #\"+cell, 'addClass', 'gridSelected');\r\n                AH.select(\".shadingAuth #\"+cell).setAttribute(\"data-grid\", \"selected\");\r\n\t\t\t\tif (!state.shadedCell.includes( selectedGrid)) {\r\n\t\t\t\t\tstate.shadedCell.push(selectedGrid);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tindex = state.shadedCell.indexOf(selectedGrid);\r\n                state.shadedCell.splice(index, 1);\r\n                AH.selectAll(\".shadingAuth #\"+cell, 'removeClass', 'gridSelected');\r\n\t\t\t\tAH.select(\".shadingAuth #\"+cell).setAttribute(\"data-grid\", \"no\");\r\n\t\t\t}\r\n\t\t}\r\n        // updates the xml when the value of any elements changed\r\n\t\tupdateXml();\r\n    }\r\n\r\n    // to handle click event of correct answer grid\r\n    function boxClick(e) {\r\n\t\tlet selectedGrid;\r\n\t\tlet index;\r\n\t\tlet targetId = e.detail.value.target.id;\r\n\t\tselectedGrid = AH.select(\".shadingAuth #\"+targetId).getAttribute(\"data-id\");\r\n\t\tif ((!AH.select(\".shadingAuth #\" + targetId).classList.contains(\"lockedGrid\"))) {\r\n\t\t\tif (AH.select(\".shadingAuth #\"+targetId).getAttribute(\"data-grid\") == \"no\") {\r\n                AH.select(\".shadingAuth #\"+targetId).setAttribute(\"data-grid\", \"selected\");\r\n                AH.selectAll(\".shadingAuth #\"+targetId, 'addClass', 'gridSelected');\r\n\t\t\t\tif (!state.correctAns.includes( selectedGrid)) {\r\n\t\t\t\t\tstate.correctAns.push(selectedGrid);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tindex = state.correctAns.indexOf(selectedGrid);\r\n                state.correctAns.splice(index, 1);\r\n                AH.selectAll(\".shadingAuth #\"+targetId, 'removeClass', 'gridSelected');\r\n                AH.select(\".shadingAuth #\"+targetId).setAttribute(\"data-grid\", \"no\");\r\n\t\t\t}\r\n\t\t}\r\n        // updates the xml when the value of any elements changed\r\n\t\tupdateXml();\r\n\t}\r\n\r\n    // updates the xml when the value of any elements changed\r\n    function updateXml() {\r\n\t\tsetTimeout( function() {\r\n\t\t\tlet updatedXml = '<smxml type=\"44\" name=\"Shading\" rowCount=\"' + state.rowCount + '\" colCount=\"' + state.colCount + '\" cellWidth=\"' + state.cellWidth + '\" cellHeight=\"' + state.cellHeight + '\" correctAns=\"' + state.correctAns + '\" correctCount=\"' + state.methodCount + '\" shadedCell=\"' + state.shadedCell + '\" lockedCell=\"' + state.cellLocked + '\" HiddenCell=\"' + state.hiddenCell + '\" lockedCellValue=\"' + state.lockedCellValue + '\"><!--[CDATA[]]--></smxml>';\r\n\t\t\tgetChildXml(updatedXml);\t\t\t\r\n\t\t}, 100);\r\n\t}\r\n\r\n    // to handle on change event of input fields\r\n    function handleChange(eve) {\r\n        let cur_elem = eve.detail.value.target;\r\n        let cellWidthVal = AH.select('#cellWidth').value;\r\n        let cellHeightVal = AH.select('#cellHeight').value;\r\n        let rowCountVal = AH.select('#rowCount').value;\r\n        let colCountVal = AH.select('#colCount').value;\r\n        let methodCountVal = AH.select('#methodCount').value;\r\n        let elementVal = cur_elem.value;\r\n\t\tlet min = cur_elem.min;\r\n\t\tlet element_id = cur_elem.id;\r\n        let max = cur_elem.max;\r\n        state[cur_elem.name] = cur_elem.value;\r\n        state.gridWidth = parseInt(cellWidthVal) * sizeMultipleIndex;\r\n        state.gridHeight = cellHeightVal * sizeMultipleIndex;\r\n        state.rowCount = rowCountVal;\r\n        state.colCount = colCountVal;\r\n        state.methodCount = methodCountVal;\r\n\r\n        if (element_id != \"methodCount\" && AH.select('#methodCount').value != \"\") {\r\n            state.methodCount = AH.select('#methodCount').getAttribute('min');\r\n        }\r\n        // For handeling input's min and max value on Keyup \r\n\t\tif (elementVal != \"\") {\r\n\t\t\tlet labelText = AH.select(\"#\" + cur_elem.id).getAttribute(\"data-label\"); \r\n\t\t\tif (parseInt(elementVal) < parseInt(min)) {\r\n\t\t\t\tAH.alert(labelText+ \" can be between \\n\"+ min + \" to \" + max);\r\n\t\t\t\tstate[cur_elem.name] = min;\r\n\t\t\t} else if (parseInt(elementVal) > parseInt(max)) {\r\n\t\t\t\tAH.alert(labelText+ \" can be between \\n\"+ min + \" to \" + max);\r\n\t\t\t\tstate[cur_elem.name] = max;\r\n\t\t\t}\r\n\t\t}\r\n\t\tresetValues();\r\n        updateXml();\r\n    }\r\n\r\n    // to reset the shaded grid and correct answer grid\r\n    function resetValues() {\r\n        AH.selectAll(\"#authoringMethod_table .gridColor,.authShadeTable .gridColor\", 'removeClass', 'lockedGrid');\r\n        AH.selectAll(\"#authoringMethod_table .gridColor,.authShadeTable .gridColor\").forEach((gridVal) => {\r\n            gridVal.setAttribute(\"data-grid\", \"no\");\r\n        });\r\n        state.correctAns = [];\r\n        state.shadedCell = [];\r\n        state.cellLocked = 'false';\r\n        state.lockedCellValue = '';\r\n    }\r\n\r\n    // to handle on blur event of input fields\r\n    function inputChangeBlur(eve) {\r\n        let cur_elem_blur = eve.detail.value.target;\r\n        if (cur_elem_blur.value == '') {\r\n            AH.alert(l.empty_field);\r\n            state[cur_elem_blur.name] = cur_elem_blur.min;\r\n            resetValues();\r\n            updateXml();\r\n        }\r\n    }\r\n\r\n    // to lock the shaded grid if it is part of corrct answer. done by checkbox\r\n    function checkboxHandler (e) {\r\n\t\tlet lockCell = 0;\r\n\t\tstate.shadedCell.map(function(data, i) {\r\n\t\t\tstate.correctAns.map(function(data2, j) {\r\n\t\t\t\tif (data == data2) {\r\n\t\t\t\t\tlockCell = lockCell + 1;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t\tif (state.shadedCell.length == 0) {\r\n            AH.alert(\"Please shade the cells\");\r\n            e.preventDefault();\r\n\t\t} else {\r\n\t\t\tif (lockCell == state.shadedCell.length || state.methodCount != '') {\r\n\t\t\t\tstate.cellLocked = state.cellLocked == 'true' ? 'false' : 'true';\r\n                let auth_id = '';\r\n                AH.selectAll(\".authShadeTable td.gridSelected\").forEach((value) => {\r\n                    auth_id += value.getAttribute('data-id') + ',';\t\r\n                });\r\n                auth_id = auth_id.substr(auth_id, auth_id.length - 1);\r\n                if (state.cellLocked == 'true') {\r\n                    AH.selectAll(\".authShadeTable td.gridSelected, .authMethodTable #grid_a\"+auth_id.split(',').join(',.authMethodTable #grid_a'), 'addClass', 'lockedGrid');\r\n                    state.lockedCellValue = auth_id;\r\n                } else {\r\n                    AH.selectAll(\".authShadeTable td.gridSelected, .authMethodTable #grid_a\"+auth_id.split(',').join(',.authMethodTable #grid_a'), 'removeClass', 'lockedGrid');\r\n                    state.lockedCellValue = '';\r\n                }\r\n\t\t\t\tupdateXml();\r\n\t\t\t} else {\r\n                AH.alert(l.lock_author_cell);\r\n                e.preventDefault();\r\n\t\t\t}\t\r\n\t\t}\r\n    }\r\n    \r\n    // to handle change event of select field to specify the correct answer method\r\n    function handleAuthoringMethod(event) {\r\n        state.authorMethod = event.target.value;\r\n        let _this = AH.select(\"[name=\"+event.target.name+\"]\");\r\n        AH.selectAll('.'+_this.options[_this.selectedIndex].getAttribute('data-show'), 'addClass', 'd-inline-block')\r\n        AH.selectAll('.'+_this.options[_this.selectedIndex].getAttribute('data-hide'), 'removeClass', 'd-inline-block')\r\n        if (AH.select(\"[name='\"+event.target.name+\"']\").value == \"byCount\") {\r\n\t\t\tstate.correctAns = \"\";\r\n\t\t\tstate.methodCount = 1;\r\n\t\t} else {\r\n\t\t\tstate.methodCount = \"\";\r\n\t\t}\r\n\t\tresetValues();\r\n\t\tupdateXml();\r\n    }\r\n    \r\n    // for ada checkbox\r\n    function adaKeyupCheckbox(e) {\r\n        if (e.keyCode == 13) {\r\n            checkboxHandler(e);\r\n        }\r\n    }\r\n\r\n    // for ada correct ans grid\r\n    function adaKeyupBoxClick(e) {\r\n        if (e.detail.value.keyCode == 13) {\r\n            boxClick(e);\r\n        }\r\n    }\r\n\r\n    // for ada shaded grid\r\n    function adaKeyupAuthorClick(e) {   \r\n        if (e.detail.value.keyCode == 13) {\r\n            authorClick(e);\r\n        }\r\n    }\r\n    \r\n</script>\r\n<div class=\"shadingAuth\">\r\n    <div class=\"col-sm-12 mb-4 font-weight-bold font15\">{l.canvas_options}</div>\r\n    <div class=\"row form-group\">\r\n        <div class=\"row mx-0 px-3 mb-4\">\r\n            <InputField \r\n                labelname={l.row_count} \r\n                max=10 \r\n                name=rowCount \r\n                id=\"rowCount\" \r\n                datalabel={\"Number of rows\"} \r\n                value={state.rowCount} \r\n                on:handleChange = {handleChange}\r\n                on:inputChangeBlur = {inputChangeBlur}\r\n            />\r\n            <InputField \r\n                labelname={l.col_count} \r\n                max=10 \r\n                name=colCount \r\n                id=\"colCount\" \r\n                datalabel={\"Number of column\"} \r\n                value={state.colCount} \r\n                on:handleChange = {handleChange}\r\n                on:inputChangeBlur = {inputChangeBlur}\r\n            />\r\n        </div>\r\n        <div class=\"row mx-0 px-3\">\r\n            <InputField \r\n                labelname={l.cell_width} \r\n                max=5 \r\n                name=cellWidth \r\n                id=\"cellWidth\" \r\n                datalabel={\"Width Value\"} \r\n                value={state.cellWidth} \r\n                shwmsg=\"1\"\r\n                msgdetail={sizeMultipleIndex}\r\n                on:handleChange = {handleChange}\r\n                on:inputChangeBlur = {inputChangeBlur}\r\n            />\r\n            <InputField \r\n                labelname={l.cell_height} \r\n                max=5 \r\n                name=cellHeight \r\n                id=\"cellHeight\" \r\n                datalabel={\"Height Value\"} \r\n                value={state.cellHeight} \r\n                shwmsg=\"1\"\r\n                msgdetail={sizeMultipleIndex}\r\n                on:handleChange = {handleChange}\r\n                on:inputChangeBlur = {inputChangeBlur}\r\n            />\r\n        </div>\r\n    </div>\r\n    <div class=\"col-sm-12 mb-4 font-weight-bold font15\">{l.author_shaded}</div>\r\n    <div class=\"col-sm-12 mb-4\">\r\n        <ShadedGridTable \r\n            table_id=\"shadingtable\" \r\n            table_class=\"shadingTable authShadeTable\"\r\n            total_row_count={total_row_count}\r\n            table_value={table_value}\r\n            on:gridClick = {authorClick}\r\n            on:adaKeyupClick = {adaKeyupAuthorClick}\r\n        />\r\n    </div>\r\n    <div class=\"col-sm-12 mb-5\">\r\n        <div class=\"input-check\">\r\n            <label for=\"lock_author_cell\" class=\"custom_checkbox_new float-left mr-1\">\r\n                <input \r\n                    type=\"checkbox\" \r\n                    id = \"lock_author_cell\"\r\n                    value={state.cellLocked}\r\n                    on:click = {checkboxHandler}\r\n                    on:keyup={adaKeyupCheckbox}\r\n                    aria-label = 'Lock Author checkbox'\r\n                >\r\n                <div class=\"check_mark_custom pt-sm1\"></div>\r\n            </label>\r\n            <label for=\"lock_author_cell\">{l.lock_shaded_cells}</label>\r\n        </div>\r\n    </div>\r\n    <hr class=\"border-dashed-top\" />\r\n    <div class=\"col-sm-12 mb-4 font-weight-bold font15\">{l.set_corr_ans}</div>\r\n    <div class=\"col-sm-12 mb-4 font-weight-bold font15\">{l.method}</div>\r\n    <div class=\"col-sm-12 mb-4 font-weight-bold font15\">\r\n        <select \r\n            value={state.authorMethod} \r\n            name=\"authorMethod\" \r\n            class=\"bg-gray-hover form-select width-authoring d-inline-block\" \r\n            id=\"set\"\r\n            on:change={handleAuthoringMethod}\r\n        >\r\n            <option value=\"byLocation\" id=\"byLoc_sel\" data-show=\"locationMethod\" data-hide=\"countMethod\" selected=\"selected\">{l.set_corr_loc}</option>\r\n            <option value=\"byCount\" id=\"bycount_sel\" data-show=\"countMethod\" data-hide=\"locationMethod\">{l.set_corr_count}</option>\r\n        </select>\r\n        <div class=\"mb-4 ml-3 width-authoring countMethod h\">\r\n            <InputField \r\n                max={state.rowCount * state.colCount}\r\n                value={state.methodCount}\r\n                on:handleChange = {handleChange}\r\n                on:inputChangeBlur = {inputChangeBlur}\r\n                set_corr_ans = 1\r\n            />\r\n        </div>\r\n    </div>\r\n    <div class=\"col-sm-12 mb-4 locationMethod h d-inline-block\">\r\n        <ShadedGridTable \r\n            table_id=\"authoringMethod_table\" \r\n            table_class=\"shadingTable authMethodTable\"\r\n            total_row_count={total_row_count}\r\n            table_value={table_corr_value}\r\n            on:gridClick = {boxClick}\r\n            on:adaKeyupClick = {adaKeyupBoxClick}\r\n        />\r\n    </div>\r\n</div>"],"names":[],"mappings":"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"}