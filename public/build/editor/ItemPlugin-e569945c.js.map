{"version":3,"file":"ItemPlugin-e569945c.js","sources":["../../../clsSMStepAlgo/StepAlgo.svelte","../../../clsSMMixedItem/ItemPlugin.svelte"],"sourcesContent":["\n<!-- \n*  File Name   : StepAlgo.svelte\n*  Description : Saving answer tool and question model boxes\n*  Author      : Sundaram Tripathi\n*  Version     : 1.0\n*  Package     : pe-items\n*  Last update :  -->\n<script>\n    import {writable} from 'svelte/store';\n    import { Button, Dialog, Checkbox } from 'svelte-mui/src';\n    import l from '../src/libs/editorLib/language.js';\n    import { beforeUpdate,onMount } from 'svelte';\n    import {AH,XMLToJSON,JSONToXML} from \"../helper/HelperAI.svelte\";\n\n     window.spanCounter = 0;\n    // window.currentId = \"\";\n    // window.currentInp = \"\";\n    let state = {};\n    let new_xml = {}\n    var all_steps = [];\n    export let stopAuthoringUpdate;\n    export let xml;\n    export let editorState;\n    export let getChildXml;\n\n    \n    \n    let stateData = writable({\n        xml                         : '',         \n        fillInTheBlanksChoice       : 1,\n        opened                      : false,\n        deleteIndex                 : \"\",\n        remediationToggle           : false,\n        snackback                   : false,\n        input_ans                   : '',\n        spanCounter                 : 0,\n        currentId                   : '',\n        currentInp                  : ''\n\n    })\n\n    const unsubscribe = stateData.subscribe((items)=>{\n        state = items;\n    })\n\n    onMount(()=>{\n        if(xml) {\n            new_xml = XMLToJSON(xml);\n            showItems(new_xml.smxml.step);\n            //jQuery('#sticky_checkbox_0').trigger('click');\n            AH.select(\"#sticky_checkbox_0\").click();\n            //setTimeout(function() {\n                //jQuery('#sticky_checkbox_0').trigger('click');\n                AH.select('#sticky_checkbox_0').click();\n            //}, 1000);\n        }\n        setTimeout(function() {\n            //jQuery('.save_button_steps').prop('disabled', 'disabled');\n            AH.selectAll('.save_button_steps','attr',{disabled:'disabled'});\n            initEditor();\n        }, 500);\n\n        // jQuery(document).on(\"click touchstart\", \".editFill\", function() {\n\t\t// \tif(jQuery(this).attr(\"type\") == \"t\") {\n\t\t// \t\teditTextbox(jQuery(this).attr(\"originalKey\"));\n\t\t// \t} else if(jQuery(this).attr(\"type\") == \"e\") {\n\t\t// \t\teditMathbox(jQuery(this).attr(\"originalKey\"));\n\t\t// \t}\n\t\t// })\n\n        AH.listen(document,'click','.editFill',function(curr,e) {\n            if(curr.getAttribute(\"type\") == \"t\") {\n                editTextbox(curr.getAttribute(\"originalKey\"));\n            } else if(curr.getAttribute(\"type\") == \"e\") {\n                editMathbox(curr.getAttribute(\"originalKey\"));\n            }\n        })\n\n        AH.listen(document,'touchstart','.editFill',function(curr,e) {\n            if(curr.getAttribute(\"type\") == \"t\") {\n                editTextbox(curr.getAttribute(\"originalKey\"));\n            } else if(curr.getAttribute(\"type\") == \"e\") {\n                editMathbox(curr.getAttribute(\"originalKey\"));\n            }\n        })\n\n\n\n    })\n\n    function editTextbox(key) {\n        //console.log('checking');\n\t\tkey = key.replace(/%{|}%/g, \"\");\n\t\tkey = key.split(\"|\");\n\t\tlet ans = key[0].trim();\n        \n\t\tlet ans_type = ((key[1])?key[1].trim():\"\");\n\t\t\n            state.numeric = ((ans_type == \"n\")? true : false );\n            state.fillInTheBlanksChoice = 1;\n            state.open = true;\n        \n\t\t//this.setState({fillInTheBlanksChoice:1});\n\t\t//this.setState({open:true});\n\t\tif(ans.indexOf(\"#style#\") != -1) {\n\t\t\tlet customStyle  = ans.split(\"#style#\")\n\t\t\t//jQuery(\"#responseDialog #customStyleText\").val(customStyle[1]);\n            AH.select(\"#responseDialog #customStyleText\").value = customStyle[1];\n\n\t\t\t//jQUery(\"#input1\").val(customStyle[0]);\n            //AH.select(\"#input1\").value = customStyle[0];\n            state.input_ans = customStyle[0];\n\t\t} else {\n\t\t\t//jQuery(\"#input1\").val(ans);\n            // setTimeout(()=>{\n            //     AH.select(\"#input1\").value = ans;\n            // },100)\n            state.input_ans = ans;\n\t\t}\t\n    }\n\n\n    function editMathbox(key) {\n\t\tkey = key.replace(/%{|}%/g, \"\");\n\t\tkey = key.split(\"|\");\n\t\tlet ans = key[0].trim();\n\t\tlet ans_type = ((key[1])?key[1].trim():\"\");\n\t\t// this.setState({\n        //     customStyle:((ans.indexOf(\"#style#\") != -1)?true:false),\n        //     fillInTheBlanksChoice:2,\n        //     open:true\n        // });\n        state.customStyle = ((ans.indexOf(\"#style#\") != -1)?true:false);\n        state.fillInTheBlanksChoice =2;\n        state.open = true;\n\t\t//this.setState({fillInTheBlanksChoice:2}); ## ALready commented\n\t\t//this.setState({open:true}); ## ALready commented\n\n\t\tif(ans.indexOf(\"#style#\") != -1) {\n\t\t\tlet customStyle  = ans.split(\"#style#\")\n\t\t\t//$(\"#responseDialog #customStyleText\").val(customStyle[1]);\n            AH.select(\"#responseDialog\").value = customStyle[1];\n            AH.select('#customStyleText').value = customStyle[1];\n\t\t\t//$(\"#input\"+i).val(customStyle[0]);\n            AH.select(\"#input\"+i).value = customStyle[0];\n\t\t} else {\n            //$(\"#input\").val(ans);\n            AH.select(\"#input\").value = ans;\n\t\t}\t\n\t}\n    \n    beforeUpdate(()=>{\n        if (xml != state.xml) {\n            state.xml = xml;\n            if (stopAuthoringUpdate === true) return;\n            new_xml = XMLToJSON(state.xml);\n            showItems(new_xml.smxml.step);\n        }\n    })\n\n    function showItems(steps) {\n        steps = replaceVariables(steps);\n        all_steps = steps;\n        setToggle(all_steps);\n        parseXmlAuthoring(steps);\n    }\n\n    function setToggle(steps) {\n        let toogle = '';\n        steps.map(function(item, index) {\n            if(item._viewonly == 1) {\n                all_steps[index].toggle = 1;\n            } else {\n                all_steps[index].toggle = 0;\n            }\n        })\n        return all_steps;\n    } \n\n    function replaceVariables(latex_str) {\n        let latex_arr = [];\n        let latex_arr_check = latex_str;\n        if(latex_arr_check.length == undefined && latex_arr_check != \"\") {\n            latex_arr.push(latex_arr_check);\n        } else {\n            latex_arr = latex_arr_check;\n        }\n        latex_arr.map(function(item, index) {\n            let cdata = item.__cdata;\n            let vars = cdata.match(/<{[\\s\\S]*?}>/gm);\n            if(vars) {\n                vars.map(function(element) {\n                    let item = element.match(/<\\{(.*?)\\}>/g);\n                    item = item.toString().replace(/<\\{|\\}>/g, '');\n                    item = \"var:\"+item;\n                    item = item.trim();\n                    cdata = cdata.replace(element, item);\n                });\n            }\n            latex_arr[index].__cdata = cdata;\n        });\n        return latex_arr;\n    }\n\n    function parseXmlAuthoring(steps) {\n        steps.map(function(item, index) {\n            let cdata = item.__cdata;\n            let answerKey = cdata.match(/%{[\\s\\S]*?}%/gm);\n            let answerType = '';\n            if(answerKey) {\n                //jQuery(answerKey).each(function(i){\n                answerKey.forEach(function(data,i){\n                    let originalKey = answerKey[i];\n                    let latexKey = \"\";\n                    let editMath = \"\";\n                    answerType = answerKey[i].match(/\\|(.*?)}%$/gm);\n                    answerType = (answerType) ? answerType[0].replace(/\\||}%/gm, '') : 't';\n                    let innerKey = \"\";\n                    let icon = \"\";\n                    let type = \"\";\n                    if(answerType == \"t\") {\n                        type = answerType;\n                        innerKey = \"Textbox\";\n                        icon = \"icomoon-insert-template\";\n                    } else if(answerType == \"n\") {\n                        type = \"t\";\n                        innerKey = \"Numeric\";\n                        icon = \"icomoon-insert-template\";\n                    } else if(answerType== \"e\") {\n                        type = answerType;\n                        innerKey = \"Math\";\n                        latexKey = originalKey.replace(/\\%\\{|\\|e\\}\\%/g, \"\");\n                        latexKey = \"latex=\\\"\"+latexKey+\"\\\"\";\n                        editMath = \"editMath\";\n                        icon = \"icomoon-insert-template\";\n                    }\n                    var regex = new RegExp(RegExp.quote(originalKey));\n                    cdata = cdata.replace(regex, \"<span id=\\\"latexSpan\"+(state.spanCounter = ++state.spanCounter)+\"\\\" \"+latexKey+\" type='\"+type+\"' class='alert alert-info editFill \"+editMath+\"' originalkey='\"+originalKey+\"' style='padding: 5px;outline: none;line-height:40px;cursor:move;color:#000' contentEditable='false'><i style='padding-right:4px' class='\"+icon+\"'></i>\"+innerKey+\"</span>\");\n                });\n            }\n            all_steps[index].__cdata = cdata;\n        });\n\t}\n\n\n\n    function goNext(id) {\n        let ref = document.querySelector(\"#\"+id);\n        if(ref.checked) {\n            state.gonext = true;\n            new_xml.smxml._gonext = \"1\";\n        } else {\n            state.gonext = false;\n            new_xml.smxml._gonext = \"0\";\n        }\n        updateXML();\n    }\n\n    function fixedAnswer(id) {\n        let ref = document.querySelector(\"#\"+id);\n        if(ref.checked) {\n            state.variable_button = true;\n            new_xml.smxml._fixed = \"1\";\n        } else {\n            state.variable_button = false;\n            new_xml.smxml._fixed = \"0\";\n        }\n        updateXML();\n    }\n\n    function handleChangeCheckbox(id, fillid, e) {\n        let name = e.target.name;\n        let ref = document.querySelector(\"#\"+name+id);\n        let val = \"_\"+e.target.value;\n        let seq = id;\n        if(ref.checked) {\n            new_xml.smxml.step[seq][val] = \"1\"; \n        } else {\n            new_xml.smxml.step[seq][val] = \"0\";\n        }\n        //let data = jQuery('#'+fillid).html();\n        let data = document.querySelector('#'+fillid).innerHTML;\n        updateXML();\n    }\n\n\n    function handleDisable(i) {\n        console.log('handle click');\n        //jQuery('#save_step_'+i).removeAttr('disabled');\n        AH.select('#save_step_'+i,'removeAttr','disabled');\n    }\n\n    function handleRadio(index, fillid, event) {\n        if(all_steps[index].toggle == 1) {\n            all_steps[index].toggle = 0\n            new_xml.smxml.step[index]._viewonly = \"0\";\n            new_xml.smxml.step[index]._attempt = \"1\";\n        } else {\n            all_steps[index].toggle == 1;\n            new_xml.smxml.step[index]._viewonly = \"1\";\n            new_xml.smxml.step[index]._attempt = \"0\";\n        }\n        //let data = jQuery('#'+fillid).html();\n        let data = document.querySelector('#'+fillid).innerHTML;\n        updateXML();\n    }\n\n    function deleteEvent(index, data) {\n        let delete_event;\n        if(data == 'steps') {\n            delete_event = all_steps;\n            if(delete_event.length > 2) {\n                const add = delete_event.splice(index, 1);\n            } else {\n                AH.alert(\"You have atleast 2 steps.\");\n            }\n        all_steps = delete_event; \n        updateXML();\n        } else if(data == 'algo') {\n            state.opened = true;\n            state.deleteIndex = index;\n        };\n        \n    }\n\n    function handleSave(id, fillid) {\n        //let data = jQuery('#'+fillid).html();\n        let data = document.querySelector('#'+fillid).innerHTML;\n        data = data.replace(/&amp;/g,'&'); // replace amp to maintain html entity.\n        all_steps[id].__cdata = data; \n        //jQuery('#save_step_'+id).prop('disabled', 'disabled');\n        //document.querySelector('#save_step_'+id).disabled = true;\n        AH.select('#save_step_'+id,'attr',{disabled:'disabled'})\n        updateXML();\n    }\n\n    function updateXML() {\n        let fixans = new_xml.smxml._fixed;\n        let gonext = new_xml.smxml._gonext;\n        let xml = '<smxml type=\"37\" fixed=\"'+fixans+'\" gonext=\"'+gonext+'\">';\n        all_steps.map(function(element, i) {\n            let seq = i+1;\n            let viewonly = element._viewonly;\n            let mode = element._mode;\n            let attempt = element._attempt;\n            let sticky = element._sticky;\n            let data = element.__cdata;\n            // data = self.reverseReplaceVariables(data);\n            data = reverseHtmlSpecialChars(data);\n            data = replaceSpaces(data);\n            data  = data.replace(/&quot;/g, '\"').replace(/&nbsp;/g, ' ');\n            data  = data.replace(/'/g, '\"').replace(/\\n/g, '');\n            let arr = data.match(/<span(.*?)>(.*?)<\\/span>/gi);\n            if(arr) {\n                for(var i=0; i<arr.length; i++) {\n                    let originalkey = arr[i].match(/originalkey=\"%(.*?)%\"/g);\n                    if(originalkey) {\n                        originalkey = originalkey.toString().replace(/originalkey=/g, '').replace(/\"%|%\"/g, '%');\n                        data = data.replace(arr[i], originalkey);\n                    }\n                }\n            }\n            let cdata = data;\n            xml = xml + \"<step seq='\"+seq+\"'\" + ((attempt != undefined)? \" attempt ='\"+attempt+\"'\" : ' ') + ((viewonly != undefined)? \" viewonly ='\"+viewonly+\"'\" : ' ') + ((mode != undefined)? \" mode ='\"+mode+\"'\" : ' ') + ((sticky != undefined)? \" sticky ='\"+sticky+\"'\" : ' ') +\"><!--[CDATA[\"+cdata+\"]]--></step>\";\n        });\n        xml = xml + \"</smxml>\";\n        getChildXml(xml);\n    }\n\n    function reverseHtmlSpecialChars(data) {\n        let tags = data.match(/&lt;(.*?)&gt;/gm);\n\t\tlet tag = '';\n\t\tif(tags) {\n\t\t\tfor(var i=0; i<tags.length; i++) {\n                tag = tags[i];\n                tags[i] = tags[i].replace(/&lt;/g, \"<\").replace(/&gt;/g, \">\");\n                data = data.replace(tag, tags[i]);\n\t\t\t}\n\t\t}\n\t\treturn data;\n    }\n\n    function replaceSpaces(data) {\n        let matching = data.match(/var:var\\d+\\s+\\s+/g);\n        let match;\n        if(matching) {\n            matching.map(function(item, index){\n                match = item.trim();\n                data = data.replace(item,match);\n            });\n        }\n        return data;\n    }\n\n    function addEvent(data) {\n        let obj = {};\n        obj._seq = all_steps.length+1;\n        obj._viewonly = \"1\";\n        obj._attempt = \"0\";\n        obj._mode = \"0\";\n        obj.__cdata = \"New Step\";\n        all_steps.push(obj);\n        updateXML();\n        state.snackback = true;\n        var timer = setTimeout(function() {\n            initEditor();\n            clearTimeout(timer);\n        }, 500);\n    }\n\n    function initEditor() {\n        // jQuery(document).on(\"click\", \".editMath\", function(e){\n        //     window.currentId = jQuery(this).attr('id');\n        // });\n\n        AH.listen(document,\"click\",\".editMath\",function(_this,e){\n            // window.currentId = _this.getAttribute('id');\n            state.currentId = _this.getAttribute('id');\n        })\n\n        // jQuery(document).on(\"click\", \".materialOverlay\", function(e){\n\t\t// \twindow.currentId = null;\n        //     window.currentInp = null;\n        // });\n\n        AH.listen(document,'click','.materialOverlay',function(e){\n            //window.currentId = null;\n            state.currentId  = null;\n            //window.currentInp = null;\n            state.currentInp = null;\n        })\n\n\t\ttinyMCE.PluginManager.add('res', function(editor, url) {\n            editor.addMenuItem('resp', {\n                text:\"Add response\",\n                id:'addToken',\n                onclick: function () {\n                    handleOpen();\n                },\n                context: 'insert',\n                prependToContext: true\n            });\n        });\n\t\ttinymce.PluginManager.load('equationeditor', themeUrl+'pe-items/tinymce/plugins/equationeditor/plugin.min.js');\n\t\ttinymce.init({\n            selector: '.tinymce-editor-res',\n            inline: true,\n            theme: 'modern',\n            skin: 'skin02',\n            min_width: 100,\n            resize: true,\n            menubar: false,\n            toolbar: true,\n            elementpath: false,\n            statusbar: false,\n            force_br_newlines: true,\n            remove_trailing_brs: true,\n            forced_root_block: false,\n            extended_valid_elements: 'span[onClick|contentEditable]',\n            valid_elements: \"*[*]\",\n\t\t\tfixed_toolbar_container: '#toolbar_container',\n            extended_valid_elements: 'uc:syntax,uc:ref',\n            custom_elements: 'uc:syntax,~uc:ref',\n            plugins: [\n                \"lists link image charmap print preview anchor\",\n                \"searchreplace code fullscreen\",\n                \"insertdatetime media table contextmenu paste res equationeditor \"\n            ],\n            content_css: themeUrl+'pe-items/tinymce/plugins/equationeditor/mathquill.css',\n            toolbar: [\n            ' bold italic underline | equationeditor'\n            ],\n            contextmenu:\"resp\",\n            paste_as_text: true\n        });\n\t}\n\n    function handleClose() {\n        if(state.fillInTheBlanksChoice == 2) {\n\t\t\t//window.currentId = null;\n            state.currentInp = null;\n\t\t}\n        state.open = false; \n    }\n\n    function updateDialog(targetVal) {  \n        state.fillInTheBlanksChoice = targetVal;\n    }\n\n    function addEditable() {\n\t\t//let txt = jQuery(\"#input\");\n        let txt = document.querySelector(\"#input\");\n        //let caretPos = txt[0].selectionStart;\n        let caretPos = txt.selectionStart;\n\t\t//let textAreaTxt = txt.val();\n        let textAreaTxt = txt.value;\n         var txtToAdd = \"\\\\MathQuillMathField\";\n        var txtToAdd  = \"user Response\";\n        //txt.val(textAreaTxt.substring(0, caretPos) + txtToAdd + textAreaTxt.substring(caretPos));\n        txt.value = textAreaTxt.substring(0, caretPos) + txtToAdd + textAreaTxt.substring(caretPos);\n\t}\n\n    function latexEdit() {\n        state.open = true;\n    }\n\n    function storeAns() {\n\t\tvar validate = 0;\n\t\tif(state.fillInTheBlanksChoice == 1) {\n\t\t\t//let ans = jQuery(\"#input1\").val();\n            let ans = document.querySelector(\"#input1\").value;\n\t\t\t//let numeric = jQuery(\"#responseDialog #numeric\")[0].checked;\n            let numeric = document.querySelector(\"#responseDialog #numeric\").checked;\n            if(numeric == true) {\n\t\t\t\tans += \" |n\";\n\t\t\t}\n\t\t\tif(ans.trim() == \"\") {\n\t\t\t\tvalidate = 1;\n\t\t\t\tvalidate(\"All fields are required\");\n\t\t\t} else {\n\t\t\t\ttinyMCE.activeEditor.insertContent(\"<span type='t' class='alert alert-info editFill' originalKey='%{\"+ans.trim()+\"}%' style='padding: 5px;outline: none;line-height:40px;cursor:move;color:#000' contentEditable='false'><i style='padding-right:4px' class='icomoon-insert-template'></i>\"+((numeric == true)?\"Numeric\":\"Textbox\")+\"</span>\");\n\t\t\t}\n        }\n        if(state.fillInTheBlanksChoice == 2) {\n\t\t\t//let e = jQuery(\"#input\").val();\n            let e = document.querySelector(\"#input\").value;\n\t\t\tif(validate == 0) {\n\t\t\t\t//document.querySelector(\"#\"+window.currentId).setAttribute(\"latex\",e);\n                document.querySelector(\"#\"+state.currentId).setAttribute(\"latex\",e);\n\t\t\t\t//document.querySelector(\"#\"+window.currentId).setAttribute(\"originalKey\",\"%{\"+e+\"|e}%\");\n                document.querySelector(\"#\"+state.currentId).setAttribute(\"originalKey\",\"%{\"+e+\"|e}%\");\n\t\t\t\t//window.currentId = null;\n                state.currentId = null;\n\t\t\t\t//window.currentInp = null;\n                state.currentInp = null;\n\t\t\t} else {\n\t\t\t\tvalidate(\"All fields are required\");\n\t\t\t}\n\t\t}\n\n\t\tif(validate == 0) {\n\t\t\thandleClose();\n\t\t}\n    }\n\n    function handleOpen() {\n        // this.setState({\n        //     open: true,\n        //     codetype: false,\n        //     numeric: false\n        // });\n        state.open = true;\n        state.codetype = false;\n        state.numeric = false;\n        //this.setState({codetype: false}); #already commented on also react\n        //this.setState({numeric: false}); #already commented on also react\n    }\n\n</script> \n<main>\n    <div class=\"mt-imp border\">\n        <div class=\"border-bottom d-flex justify-content-between px-2 pt-1\">\n            <div class=\"d-inline-block pt-1 float-start cr_step\" style={'font-size:20px;position:relative;'}>{l.create_steps}</div>\n            <div style={{}}>\n                <div class=\"modes_checkbox d-inline-block top-checkbox_gonext position-relative top2\">\n                    \n                    <Checkbox  \n                        id=\"go_next\" \n                        defaultChecked = {state.gonext ? true: false} \n                        on:click={(e)=>{goNext(\"go_next\",e)}} \n                    >{\"Go Next\"}</Checkbox>\n                        \n                </div>\n                <div class=\"modes_checkbox d-inline-block m-l top-checkbox_fix position-relative top2\">\n                    <Checkbox  \n                        id=\"fixedans_checkbox\" \n                        defaultChecked = {state.variable_button ? true: false} \n                        on:click={(e)=>{fixedAnswer(\"fixedans_checkbox\",e)}} \n                    >{\"Fix Answer\"} </Checkbox>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"outer_steps mt-3 mx-3 clear-both\">\n            <!-- {this.all_steps.map((item, index) => -->\n            {#each all_steps as item,index}\n                <fieldset key={index} style={'border:1px solid grey'} class=\"new_steps seq_inbox fw shadow-sm mb-2\">\n                    <legend class=\"font18 mb ms-2 pl-1\" style={'width:1em;float:none;'}>{index+1}</legend>\n                    <div class=\"d-inline-block table_width ms-2 pl-1 pb-2 mb-1\" style={'width:97%;'}>\n                        <div \n                            data-seq={index} \n                            class=\"tinymce-editor-res steps_edit p-1 border fillAuthor\"\n                            id={`fillAuthor_${index}`} \n                            style={'padding:0 8px;overflow:auto;outline:none'} \n                            contentEditable={true}\n                            data-text=\"Enter text here\"\n                            on:keyup={(e)=>{handleDisable(index,e)}}\n                        >\n                        {@html item.__cdata}\n                        </div>\n                    </div>\n                    <div class=\"view_checkbox d-inline-block light-cyan-bg px-2 p-1 full-width fwidth\">\n                    <div class=\"test d-inline-block\">\n                        <span class=\"pointer d-inline-block plain_text\" data-toggle=\"tooltip\" title=\"Don't use any interactive item!\" for={`viewonly_radio_${index}`}>{l.plain_text}</span>\n                        <span class=\"stat-percent ms-4\" style={'display:inline-block;position:relative;'}>\n                            <span class=\"form-check form-switch\">\n                                <input type=\"checkbox\" class=\"form-check-input\" id=\"switchElement\"\n                                    checked={(item.toggle == \"1\"? false: true)}\n                                    on:change={(e)=>{handleRadio(index, 'fillAuthor_'+index,e)}}\n                                    color=\"primary\"\n                                >\n                                <label for=\"switchElement\">{l.interactive}</label>\n                                \n                            </span>\n                        </span>\n                    </div> \n                    <div class=\"d-inline-block plain_text ms-3\" >\n                        <div class=\"modes_checkbox d-inline-block ms-2\">\n                            <span class=\"check_box d-inline-block\">\n                                <!-- {(item._mode == \"1\") ? -->\n                                {#if item._mode == \"1\"}\n                                    <Checkbox data-seq={index} class=\"inner_inputs option_checkbox\" on:click={(e)=>{handleChangeCheckbox(index, 'fillAuthor_'+index,e)}} type=\"checkbox\" value=\"mode\" name=\"mode_checkbox_\" id={`mode_checkbox_${index}`} checked={true}\n                                    />\n                                {:else}\n                                    <Checkbox data-seq={index} class=\"inner_inputs option_checkbox\" on:click={(e)=>{handleChangeCheckbox(index, 'fillAuthor_'+index,e)}} type=\"checkbox\" value=\"mode\" name=\"mode_checkbox_\" id={`mode_checkbox_${index}`} checked={false}\n                                    />\n                                {/if}\n\n                            </span>\n                            <label class=\"font-weight-normal me-1 position-relative top2 right35\" for={`mode_checkbox_${index}`}>{l.no_validation}</label>\n                        </div>\n                        <!-- {index == 0 ?  -->\n                        {#if index == 0}\n                            <div class=\"stick_checkbox d-inline-block\">\n                                <span class=\"check_box d-inline-block\">\n\n                                    <!-- {(item._sticky == \"1\") ? -->\n                                    {#if item._sticky == \"1\"} \n                                        <Checkbox data-seq={index} checked={true} class=\"inner_inputs option_checkbox\" on:click={handleChangeCheckbox.bind(this, index, 'fillAuthor_'+index)} type=\"checkbox\" value=\"sticky\" name=\"sticky_checkbox_\" id={`sticky_checkbox_${index}`}/>\n                                    {:else}\n                                        <Checkbox data-seq={index} checked={false} class=\"inner_inputs option_checkbox\" on:click={handleChangeCheckbox.bind(this, index, 'fillAuthor_'+index)} type=\"checkbox\" value=\"sticky\" name=\"sticky_checkbox_\" id={`sticky_checkbox_${index}`}/>\n                                    {/if}\n                                </span>\n                                <label class=\"font-weight-normal me-1 position-relative top2 right35\" for={`sticky_checkbox_${index}`}>{l.sticky}</label>\n                            </div>\n                        {/if} \n                    </div>\n                    <div style={'display:inline-block;float:right;'} class=\"buttons edit_steps\">\n                        <div class=\"d-inline-block mr\" style={'display:inline-block;'} on:click={(e)=>{deleteEvent(index, 'steps',e)}}>\n                            <button type=\"button\" class=\"btn btn-light font12\">{l.delete}</button>\n                        </div> \n                        <div class=\"d-inline-block\" style={'text-align:right;margin-top:6px;'}>\n                            <button id={`save_step_${index}`} type=\"button\" on:click={(e)=>{handleSave(index, 'fillAuthor_'+index,e)}} class=\"btn btn-primary font12 save_button_steps\">{l.save}</button>\n                        </div>\n                    </div>\n                    </div>\n                </fieldset>\n            <!-- )} -->\n            {/each}\n        </div>\n        <div class=\"row mx-3 mt-3 pb-3\">\n            <Button variant=\"fab\" color=\"primary\" mini aria-label=\"Add\"\n                on:click={addEvent.bind(this, 'steps')}\n                class=\"btn btn-outline-primary rounded position-relative bottom0 bg-white shadow-sm height30\"\n                style={'float:left;width:120px;height:30px;border:1px solid #4285f4;color:#4285f4;text-transform:none;'}>\n                <span class=\"font18\">&#43; &nbsp;</span> Add Step\n            </Button>\n        </div>\n        <Dialog overlayClass=\"materialOverlay\"  bind:visible={state.open} on:close={handleClose.bind(this)} disableEnforceFocus={true} width=\"650\" class=\"row\" style={'background-color: #fff;'}>\n                    <!-- <DialogTitle \n                        classes={{\n                            root:\"p-md editor_modal_title\"\n                        }}\n                        > -->\n                    <div slot=\"title\">\n                        <div class=\"mr-lg float-left\" style={'padding-top:10px;padding-left:13px;font-size:18px;'}>{l.fill_header}</div>\n                        \n                        <div class=\"float-right mr-4\">\n\t\t\t\t\t\t\t<div class=\"btn-group mt-1 row ml-0\">\n\t\t\t\t\t\t\t\t<button type=\"button\" class={\"btn btn-light col-3\" + ((state.fillInTheBlanksChoice == 1)? \" active\": \"\")} value={1} on:click={updateDialog.bind(this, 1)} >Text</button>\n\t\t\t\t\t\t\t\t<button type=\"button\" class={\"btn btn-light col-9\" + ((state.fillInTheBlanksChoice == 2)? \" active\": \"\")} value={2} on:click={updateDialog.bind(this, 2)} >Mathematical Equation</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n                    </div>\n                    <!-- </DialogTitle> -->\n                    <div>\n                        <div id=\"responseDialog\">\n                            {#if state.fillInTheBlanksChoice == 1}\n                                <div>\n                                    <div class=\"d-flex mr-2\">\n                                        <div class=\"width100\">\n                                            <Checkbox  id = \"numeric\" checked = {state.numeric}>{\"Numeric\"}</Checkbox>\n                                            \n                                        </div>\n                                            <input\n                                                type=\"text\"\n                                                id = \"input1\"\n                                                value = {state.input_ans}\n                                                class=\"form-control mr-4 ml-3\"\n                                                style={'margin:5px'}\n                                                auto:focus = {true}\n                                                placeholder = {((AH.select(\"#input1\").innerHTML != \"\")?l.fill_text_placeholder:\"\")}\n                                            />\n                                    </div>\n                                    <div class=\"text-danger font-weight-bold ml-2 mt-3\">* Note:</div>\n                                    <div class=\"text-danger ml-2\" style={'text-indent:15px'}>{l.fill_text_help1}</div>\n                                    <div class=\"text-danger ml-2\" style={'text-indent:15px'}>2. Please do not include space.</div>\n                                </div>\n                            {:else}\n                                <div>\n                                    <div class=\"d-flex\">\n                                        <input\n                                            type=\"text\"                                \n                                            id = {\"input\"}\n                                            class = \"latexInp form-control\"\n                                            style = {'margin:5px;width:71%;'}\n                                            auto:focus = {true}\n\n                                        />                            \n                                        <Button \n                                            variant = \"contained\" \n                                            color = \"primary\"\n                                            style = {'border:1px solid #4285f4;color:#4285f4;text-transform:none;'} \n                                            on:click = {addEditable}\n                                            class=\"btn btn-outline-primary height30 bg-white shadow-sm mt-1 top1 ml-1\"\n                                        >\n                                        Add Response\n                                        </Button>                           \n                                        <div class = \"latexEditButton d-inline-block\">\n                                            <Button \n                                                id = {\"latexEdit\"}\n                                                variant = \"contained\" \n                                                color = \"primary\"\n                                                style = {'margin:5px;display:none;'} \n                                                on:click = {latexEdit}                                   \n                                            >\n                                            Edit\n                                            </Button>\n                                        </div>\n                                    </div>\n                                    <div class=\"text-danger font-weight-bold ml-1\">* Note:</div>\n                                    <div class=\"text-danger ml-1\" style={'text-indent: 15px;'}>{l.fill_math_help1}</div>\n                                    <div class=\"text-danger ml-1\" style={'text-indent: 15px;'}>{l.fill_math_help2}</div>\n                                </div>\n                            {/if}    \n                        </div>\n\n\n                    </div>\n                    <div class=\"svelteFooter\">\n                        <Button variant=\"contained\" on:click={handleClose} >\n                            {l.cancel}\n                        </Button>,\n                        <Button variant=\"contained\" on:click={storeAns}\n                            class=\"bg-primary text-white\">{l.done}\n                        </Button>\n                    </div>\n        </Dialog>\n</main>\n\n\n    \n\n\n<style>\n    .font18 {\n        font-size: 16px;\n    }\n    .fwidth   {\n        width: 100%;\n    }\n\n    .light-cyan-bg {\n        background-color: #d4e4ff; \n        color: #333;\n    }\n\n    .top2 {\n        top: 2px;\n    }\n    .right5 {\n        right: 5px;\n    }\n\n    .right35 {\n        right: 35px;\n    }\n\n    .step_checkbox {\n        width: 22%;\n        border: 1px solid black;\n        margin-left: 10px;\n        position: relative;\n        bottom: 1px;\n        cursor: pointer;\n        padding: 3px 2px 0;\n    }\n                \n    /* .steps_edit:empty:before {\n        content: attr(data-text),\n        content-editable:false;\n    } */\n\n    .fixed_ans {\n        top: 10px;\n        position: relative;\n        float: right;\n        border: 1px solid #e0e0e0;\n        background-color: #f5f5f5;\n        border-radius: 4px;\n        padding: 5px;\n        font-size: 15px;\n        font-weight: 700;\n    }\n\n    .check_box {\n        right: 24px;\n        position:relative;\n        width: 40px;\n    }\n\n    .inner_inputs {\n        margin: 0 12px!important;\n    }      \n    \n    .pointer {\n        cursor: pointer !important;\n    }\n\n    .width100 {width: 100px;}\n\n    /* .edit_steps {\n        margin-top: 11px!important;\n    }\n    .view_checkbox {\n        height: 75px;\n    }\n    .plain_text {\n        position: relative;\n        bottom: 20px;\n    } */\n\n    :global([id^=\"fillmain\"]) {\n        overflow:hidden;\n        /*width:700px;  testing*/\n        text-align:left;\n    }\n    :global([id^=\"fillmain\"] pre) {\n        background: none;\n        border: none;\n        font-size: 14px!important;\n    }\n    :global([id^=\"fillmain\"] .string) {\n        min-height:50px;\n        margin-top:10px;\n        margin-right:10px;\n    }\n    :global([id^=\"fillmain\"] .footerstr) {\n        position:relative;\n        margin-top: 10px;\n        background-color: #ccc;\n        padding: 15px;\n        min-height: 60px;/*100px;*/\n    }\n    :global([id^=\"fillmain\"] .footerstr .arrow-up) {\n        position: absolute;\n        top: -10px;\n        right: 50%;\n        width: 0;\n        height: 0;\n        border-left: 10px solid transparent;\n        border-right: 10px solid transparent;\n        border-bottom: 10px solid #ccc;\n    }\n    :global([id^=\"fillmain\"] .fill-row) {\n        padding:6px;\n    }\n    :global([id^=\"fillmain\"] .fillelement, [id^=\"fillmain\"] .drag-resize) {\n        height:30px;\n        display:inline-block;\n        position:relative;\n        min-height: 30px;\n        margin: 1px;\n    }\n    :global([id^=\"fillmain\"] input[type=\"text\"], [id^=\"fillmain\"] select) {\t\n        height:99%!important;\n        resize: none;\n        font-size:12px;\n        color: #000;\n        max-width: 800px;\n    }\n    :global([id^=\"fillmain\"] .drag-resize) {\n        vertical-align:middle;\n        border:1px solid #31B731;\n        text-align:center;\n        padding:3px;\n        font-size: 14px;\n    }\n    :global([id^=\"fillmain\"] .drag-resize.ui-draggable) {\n        cursor:move;\n    }\n    :global([id^=\"fillmain\"] .drop-hover) {\n        border: 1px dashed red!important;\n        box-shadow: 0 0 0 2px yellow inset;\n        outline: 1px solid blue;\n    }\n    :global([id^=\"fillmain\"] .fillcheck ul) {\n        width:220px;\n    }\n    :global([id^=\"fillmain\"] .fillcheck li.selected) {\n        background-color: #E5E5E5;\n    }\n    :global(.fillcheck .selected .icomoon-checkmark-3:before) {\n        float: left;\n        color: blue;\n        padding: 3px;\n        position: relative;\n        right: 14px;\n    }\n    :global(.fillcheck .icomoon-close-2:before) {\n        float: left;\n        color: blue;\n        position: relative;\n        right: 14px;\n        font-size: 20px;\n    }\n    :global(.MathJax_Display) {\n            display : inline!important;\n    }\n    :global([id^=\"fillmain\"] .select) {\n        font-size: 15px;\n    }\n    :global([id^=\"fillmain\"] .textarea) {\n        vertical-align:middle;\n        border-radius:3px;\n        background:#ffe;\n        border: 1px solid #ccc;\n        -webkit-box-shadow: inset 0 1px 1px rgba(0,0,0,0.075);\n        box-shadow: inset 0 1px 1px rgba(0,0,0,0.075);\n    }\n    :global(.ui-draggable-disabled) {\n        cursor: no-drop!important;\n        opacity: 0.5!important;\n    }\n                \n</style>","<script>\n    import NewAuthoring from '../clsSMStepAlgo/StepAlgo.svelte';\n\n    export let xml;\n    export let editorState;\n    export let getChildXml;\n    export let stopAuthoringUpdate;\n    export let uxml;\n    \n\n</script>\n<main>\n    {#if parseInt(editorState.content_icon) == 2}\n        <NewAuthoring xml = {xml} getChildXml = {getChildXml} stopAuthoringUpdate = {stopAuthoringUpdate} uxml={uxml} />\n    {/if}\n</main>"],"names":["ctx","bind","this","__cdata","_mode","_sticky","l","sticky","plain_text","interactive","no_validation","delete","save","toggle","fill_header","fillInTheBlanksChoice","addEditable","fill_math_help1","fill_math_help2","numeric","fill_text_help1","input_ans","AH","select","innerHTML","fill_text_placeholder","cancel","done","gonext","variable_button","length","open","create_steps","txt","document","querySelector","caretPos","selectionStart","textAreaTxt","value","substring","window","spanCounter","state","new_xml","all_steps","stopAuthoringUpdate","xml","editorState","getChildXml","writable","opened","deleteIndex","remediationToggle","snackback","currentId","currentInp","subscribe","items","editTextbox","key","ans","replace","split","trim","ans_type","indexOf","customStyle","editMathbox","i","showItems","steps","latex_str","latex_arr","latex_arr_check","undefined","push","map","item","index","cdata","vars","match","element","toString","replaceVariables","_viewonly","setToggle","answerKey","answerType","forEach","data","originalKey","latexKey","editMath","innerKey","icon","type","regex","RegExp","quote","parseXmlAuthoring","goNext","id","checked","smxml","_gonext","updateXML","fixedAnswer","_fixed","handleChangeCheckbox","fillid","e","name","target","ref","val","seq","step","handleDisable","console","log","handleRadio","event","_attempt","deleteEvent","delete_event","splice","alert","handleSave","disabled","viewonly","mode","attempt","tags","tag","reverseHtmlSpecialChars","matching","replaceSpaces","arr","originalkey","initEditor","listen","_this","getAttribute","tinyMCE","PluginManager","add","editor","url","addMenuItem","text","[object Object]","codetype","context","prependToContext","tinymce","load","themeUrl","init","selector","inline","theme","skin","min_width","resize","menubar","toolbar","elementpath","statusbar","force_br_newlines","remove_trailing_brs","forced_root_block","extended_valid_elements","valid_elements","fixed_toolbar_container","custom_elements","plugins","content_css","contextmenu","paste_as_text","handleClose","onMount","XMLToJSON","click","setTimeout","selectAll","curr","beforeUpdate","obj","_seq","timer","clearTimeout","targetVal","validate","activeEditor","insertContent","setAttribute","parseInt","content_icon","uxml"],"mappings":"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"}