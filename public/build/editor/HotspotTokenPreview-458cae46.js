
(function(l, r) { if (l.getElementById('livereloadscript')) return; r = l.createElement('script'); r.async = 1; r.src = '//' + (window.location.host || 'localhost').split(':')[0] + ':35729/livereload.js?snipver=1'; r.id = 'livereloadscript'; l.getElementsByTagName('head')[0].appendChild(r) })(window.document);
import { S as SvelteComponentDev, i as init, s as safe_not_equal, d as dispatch_dev, g as globals, e as element, p as append_dev, v as validate_slots, L as beforeUpdate, o as onMount, A as AH, X as XMLToJSON, Z as tick, _ as onUserAnsChange, w as writable, y as language, z as empty, n as insert_dev, r as group_outros, a as transition_out, u as check_outros, t as transition_in, x as detach_dev, C as validate_each_argument, K as destroy_each, f as space, c as create_component, j as attr_dev, l as set_style, k as add_location, m as mount_component, b as destroy_component, B as noop, h as text, F as set_data_dev, $ as null_to_empty, q as listen_dev } from './main-0211720b.js';
import { I as ItemHelper } from './ItemHelper-179e801c.js';

/* clsSMHotspot/HotspotTokenPreview.svelte generated by Svelte v3.29.0 */

const { console: console_1 } = globals;
const file = "clsSMHotspot/HotspotTokenPreview.svelte";

function add_css() {
	var style = element("style");
	style.id = "svelte-4djjpi-style";
	style.textContent = ".token.svelte-4djjpi.svelte-4djjpi:hover{border:1px solid #000!important}.bla .token:hover{border:1px solid #fff!important}.token_selected.svelte-4djjpi.svelte-4djjpi{background-color:#64bb63;color:#fff}.bla .token_highlight_heading{color:#000!important}.hotspot-token-preview.svelte-4djjpi br.svelte-4djjpi{clear:both}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSG90c3BvdFRva2VuUHJldmlldy5zdmVsdGUiLCJzb3VyY2VzIjpbIkhvdHNwb3RUb2tlblByZXZpZXcuc3ZlbHRlIl0sInNvdXJjZXNDb250ZW50IjpbIjxzY3JpcHQ+XG4gICAgaW1wb3J0IHsgYmVmb3JlVXBkYXRlLCBvbk1vdW50LCB0aWNrIH0gZnJvbSBcInN2ZWx0ZVwiO1xuICAgIGltcG9ydCB7IHdyaXRhYmxlIH0gZnJvbSBcInN2ZWx0ZS9zdG9yZVwiO1xuICAgIGltcG9ydCBJdGVtSGVscGVyIGZyb20gXCIuLi9oZWxwZXIvSXRlbUhlbHBlci5zdmVsdGVcIjtcbiAgICBpbXBvcnQgeyBBSCwgb25Vc2VyQW5zQ2hhbmdlLCBYTUxUb0pTT04gfSBmcm9tIFwiLi4vaGVscGVyL0hlbHBlckFJLnN2ZWx0ZVwiO1xuICAgIGltcG9ydCBsIGZyb20gJy4uL3NyYy9saWJzL2VkaXRvckxpYi9sYW5ndWFnZSc7XG4gICAgZXhwb3J0IGxldCB4bWw7XG4gICAgZXhwb3J0IGxldCBlZGl0b3JTdGF0ZTtcbiAgICBleHBvcnQgbGV0IGlzUmV2aWV3O1xuICAgIGV4cG9ydCBsZXQgc2hvd0FucztcbiAgICBleHBvcnQgbGV0IHV4bWw7XG4gICAgbGV0IHN0YXRlID0ge307XG4gICAgbGV0IGhkZCA9IHdyaXRhYmxlKHtcbiAgICAgICAgICAgIHhtbDogXCJcIixcbiAgICAgICAgICAgIGl0ZW1UeXBlOiBcIlwiLFxuICAgICAgICAgICAgY2RhdGE6IFwiXCIsXG4gICAgICAgICAgICBjb3JyZWN0QW5zOiBcIlwiLFxuICAgICAgICAgICAgdXNlckFuczogW10sXG4gICAgICAgICAgICBpdGVtTGF5b3V0OiBbXSxcbiAgICAgICAgICAgIHNtQ29udHJvbGxlcjogXCJoXCIsXG4gICAgICAgICAgICBwb2ludGVyRXZlbnRzOiBcImF1dG9cIixcbiAgICAgICAgICAgIGljb25WaXNpYmxlOiBcImhcIixcbiAgICAgICAgICAgIGlzUmV2aWV3OiBmYWxzZSxcbiAgICB9KTtcbiAgICBsZXQgb25FcnJvciA9IFwiXCI7XG4gICAgY29uc3QgdW5zdWJzID0gaGRkLnN1YnNjcmliZSgoaXRlbXMpPT4ge1xuICAgICAgICBzdGF0ZSA9IGl0ZW1zO1xuICAgIH0pXG5cbiAgICAvLyBjYWxscyB3aGVuZXZlciB0aGVyZSBpcyBjaGFuZ2UgaW4gcHJvcHMgb3Igc3RhdGVcbiAgICBiZWZvcmVVcGRhdGUoKCk9PiB7XG4gICAgICAgIC8vIGdvIGluIGJsb2NrIGlmIHRoZXJlIGlzIGNoYW5nZSBpbiB4bWxcbiAgICAgICAgaWYgKHhtbCAhPSBzdGF0ZS54bWwpIHtcbiAgICAgICAgICAgIC8vIHNldCB0aGUgc3RhdGUgb2YgeG1sIHRvIHRoZSBjdXJyZW50KGNoYW5nZWQpIHhtbFxuICAgICAgICAgICAgc3RhdGUueG1sID0geG1sO1xuICAgICAgICAgICAgLy8gcmVzZXQgdGhlIGNvcnJlY3QgYW5kIHVzZXIgYW5zXG4gICAgICAgICAgICByZXNldFZhbHVlKCk7XG4gICAgICAgICAgICAvLyBsb2FkIHRoZSBtb2R1bGVcbiAgICAgICAgICAgIGxvYWRNb2R1bGUoeG1sKTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIGdvIGluIGJsb2NrIGlmIHRoZXJlIGlzIGNoYW5nZSBpbiByZW1lZGlhdGlvbiBtb2RlXG4gICAgICAgIGlmIChpc1Jldmlldykge1xuICAgICAgICAgICAgLy8gY2hlY2sgdGhhIGFuc3dlclxuICAgICAgICAgICAgY2hlY2tBbnMoKTtcbiAgICAgICAgICAgIHNldFJldmlldygpOyBcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIC8vIGlmIHJldmlldyBtb2RlIGlzIG9mZlxuICAgICAgICAgICAgaWYgKGVkaXRvclN0YXRlKSB1bnNldFJldmlldygpO1xuICAgICAgICB9XG4gICAgfSlcblxuICAgIC8vIHJ1biBqdXN0IGFmdGVyIHJlbmRlcmluZ1xuICAgIG9uTW91bnQoKCk9PiB7XG5cbiAgICAgICAgLy8gc2VsZWN0IHRva2VuIHByZXNzIHRoZSBFbnRlciBLZXkgQURBXG4gICAgICAgIEFILmxpc3RlbignYm9keScsICdrZXlkb3duJywgJy50b2tlbicsIChfdGhpcywgZSk9PiB7IFxuICAgICAgICAgICAgaWYgKGUud2hpY2ggPT09IDEzKSB7XG4gICAgICAgICAgICAgICAgX3RoaXMuY2xpY2soKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG5cbiAgICAgICAgaWYgKHdpbmRvdy5pbk5hdGl2ZSkge1xuICAgICAgICAgICAgd2luZG93LmdldEhlaWdodCAmJiB3aW5kb3cuZ2V0SGVpZ2h0KCk7XG4gICAgICAgIH1cbiAgICAgICAgLy8gLy9Ub2dnbGUgQnV0dG9uIENvbG9yXG4gICAgICAgIC8vIEFILmJpbmQoJyNzbV9jb250cm9sbGVyIGJ1dHRvbicpLmNsaWNrKGZ1bmN0aW9uKCkge1xuICAgICAgICAvLyAgICAgJCgnI3NtX2NvbnRyb2xsZXIgYnV0dG9uJykucmVtb3ZlQ2xhc3MoXCJhY3RpdmUgYnRuLXByaW1hcnkgdGV4dC13aGl0ZSBiZy1wcmltYXJ5XCIpO1xuICAgICAgICAvLyAgICAgJCh0aGlzKS5hZGRDbGFzcygnYWN0aXZlIGJ0bi1wcmltYXJ5IHRleHQtd2hpdGUgYmctcHJpbWFyeScpO1xuICAgICAgICAvLyB9KTtcblxuICAgICAgICAvLyBCaW5kaW5nIHNldC1yZXZpZXcgYW5kIHVuc2V0LXJldmlldyB3aXRoIHRoZSBjbGljayBldmVudFxuICAgICAgICAvL0ZvciBtb2RlT24gZnVuY3Rpb25zIGluIHByZXBraXRcbiAgICAgICAgLy8gJChcIiNzZXQtcmV2aWV3XCIpLm9uKCdjbGljaycsIGZ1bmN0aW9uKCkge1xuICAgICAgICAvLyAgICAgc2V0UmV2aWV3KCk7XG4gICAgICAgIC8vIH0pO1xuICAgICAgICBcbiAgICAgICAgLy8gJChcIiN1bnNldC1yZXZpZXdcIikub24oJ2NsaWNrJywgZnVuY3Rpb24oKSB7XG4gICAgICAgIC8vICAgICB1bnNldFJldmlldygpO1xuICAgICAgICAvLyB9KTtcbiAgICAgICAgLy8gYmluZGluZyB0b2tlbiB3aXRoIGVudGVyIGtleSBpbiBjYXNlIG9mIElFXG4gICAgICAgIC8vIGlmIChpc0lFKSB7XG4gICAgICAgIC8vICAgICBBSC5saXN0ZW4oZG9jdW1lbnQsIFwia2V5dXBcIiwgXCIuaG90c3BvdC10b2tlbi1wcmV2aWV3IC50b2tlblwiLCAoX3RoaXMsIGV2ZW50KT0+IHtcbiAgICAgICAgLy8gICAgICAgICBpZiAoZXZlbnQud2hpY2ggPT0gMTMpIHtcbiAgICAgICAgLy8gICAgICAgICAgICAgX3RoaXMuY2xpY2soKTtcbiAgICAgICAgLy8gICAgICAgICB9XG4gICAgICAgIC8vICAgICB9KTtcbiAgICAgICAgLy8gfVxuICAgIH0pO1xuXG4gICAgLy8gd2hlbiByZXZpZXcgbW9kZSBpcyBvblxuICAgIGZ1bmN0aW9uIHNldFJldmlldygpIHtcbiAgICAgICAgc3RhdGUuaXNSZXZpZXcgPSB0cnVlO1xuICAgICAgICBzdGF0ZS5zbUNvbnRyb2xsZXIgPSBcIlwiO1xuICAgICAgICBzdGF0ZS5wb2ludGVyRXZlbnRzID0gXCJub25lXCI7XG4gICAgICAgIHNob3dBbnN3ZXIoXCJ5YW5zXCIsIFwic2hvd0ljb25cIik7XG4gICAgICAgIC8vJCgnI3NtX2NvbnRyb2xsZXIgLnlvdXItYW5zJykuYWRkQ2xhc3MoXCJidG4tbGlnaHQgYWN0aXZlXCIpOyBcbiAgICAgICAgQUguc2VsZWN0KFwiLnRva2VuSGVhZGVyXCIsICdhdHRyJywge3RhYkluZGV4OiBcIjBcIn0pO1xuICAgIH1cblxuICAgIC8vIHdoZW4gcmV2aWV3IG1vZGUgaXMgb2ZmXG4gICAgZnVuY3Rpb24gdW5zZXRSZXZpZXcoKSB7XG4gICAgICAgIHN0YXRlLmlzUmV2aWV3ID0gZmFsc2U7XG4gICAgICAgIHN0YXRlLnNtQ29udHJvbGxlciA9IFwiaFwiO1xuICAgICAgICBzdGF0ZS5wb2ludGVyRXZlbnRzID0gXCJhdXRvXCI7XG4gICAgICAgIHNob3dBbnN3ZXIoXCJ5YW5zXCIsIFwiaGlkZUljb25cIik7XG4gICAgICAgIEFILnNlbGVjdChcIi50b2tlbkhlYWRlclwiLCAncmVtb3ZlQXR0cicsICd0YWJpbmRleCcpO1xuICAgICAgICAvLyQoJyNzbV9jb250cm9sbGVyIGJ1dHRvbicpLnJlbW92ZUNsYXNzKFwiYWN0aXZlIGJ0bi1wcmltYXJ5IHRleHQtd2hpdGUgYmctcHJpbWFyeVwiKTtcbiAgICB9XG5cbiAgICAvLyBmb3IgcmVzZXR0aW5nIHRoZSB2YWx1ZVxuICAgIGZ1bmN0aW9uIHJlc2V0VmFsdWUoKSB7XG4gICAgICAgIHN0YXRlLmNvcnJlY3RBbnMgPSBbXTtcbiAgICAgICAgc3RhdGUudXNlckFucyA9IFtdO1xuICAgIH1cblxuICAgIC8vIGxvYWQgdGhlIG1vZHVsZVxuICAgIGZ1bmN0aW9uIGxvYWRNb2R1bGUobG9hZFhtbCkge1xuICAgICAgICAvLyBIZXJlIHhtbCBpcyBjb252ZXJ0ZWQgaW50byB0aGUganNvbiBhbmQgcGFzcyBpbnRvIHRoZSBwYXJzZVhNTEF1dGhvcmluZyBmb3IgeG1sIHBhcnNpbmdcbiAgICAgICAgbG9hZFhtbCA9IFhNTFRvSlNPTihsb2FkWG1sKTtcbiAgICAgICAgcGFyc2VYTUxQcmV2aWV3KGxvYWRYbWwpO1xuICAgIH1cblxuICAgIC8vIHBhcnNlIGZ1bmN0aW9uIGZvciB0aGUgcHJldmlld1xuICAgIGFzeW5jIGZ1bmN0aW9uIHBhcnNlWE1MUHJldmlldyhNWVhNTCkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgLy8gc3BsaXQgdGhlIGNvcnJlY3RBbnMgYnkgLCAmIHN0b3JlZCBpdCBpbiB0aGUgY3VycmVudCBzdGF0ZSBcbiAgICAgICAgICAgIHN0YXRlLmNvcnJlY3RBbnMgPSBNWVhNTC5zbXhtbC5kaXYuX2NvcnJlY3RBbnMuc3BsaXQoXCIsXCIpO1xuICAgICAgICAgICAgLy8gc2V0IHRoZSB0eXBlIG9mIG1vZHVsZSB3ZXRoZXIgaXQgaXMgdyxwIG9yIHNcbiAgICAgICAgICAgIHN0YXRlLml0ZW1UeXBlID0gTVlYTUwuc214bWwuZGl2Ll90eXBlO1xuICAgICAgICAgICAgLy8gc2V0IHRoZSBzdGF0ZSBvZiBjZGF0YSBvbiB0aGUgYmFzaXMgb2YgeG1sIGFuZCBhZnRlciB0aGF0IHBhcnNlIHRoZSB4bWwgYWNjb3JkaW5nIHRvIGl0cyB0eXBlXG4gICAgICAgICAgICBzdGF0ZS5jZGF0YSA9IE1ZWE1MLnNteG1sLmRpdi5fX2NkYXRhO1xuICAgICAgICAgICAgYXdhaXQgdGljaygpO1xuICAgICAgICAgICAgc3dpdGNoKE1ZWE1MLnNteG1sLmRpdi5fdHlwZSkge1xuICAgICAgICAgICAgICAgIGNhc2UgXCJ3XCIgOlxuICAgICAgICAgICAgICAgICAgICAvLyBpZiB0aGUgdHlwZSBpcyB3b3JkXG4gICAgICAgICAgICAgICAgICAgIC8vIGZ1bmN0aW9uIGZvciBwYXJzZSB3b3JkXG4gICAgICAgICAgICAgICAgICAgIHBhcnNlV29yZChzdGF0ZS5jZGF0YSk7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgXCJzXCIgOlxuICAgICAgICAgICAgICAgICAgICAvLyBpZiB0aGUgdHlwZSBpcyBzZW50ZW5jZVxuICAgICAgICAgICAgICAgICAgICAvLyBmdW5jdGlvbiBmb3IgcGFyc2Ugc2VudGVuY2VcbiAgICAgICAgICAgICAgICAgICAgcGFyc2VTZW50YW5jZShzdGF0ZS5jZGF0YSk7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgXCJwXCIgOlxuICAgICAgICAgICAgICAgICAgICAvLyBpZiB0aGUgdHlwZSBpcyBwYXJhZ3JhcGhcbiAgICAgICAgICAgICAgICAgICAgLy8gZnVuY3Rpb24gZm9yIHBhcnNlIHBhcmFncmFwaFxuICAgICAgICAgICAgICAgICAgICBwYXJzZVBhcmFncmFwaChzdGF0ZS5jZGF0YSk7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGRlZmF1bHQgOlxuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLndhcm4oXCJObyB0eXBlIGZvdW5kIHRvIHBhcnNlXCIpO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICh1eG1sKSB7XG4gICAgICAgICAgICAgICAvLyBwYXJzZSB0aGUgdXNlciBhbnNcbiAgICAgICAgICAgICAgIHBhcnNlVXNlckFucyh1eG1sKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgIG9uRXJyb3IgPSBlcnJvcjtcbiAgICAgICAgICAgIGNvbnNvbGUud2Fybih7J2Vycm9yJzplcnJvci5tZXNzYWdlLCdmdW5jdGlvbiBuYW1lJzoncGFyc2VYTUxQcmV2aWV3JywnRmlsZSBuYW1lJzonSG90c3BvdFRva2VuUHJldmlldy5qcyd9KTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8vIGluIGNhc2Ugb2Ygd29yZCBcbiAgICBmdW5jdGlvbiBwYXJzZVdvcmQoc3RyKSB7XG4gICAgICAgIC8vIHJlcGxhY2UgdGhlIG5ld2xpbmUgd2l0aCBcIiAjbmV3bGluZSMgXCJcbiAgICAgICAgc3RyID0gc3RyLnJlcGxhY2UoL1xcbi9nLCBcIiAjbmV3bGluZSMgXCIpO1xuICAgICAgICAvL1NwbGl0IHRoZSBzdHJpbmcgd2l0aCBzcGFjZSBhbmQgcmVtb3ZlIGFycmF5IHdoaWNoIGNvbnRhaW4gbnVsbCB2YWx1ZVxuICAgICAgICBsZXQgd29yZCA9IHN0ci5zcGxpdChcIiBcIikubWFwKCAoaXRlbSk9PiB7IHJldHVybiBpdGVtLnRyaW0oKSB9ICkuZmlsdGVyKCAoYXJyKT0+IHsgcmV0dXJuIGFyciAhPSBcIlwiIH0pO1xuICAgICAgICBsZXQgd29yZEFycmF5ID0gW107XG4gICAgICAgIGxldCB0ZW1wV29yZCA9IFtdO1xuICAgICAgICAvKiBzcGxpdCBwdW5jdHVhdGlvbiBtYXJrIGluIHdvcmQgYW5kIHN0b3JlIGluIHRoZSB0ZW1wV29yZCBhcnJheSAqL1xuICAgICAgICB3b3JkLm1hcCgoZGF0YSwgaSk9PiB7XG4gICAgICAgICAgICBsZXQgc3BlY2lhbF9zeW1ib2wgPSBkYXRhLm1hdGNoKC9bLixdL2cpO1xuICAgICAgICAgICAgaWYgKHNwZWNpYWxfc3ltYm9sKSB7XG4gICAgICAgICAgICAgICAgbGV0IHNwbGl0VGV4dCA9IGRhdGEuc3BsaXQoc3BlY2lhbF9zeW1ib2xbMF0pO1xuICAgICAgICAgICAgICAgIHRlbXBXb3JkLnB1c2goc3BsaXRUZXh0WzBdKTtcbiAgICAgICAgICAgICAgICB0ZW1wV29yZC5wdXNoKHNwZWNpYWxfc3ltYm9sWzBdKTtcbiAgICAgICAgICAgICAgICBpZiAoc3BsaXRUZXh0WzFdLnRyaW0oKSkge1xuICAgICAgICAgICAgICAgICAgICB0ZW1wV29yZC5wdXNoKHNwbGl0VGV4dFsxXSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICB0ZW1wV29yZC5wdXNoKGRhdGEpXG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICAvKmVuZCovXG4gICAgICAgIC8vIHN0b3JlIGlkLCB2YWx1ZSBhbmQgc2VsZWN0ZWQgaW4gd29yZEFycmF5XG4gICAgICAgIC8vIEhlcmUgaWQgaXMgdW5pcXVlIGlkIG9mIHRoYXQgZWxlbWVudCAsIHZhbHVlIHN0b3JlcyB0aGUgZWxlbWVudCB2YWx1ZSBhbmQgc2VsZWN0ZWQgc3RvcmVzIHdldGhlciBpdCBpcyBzZWxlY3RlZCBvciBub3RcbiAgICAgICAgdGVtcFdvcmQubWFwKChkYXRhLCBpKT0+IHtcbiAgICAgICAgICAgIHdvcmRBcnJheS5wdXNoKHtcbiAgICAgICAgICAgICAgICBpZDogXCJJRFwiK2ksXG4gICAgICAgICAgICAgICAgdmFsdWU6IGRhdGEsXG4gICAgICAgICAgICAgICAgc2VsZWN0ZWQ6IGZhbHNlLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgICAgIHN0YXRlLml0ZW1MYXlvdXQgPSB3b3JkQXJyYXk7XG4gICAgfVxuXG4gICAgLy8gaW4gY2FzZSBvZiBzZW50ZW5jZVxuICAgIGZ1bmN0aW9uIHBhcnNlU2VudGFuY2Uoc3RyKSB7XG4gICAgICAgIC8vU3BsaXQgdGhlIHN0cmluZyB3aXRoIGZ1bGxzdG9wIGFuZCByZW1vdmUgYXJyYXkgd2hpY2ggY29udGFpbiBudWxsIHZhbHVlXG4gICAgICAgIGxldCBzZW50YW5jZSA9IHN0ci5zcGxpdChcIi5cIikubWFwKCAoaXRlbSk9PiB7IHJldHVybiBpdGVtLnRyaW0oKSB9ICkuZmlsdGVyKCAoYXJyKT0+IHsgcmV0dXJuIGFyciAhPSBcIlwiIH0pO1xuICAgICAgICBsZXQgc2VudGFuY2VBcnJheSA9IFtdO1xuICAgICAgICAvLyBzdG9yZSBpZCwgdmFsdWUgYW5kIHNlbGVjdGVkIGluIHNlbnRhbmNlQXJyYXlcbiAgICAgICAgLy8gSGVyZSBpZCBpcyB1bmlxdWUgaWQgb2YgdGhhdCBlbGVtZW50ICwgdmFsdWUgc3RvcmVzIHRoZSBlbGVtZW50IHZhbHVlIGFuZCBzZWxlY3RlZCBzdG9yZXMgd2V0aGVyIGl0IGlzIHNlbGVjdGVkIG9yIG5vdFxuICAgICAgICBzZW50YW5jZS5tYXAoKGRhdGEsIGkpPT4ge1xuICAgICAgICAgICAgc2VudGFuY2VBcnJheS5wdXNoKHtcbiAgICAgICAgICAgICAgICBpZDogXCJJRFwiK2ksXG4gICAgICAgICAgICAgICAgdmFsdWU6IGRhdGErXCIuXCIsXG4gICAgICAgICAgICAgICAgc2VsZWN0ZWQ6IGZhbHNlXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgICAgIHN0YXRlLml0ZW1MYXlvdXQgPSBzZW50YW5jZUFycmF5O1xuICAgIH1cblxuICAgIC8vIGluIGNhc2Ugb2YgcGFyYWdyYXBoXG4gICAgZnVuY3Rpb24gcGFyc2VQYXJhZ3JhcGgoc3RyKSB7XG4gICAgICAgIC8vU3BsaXQgdGhlIHN0cmluZyB3aXRoIHBhcmFncmFwaCBhbmQgcmVtb3ZlIGFycmF5IHdoaWNoIGNvbnRhaW4gbnVsbCB2YWx1ZVxuICAgICAgICBsZXQgcGFyYWdyYXBoID0gc3RyLnNwbGl0KFwiXFxuXCIpLm1hcCggKGl0ZW0pPT4geyByZXR1cm4gaXRlbS50cmltKCkgfSApLmZpbHRlciggKGFycik9PiB7IHJldHVybiBhcnIgIT0gXCJcIiB9KTtcbiAgICAgICAgbGV0IHBhcmFncmFwaEFycmF5ID0gW107XG4gICAgICAgIC8vIHN0b3JlIGlkLCB2YWx1ZSBhbmQgc2VsZWN0ZWQgaW4gcGFyYWdyYXBoQXJyYXlcbiAgICAgICAgLy8gSGVyZSBpZCBpcyB1bmlxdWUgaWQgb2YgdGhhdCBlbGVtZW50ICwgdmFsdWUgc3RvcmVzIHRoZSBlbGVtZW50IHZhbHVlIGFuZCBzZWxlY3RlZCBzdG9yZXMgd2V0aGVyIGl0IGlzIHNlbGVjdGVkIG9yIG5vdFxuICAgICAgICBwYXJhZ3JhcGgubWFwKChkYXRhLCBpKT0+IHtcbiAgICAgICAgICAgIHBhcmFncmFwaEFycmF5LnB1c2goe1xuICAgICAgICAgICAgICAgIGlkOiBcIklEXCIraSxcbiAgICAgICAgICAgICAgICB2YWx1ZTogZGF0YSxcbiAgICAgICAgICAgICAgICBzZWxlY3RlZDogZmFsc2VcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICAgICAgc3RhdGUuaXRlbUxheW91dCA9IHBhcmFncmFwaEFycmF5O1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGdldENvcnJlY3QoaWQpIHtcbiAgICAgICAgLy9SZXR1cm4gdHJ1ZSBpZiB0aGlzIGlkIGlzIGNvcnJlY3QgYW5zd2VyXG4gICAgICAgIHJldHVybiAoQUguZmluZEluQXJyYXkoaWQsIHN0YXRlLmNvcnJlY3RBbnMpID8gdHJ1ZTogZmFsc2UpO1xuICAgIH1cblxuICAgIC8vIGZvciBjaGVja2luZyB0aGUgYW5zd2VyXG4gICAgZnVuY3Rpb24gY2hlY2tBbnMoKSB7XG4gICAgICAgIC8vIHVzZWQgZm9yIHN3aXRjaCBvbiBuZXh0IHF1ZXN0aW9uIGluIHByZXBlbmdpbmUgaWYgY3VycmVudCBxdWVzdGlvbiBpcyBhdHRlbXB0ZWRcblx0XHRJU1NQRUNJQUxNT0RVTEVVU0VSWE1MQ0hBTkdFID0gMTtcbiAgICAgICAgbGV0IHJlc3VsdExlbmd0aCA9IDA7XG4gICAgICAgIGNvbnN0IGNvcnJlY3RMZW5ndGggPSBzdGF0ZS5jb3JyZWN0QW5zLmxlbmd0aDtcbiAgICAgICAgLy9DaGVjayBpZiBjb3JyZWN0IGFuc3dlciBpcyBlcXVhbCB0byB1c2VyIGFuc3dlclxuICAgICAgICBzdGF0ZS5jb3JyZWN0QW5zLm1hcCgoZGF0YSwgaSk9PiB7XG4gICAgICAgICAgICBzdGF0ZS51c2VyQW5zLm1hcCgoZGF0YTIsIGopPT4ge1xuICAgICAgICAgICAgICAgIGlmIChkYXRhID09IGRhdGEyKSB7XG4gICAgICAgICAgICAgICAgICAgIHJlc3VsdExlbmd0aCA9IHJlc3VsdExlbmd0aCArIDE7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgICAgICBsZXQgYW5zID0gKGNvcnJlY3RMZW5ndGggPT0gcmVzdWx0TGVuZ3RoICYmIHJlc3VsdExlbmd0aCA9PSBzdGF0ZS51c2VyQW5zLmxlbmd0aCkgPyB0cnVlIDogZmFsc2U7XG4gICAgICAgIG9uVXNlckFuc0NoYW5nZSh7YW5zOiBhbnMsIHVYbWw6IFwiXCIsIGNvcnJlY3RQb2ludHM6IHN0YXRlLmNvcnJlY3RBbnMubGVuZ3RoLCBhbnNQb2ludDogcmVzdWx0TGVuZ3RofSk7XG5cbiAgICAgICAgc2hvd0FucyAmJiBzaG93QW5zKGFucyA/IFwiQ29ycmVjdFwiIDogXCJJbmNvcnJlY3RcIik7XG4gICAgfVxuXG4gICAgLy8gZm9yIHN0dGluZyB0aGUgdXNlciBhbnN3ZXIgZm9yIHNlbGVjdGVkIG9uZVxuICAgIGZ1bmN0aW9uIHNldFNlbGVjdGVkKHBvcykge1xuICAgICAgICBzdGF0ZS5pdGVtTGF5b3V0W3Bvc10uc2VsZWN0ZWQgPSAhc3RhdGUuaXRlbUxheW91dFtwb3NdLnNlbGVjdGVkO1xuICAgICAgICBzZXRVc2VyQW5zKHBvcywgc3RhdGUuaXRlbUxheW91dFtwb3NdLnNlbGVjdGVkKTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBzZXRVc2VyQW5zKGlkLHNlbGVjdGVkKSB7XG4gICAgICAgIGxldCB0ZW1wVXNlckFucyA9IHN0YXRlLnVzZXJBbnM7XG4gICAgICAgIC8vUHVzaCB0aGUgaW5kZXggaW4gdXNlciBhbnN3ZXIgYXJyYXkgaWYgY2xpY2tlZCBmaXJzdCB0aW1lXG4gICAgICAgIC8vYW5kIGRlbGV0ZSB0aGUgaW5kZXggZnJvbSB1c2VyIGFuc3dlciBpZiBpdCBpcyBhbHJlYWR5IHNlbGVjdGVkXG4gICAgICAgIGlmIChzZWxlY3RlZCA9PSB0cnVlKSB7XG4gICAgICAgICAgICAvLyBwdXNoIGluIHRoZSB1c2VyQW5zIGlmIGl0IGlzIHNlbGVjdGVkXG4gICAgICAgICAgICB0ZW1wVXNlckFucy5wdXNoKFwiSURcIitpZCk7XG4gICAgICAgICAgICBzdGF0ZS51c2VyQW5zID0gdGVtcFVzZXJBbnM7XG4gICAgICAgIH0gZWxzZSBpZiAoc2VsZWN0ZWQgPT0gZmFsc2UpIHtcbiAgICAgICAgICAgIGxldCBkZWxldGVWYWx1ZSA9IHRlbXBVc2VyQW5zLmluZGV4T2YoXCJJRFwiK2lkKTtcbiAgICAgICAgICAgIGlmIChkZWxldGVWYWx1ZSA+IC0xKSB7XG4gICAgICAgICAgICAgICAgLy8gZGVsZXRlIGZyb20gdGhlIHVzZXIgYW5zIGlmIGl0IGlzIGRlc2VsZWN0ZWRcbiAgICAgICAgICAgICAgICB0ZW1wVXNlckFucy5zcGxpY2UoZGVsZXRlVmFsdWUsIDEpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgc3RhdGUudXNlckFucyA9IHRlbXBVc2VyQW5zO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gZ2V0dGluZyBoZWlnaHQgaW4gbmF0aXZlXG4gICAgICAgIGlmICh3aW5kb3cuaW5OYXRpdmUpIHtcbiAgICAgICAgICAgIHdpbmRvdy5nZXRIZWlnaHQgJiYgd2luZG93LmdldEhlaWdodCgpO1xuICAgICAgICB9XG4gICAgICAgIC8vIHVwZGF0aW5nIHRoZSB1YVhtbFxuICAgICAgICBBSC5zZWxlY3QoXCIjc3BlY2lhbF9tb2R1bGVfdXNlcl94bWxcIiwgJ3ZhbHVlJywgXCI8c21hbnM+PGRpdiB1c2VyQW5zPSdcIitzdGF0ZS51c2VyQW5zLmpvaW4oKStcIic+PC9kaXY+PC9zbWFucz5cIilcbiAgICAgICAgLy8gY2hlY2sgZm9yIGNvcnJlY3QgYW5zd2VyXG4gICAgICAgIGNoZWNrQW5zKCk7XG4gICAgfVxuXG4gICAgLy8gZm9yIHNob3dpbmcgYW5zd2VyXG4gICAgZnVuY3Rpb24gc2hvd0Fuc3dlcih2YWwsaWNvblN0YXRlKSB7XG4gICAgICAgIC8vc2hvdyBjb3JyZWN0IGluY29ycmVjdCBpY29uIHdpdGggcmVzcGVjdCB0byBpY29uU3RhdGVcbiAgICAgICAgc3RhdGUuaWNvblZpc2libGUgPSAoaWNvblN0YXRlID09IFwic2hvd0ljb25cIikgPyBcIlwiIDogXCJoXCI7XG4gICAgICAgIC8vY2hhbmdlIHRva2VuIGhpZ2hsaWdodCB3aXRoIHJlc3BlY3QgdG8gdmFsXG4gICAgICAgIC8vZWl0aGVyIHRvIHNob3cgY29ycmVjdCBhbnN3ZXIgb3IgdXNlciBhbnN3ZXJcbiAgICAgICAgbGV0IGFucyA9IFtdO1xuICAgICAgICBpZiAodmFsID09IFwiY2Fuc1wiKSB7XG4gICAgICAgICAgICAvLyBpZiBjb3JyZWN0IGFucyB0YWJcbiAgICAgICAgICAgIGFucyA9IHN0YXRlLmNvcnJlY3RBbnM7XG4gICAgICAgIH0gZWxzZSBpZiAodmFsID09IFwieWFuc1wiKSB7XG4gICAgICAgICAgICAvLyBpZiB1c2VyIGFuc3dlciB0YWJcbiAgICAgICAgICAgIGFucyA9IHN0YXRlLnVzZXJBbnM7XG4gICAgICAgIH1cbiAgICAgICAgc3RhdGUuaXRlbUxheW91dC5tYXAoKGRhdGEsIGopPT4ge1xuICAgICAgICAgICAgZGF0YS5zZWxlY3RlZCA9ICBBSC5maW5kSW5BcnJheShkYXRhLmlkLCBhbnMpID8gdHJ1ZSA6IGZhbHNlO1xuICAgICAgICAgICAgLy9yZXR1cm4gZGF0YTtcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgLy8gZm9yIHBhcnNpbmcgdGhlIHVzZXIgYW5zIGZ1bmN0aW9uXG4gICAgZnVuY3Rpb24gcGFyc2VVc2VyQW5zKHVhbnMpIHtcbiAgICAgICAgLy8gY29udmVydGluZyB0aGUgeG1sIGludG8gdGhlIGpzb24gYW5kIHN0b3JlZCBpbiB1c2VyQW5zd2VyXG4gICAgICAgIGxldCB1c2VyQW5zd2VyID0gWE1MVG9KU09OKHVhbnMpO1xuICAgICAgICAvLyBjaGVraW5nIGZvciB0aGUgMiBlbGVtZW50cyBzbWFucyxkaXYsIGFuZCBvbmUgYXR0cmlidXRlIG9mIGRpdiBpLmUsIHVzZXJBbnNcbiAgICAgICAgaWYgKHVzZXJBbnN3ZXIuc21hbnMgJiYgdXNlckFuc3dlci5zbWFucy5kaXYgJiYgdXNlckFuc3dlci5zbWFucy5kaXYuX3VzZXJBbnMpIHtcbiAgICAgICAgICAgIC8vIHNwbGl0dGluZyB0aGUgdXNlckFucyB3aXRoICxcbiAgICAgICAgICAgIHN0YXRlLnVzZXJBbnMgPSB1c2VyQW5zd2VyLnNtYW5zLmRpdi5fdXNlckFucy5zcGxpdChcIixcIik7XG4gICAgICAgICAgICAvLyBnZXQgdGhlIHNlbGVjdGlvbiBvbiB0aGUgYmFzaXMgb2YgdGhlIHVzZXIgYW5zd2VyXG4gICAgICAgICAgICBzdGF0ZS5pdGVtTGF5b3V0Lm1hcCgoZGF0YSwgaik9PiB7XG4gICAgICAgICAgICAgICAgZGF0YS5zZWxlY3RlZCA9ICBBSC5maW5kSW5BcnJheShkYXRhLmlkLCBzdGF0ZS51c2VyQW5zKSA/IHRydWUgOmZhbHNlO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBmdW5jdGlvbiBoYW5kbGVSZXZpZXdDbGljayhtb2RlLCBldmVudCkge1xuICAgICAgICBpZiAobW9kZSA9PSAnYycpIHtcbiAgICAgICAgICAgIHNob3dBbnN3ZXIoXCJjYW5zXCIsIFwiaGlkZUljb25cIik7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBzaG93QW5zd2VyKFwieWFuc1wiLCBcInNob3dJY29uXCIpO1xuICAgICAgICB9XG4gICAgfVxuPC9zY3JpcHQ+XG4gICBcbnsjaWYgb25FcnJvciAhPSBcIlwifVxuICAgIDxkaXYgY2xhc3M9XCJhbGVydCBhbGVydC1kYW5nZXIgZm9udC13ZWlnaHQtYm9sZFwiPlxuICAgICAgICA8c3Bhbj5Pb3BzIFNvbWV0aGluZyB3ZW50IHdyb25nIHBsZWFzZSBjaGVjayB5b3VyIFBhcnNlWE1MIEZ1bmN0aW9uIDwvc3Bhbj5cbiAgICA8L2Rpdj5cbns6ZWxzZX1cbiAgICA8ZGl2IGNsYXNzPVwiaG90c3BvdC10b2tlbi1wcmV2aWV3XCIgdGFiaW5kZXg9XCIwXCI+XG4gICAgICAgIDxJdGVtSGVscGVyIFxuICAgICAgICAgICAgb246c2V0UmV2aWV3PXtzZXRSZXZpZXd9XG4gICAgICAgICAgICBvbjp1bnNldFJldmlldz17dW5zZXRSZXZpZXd9XG4gICAgICAgICAgICBoYW5kbGVSZXZpZXdDbGljaz17aGFuZGxlUmV2aWV3Q2xpY2t9XG4gICAgICAgICAgICByZXZpZXdNb2RlPXtzdGF0ZS5pc1Jldmlld31cbiAgICAgICAgLz5cbiAgICAgICAgPGNlbnRlcj5cbiAgICAgICAgPGRpdiBcbiAgICAgICAgICAgIGNsYXNzPVwidG9rZW5faGlnaGxpZ2h0X2hlYWRpbmcgZm9udDE3IHAtMiB0ZXh0LWxlZnRcIlxuICAgICAgICAgICAgc3R5bGU9XCJcbiAgICAgICAgICAgICAgICBtYXgtd2lkdGg6IDYwMHB4O1xuICAgICAgICAgICAgICAgIGJvcmRlci10b3A6IDJweCBzb2xpZCAjOTZiYmY2O1xuICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNkOWU3ZmQ7XG4gICAgICAgICAgICBcIlxuICAgICAgICA+XG4gICAgICAgICAgICB7bC50b2tlbl9oaWdobGlnaHR9XG4gICAgICAgIDwvZGl2PlxuICAgICAgICA8ZGl2XG4gICAgICAgICAgICBjbGFzcz1cInAtMiB3b3JkX2JyZWFrXCJcbiAgICAgICAgICAgIHN0eWxlPVwiXG4gICAgICAgICAgICAgICAgbWF4LXdpZHRoOiA2MDBweDtcbiAgICAgICAgICAgICAgICBib3JkZXI6IDJweCBzb2xpZCAjZDllN2ZkO1xuICAgICAgICAgICAgICAgIGRpc3BsYXk6IGZsb3ctcm9vdDtcbiAgICAgICAgICAgIFwiXG4gICAgICAgID5cbiAgICAgICAgICAgIHsjaWYgc3RhdGUuaXRlbUxheW91dH1cbiAgICAgICAgICAgICAgICB7I2VhY2ggc3RhdGUuaXRlbUxheW91dCBhcyBkYXRhLCBpIH1cbiAgICAgICAgICAgICAgICAgICAgeyNpZiBkYXRhLnZhbHVlLmluZGV4T2YoJyMjcHQnKSA+IC0xIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIHtkYXRhLnZhbHVlID0gZGF0YS52YWx1ZS5yZXBsYWNlKC8jI3B0L2csICcuJyl9XG4gICAgICAgICAgICAgICAgICAgIHsvaWZ9XG4gICAgICAgICAgICAgICAgICAgIHsjaWYgZGF0YS52YWx1ZS5pbmRleE9mKCcjY20nKSA+IC0xIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIHtkYXRhLnZhbHVlID0gZGF0YS52YWx1ZS5yZXBsYWNlKC8jY20vZywgJywnKX1cbiAgICAgICAgICAgICAgICAgICAgey9pZn1cbiAgICAgICAgICAgICAgICAgICAgeyNpZiBkYXRhLnZhbHVlID09IFwiLFwiIHx8IGRhdGEudmFsdWUgPT0gXCIuXCJ9XG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZmxvYXQtbGVmdCBwb3NpdGlvbi1yZWxhdGl2ZVwiIHN0eWxlPVwid2lkdGg6IDEuNXB4OyBoZWlnaHQ6IDFweFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPVwiZmxvYXQtbGVmdCBwb3NpdGlvbi1hYnNvbHV0ZSB0b3AyXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9XCJsZWZ0OiAtMS41cHhcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge2RhdGEudmFsdWV9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgIHs6ZWxzZSBpZiBkYXRhLnZhbHVlID09IFwiI25ld2xpbmUjXCJ9XG4gICAgICAgICAgICAgICAgICAgICAgICA8YnIvPlxuICAgICAgICAgICAgICAgICAgICB7OmVsc2V9XG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGtleT17aX0gY2xhc3M9XCJ0b2tlbkhlYWRlciBwb3NpdGlvbi1yZWxhdGl2ZSBmbG9hdC1sZWZ0XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1pZD17XCJJRFwiK2l9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEtY29ycmVjdD17Z2V0Q29ycmVjdChcIklEXCIraSl9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uOmNsaWNrPXtzZXRTZWxlY3RlZC5iaW5kKHRoaXMsIGkpfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhLXNlbGVjdGVkPXtkYXRhLnNlbGVjdGVkfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0YWJJbmRleD17KHN0YXRlLnBvaW50ZXJFdmVudHMgPT0gXCJhdXRvXCIpID8gXCIwXCIgOiBcIjFcIn1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9XCJwb2ludGVyIGZsb2F0LWxlZnQgdGV4dC1sZWZ0IGZvbnQxNCB0b2tlbiB7KGRhdGEuc2VsZWN0ZWQpID8gJ3Rva2VuX3NlbGVjdGVkJyA6ICcnfVwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPVwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtYXJnaW46IDJweDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVzZXItc2VsZWN0OiBub25lO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYm9yZGVyOiAxcHggc29saWQgdHJhbnNwYXJlbnQ7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiAxcHggM3B4IDFweCAzcHg7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiAzcHg7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwb2ludGVyLWV2ZW50czoge3N0YXRlLnBvaW50ZXJFdmVudHN9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7ZGF0YS52YWx1ZX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9e3N0YXRlLmljb25WaXNpYmxlfSBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9XCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoOiAxN3B4O1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAxN3B4O1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmlnaHQ6IC04cHg7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0b3A6IC05cHg7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDE1cHggMTJweCAxMnB4O1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9udC1zaXplOiAxOHB4O1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgei1pbmRleDogMTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IHsoc3RhdGUuaWNvblZpc2libGUgPT0gXCJcIiAmJiBkYXRhLnNlbGVjdGVkKSA/ICdibG9jaycgOiAnbm9uZSd9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPVwicG9zaXRpb24tcmVsYXRpdmUge2dldENvcnJlY3QoXCJJRFwiK2kpID8gJ2ljb21vb24tbmV3LTI0cHgtY2hlY2ttYXJrLWNpcmNsZS0xJzogJ2ljb21vb24tbmV3LTI0cHgtY2FuY2VsLWNpcmNsZS0xJ31cIiBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPVwiY29sb3I6IHtnZXRDb3JyZWN0KCdJRCcraSkgPyAnZ3JlZW4nIDogJ3JlZCd9OyBib3R0b206IDNweDsgbGVmdDogMDtcIiBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFyaWEtbGFiZWw9eyhnZXRDb3JyZWN0KFwiSURcIitpKSk/XCJtYXJrZWQgYXMgY29ycmVjdFwiOlwibWFya2VkIGFzIGluY29ycmVjdFwifVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA+PC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICB7L2lmfVxuICAgICAgICAgICAgICAgIHsvZWFjaH1cbiAgICAgICAgICAgIHsvaWZ9XG4gICAgICAgIDwvZGl2PlxuICAgICAgICA8L2NlbnRlcj5cbiAgICA8L2Rpdj5cbnsvaWZ9XG48c3R5bGU+XG4gICAgLnRva2VuOmhvdmVyIHtcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgIzAwMCFpbXBvcnRhbnQ7XG4gICAgfVxuXG4gICAgOmdsb2JhbCguYmxhIC50b2tlbjpob3Zlcil7XG4gICAgICAgIGJvcmRlcjogMXB4IHNvbGlkICNmZmYhaW1wb3J0YW50O1xuICAgIH1cblxuICAgIC50b2tlbl9zZWxlY3RlZCB7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICM2NGJiNjM7XG4gICAgICAgIGNvbG9yOiAjZmZmO1xuICAgIH1cblxuICAgIDpnbG9iYWwoLmJsYSAudG9rZW5faGlnaGxpZ2h0X2hlYWRpbmcpIHtcbiAgICAgICAgY29sb3I6ICMwMDAhaW1wb3J0YW50O1xuICAgIH1cblxuICAgIC5ob3RzcG90LXRva2VuLXByZXZpZXcgYnIge1xuICAgICAgICBjbGVhcjogYm90aDtcbiAgICB9XG48L3N0eWxlPiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFrYkksa0NBQU0sTUFBTSxBQUFDLENBQUMsQUFDVixNQUFNLENBQUUsR0FBRyxDQUFDLEtBQUssQ0FBQyxJQUFJLFVBQVUsQUFDcEMsQ0FBQyxBQUVPLGlCQUFpQixBQUFDLENBQUMsQUFDdkIsTUFBTSxDQUFFLEdBQUcsQ0FBQyxLQUFLLENBQUMsSUFBSSxVQUFVLEFBQ3BDLENBQUMsQUFFRCxlQUFlLDRCQUFDLENBQUMsQUFDYixnQkFBZ0IsQ0FBRSxPQUFPLENBQ3pCLEtBQUssQ0FBRSxJQUFJLEFBQ2YsQ0FBQyxBQUVPLDZCQUE2QixBQUFFLENBQUMsQUFDcEMsS0FBSyxDQUFFLElBQUksVUFBVSxBQUN6QixDQUFDLEFBRUQsb0NBQXNCLENBQUMsRUFBRSxjQUFDLENBQUMsQUFDdkIsS0FBSyxDQUFFLElBQUksQUFDZixDQUFDIn0= */";
	append_dev(document.head, style);
}

function get_each_context(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[24] = list[i];
	child_ctx[26] = i;
	return child_ctx;
}

// (339:0) {:else}
function create_else_block(ctx) {
	let div2;
	let itemhelper;
	let t0;
	let center;
	let div0;
	let t2;
	let div1;
	let current;

	itemhelper = new ItemHelper({
			props: {
				handleReviewClick: /*handleReviewClick*/ ctx[6],
				reviewMode: /*state*/ ctx[0].isReview
			},
			$$inline: true
		});

	itemhelper.$on("setReview", /*setReview*/ ctx[2]);
	itemhelper.$on("unsetReview", /*unsetReview*/ ctx[3]);
	let if_block = /*state*/ ctx[0].itemLayout && create_if_block_1(ctx);

	const block = {
		c: function create() {
			div2 = element("div");
			create_component(itemhelper.$$.fragment);
			t0 = space();
			center = element("center");
			div0 = element("div");
			div0.textContent = `${language.token_highlight}`;
			t2 = space();
			div1 = element("div");
			if (if_block) if_block.c();
			attr_dev(div0, "class", "token_highlight_heading font17 p-2 text-left");
			set_style(div0, "max-width", "600px");
			set_style(div0, "border-top", "2px solid #96bbf6");
			set_style(div0, "background-color", "#d9e7fd");
			add_location(div0, file, 347, 8, 12611);
			attr_dev(div1, "class", "p-2 word_break");
			set_style(div1, "max-width", "600px");
			set_style(div1, "border", "2px solid #d9e7fd");
			set_style(div1, "display", "flow-root");
			add_location(div1, file, 357, 8, 12905);
			add_location(center, file, 346, 8, 12594);
			attr_dev(div2, "class", "hotspot-token-preview svelte-4djjpi");
			attr_dev(div2, "tabindex", "0");
			add_location(div2, file, 339, 4, 12337);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div2, anchor);
			mount_component(itemhelper, div2, null);
			append_dev(div2, t0);
			append_dev(div2, center);
			append_dev(center, div0);
			append_dev(center, t2);
			append_dev(center, div1);
			if (if_block) if_block.m(div1, null);
			current = true;
		},
		p: function update(ctx, dirty) {
			const itemhelper_changes = {};
			if (dirty & /*state*/ 1) itemhelper_changes.reviewMode = /*state*/ ctx[0].isReview;
			itemhelper.$set(itemhelper_changes);

			if (/*state*/ ctx[0].itemLayout) {
				if (if_block) {
					if_block.p(ctx, dirty);
				} else {
					if_block = create_if_block_1(ctx);
					if_block.c();
					if_block.m(div1, null);
				}
			} else if (if_block) {
				if_block.d(1);
				if_block = null;
			}
		},
		i: function intro(local) {
			if (current) return;
			transition_in(itemhelper.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(itemhelper.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(div2);
			destroy_component(itemhelper);
			if (if_block) if_block.d();
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_else_block.name,
		type: "else",
		source: "(339:0) {:else}",
		ctx
	});

	return block;
}

// (335:0) {#if onError != ""}
function create_if_block(ctx) {
	let div;
	let span;

	const block = {
		c: function create() {
			div = element("div");
			span = element("span");
			span.textContent = "Oops Something went wrong please check your ParseXML Function";
			add_location(span, file, 336, 8, 12238);
			attr_dev(div, "class", "alert alert-danger font-weight-bold");
			add_location(div, file, 335, 4, 12180);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div, anchor);
			append_dev(div, span);
		},
		p: noop,
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(div);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block.name,
		type: "if",
		source: "(335:0) {#if onError != \\\"\\\"}",
		ctx
	});

	return block;
}

// (366:12) {#if state.itemLayout}
function create_if_block_1(ctx) {
	let each_1_anchor;
	let each_value = /*state*/ ctx[0].itemLayout;
	validate_each_argument(each_value);
	let each_blocks = [];

	for (let i = 0; i < each_value.length; i += 1) {
		each_blocks[i] = create_each_block(get_each_context(ctx, each_value, i));
	}

	const block = {
		c: function create() {
			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			each_1_anchor = empty();
		},
		m: function mount(target, anchor) {
			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(target, anchor);
			}

			insert_dev(target, each_1_anchor, anchor);
		},
		p: function update(ctx, dirty) {
			if (dirty & /*state, getCorrect, setSelected*/ 49) {
				each_value = /*state*/ ctx[0].itemLayout;
				validate_each_argument(each_value);
				let i;

				for (i = 0; i < each_value.length; i += 1) {
					const child_ctx = get_each_context(ctx, each_value, i);

					if (each_blocks[i]) {
						each_blocks[i].p(child_ctx, dirty);
					} else {
						each_blocks[i] = create_each_block(child_ctx);
						each_blocks[i].c();
						each_blocks[i].m(each_1_anchor.parentNode, each_1_anchor);
					}
				}

				for (; i < each_blocks.length; i += 1) {
					each_blocks[i].d(1);
				}

				each_blocks.length = each_value.length;
			}
		},
		d: function destroy(detaching) {
			destroy_each(each_blocks, detaching);
			if (detaching) detach_dev(each_1_anchor);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block_1.name,
		type: "if",
		source: "(366:12) {#if state.itemLayout}",
		ctx
	});

	return block;
}

// (368:20) {#if data.value.indexOf('##pt') > -1 }
function create_if_block_5(ctx) {
	let t_value = (/*data*/ ctx[24].value = /*data*/ ctx[24].value.replace(/##pt/g, ".")) + "";
	let t;

	const block = {
		c: function create() {
			t = text(t_value);
		},
		m: function mount(target, anchor) {
			insert_dev(target, t, anchor);
		},
		p: function update(ctx, dirty) {
			if (dirty & /*state*/ 1 && t_value !== (t_value = (/*data*/ ctx[24].value = /*data*/ ctx[24].value.replace(/##pt/g, ".")) + "")) set_data_dev(t, t_value);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block_5.name,
		type: "if",
		source: "(368:20) {#if data.value.indexOf('##pt') > -1 }",
		ctx
	});

	return block;
}

// (371:20) {#if data.value.indexOf('#cm') > -1 }
function create_if_block_4(ctx) {
	let t_value = (/*data*/ ctx[24].value = /*data*/ ctx[24].value.replace(/#cm/g, ",")) + "";
	let t;

	const block = {
		c: function create() {
			t = text(t_value);
		},
		m: function mount(target, anchor) {
			insert_dev(target, t, anchor);
		},
		p: function update(ctx, dirty) {
			if (dirty & /*state*/ 1 && t_value !== (t_value = (/*data*/ ctx[24].value = /*data*/ ctx[24].value.replace(/#cm/g, ",")) + "")) set_data_dev(t, t_value);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block_4.name,
		type: "if",
		source: "(371:20) {#if data.value.indexOf('#cm') > -1 }",
		ctx
	});

	return block;
}

// (385:20) {:else}
function create_else_block_1(ctx) {
	let div;
	let span0;
	let t0_value = /*data*/ ctx[24].value + "";
	let t0;
	let span0_data_id_value;
	let span0_data_correct_value;
	let span0_data_selected_value;
	let span0_tabindex_value;
	let span0_class_value;
	let t1;
	let span2;
	let span1;
	let span1_class_value;
	let span1_aria_label_value;
	let span2_class_value;
	let t2;
	let div_key_value;
	let mounted;
	let dispose;

	const block = {
		c: function create() {
			div = element("div");
			span0 = element("span");
			t0 = text(t0_value);
			t1 = space();
			span2 = element("span");
			span1 = element("span");
			t2 = space();
			attr_dev(span0, "data-id", span0_data_id_value = "ID" + /*i*/ ctx[26]);
			attr_dev(span0, "data-correct", span0_data_correct_value = /*getCorrect*/ ctx[4]("ID" + /*i*/ ctx[26]));
			attr_dev(span0, "data-selected", span0_data_selected_value = /*data*/ ctx[24].selected);
			attr_dev(span0, "tabindex", span0_tabindex_value = /*state*/ ctx[0].pointerEvents == "auto" ? "0" : "1");
			attr_dev(span0, "class", span0_class_value = "pointer float-left text-left font14 token " + (/*data*/ ctx[24].selected ? "token_selected" : "") + " svelte-4djjpi");
			set_style(span0, "margin", "2px");
			set_style(span0, "user-select", "none");
			set_style(span0, "border", "1px solid transparent");
			set_style(span0, "padding", "1px 3px 1px 3px");
			set_style(span0, "border-radius", "3px");
			set_style(span0, "pointer-events", /*state*/ ctx[0].pointerEvents + "\n                                ");
			add_location(span0, file, 386, 28, 14201);

			attr_dev(span1, "class", span1_class_value = "position-relative " + (/*getCorrect*/ ctx[4]("ID" + /*i*/ ctx[26])
			? "icomoon-new-24px-checkmark-circle-1"
			: "icomoon-new-24px-cancel-circle-1"));

			set_style(span1, "color", /*getCorrect*/ ctx[4]("ID" + /*i*/ ctx[26])
			? "green"
			: "red");

			set_style(span1, "bottom", "3px");
			set_style(span1, "left", "0");

			attr_dev(span1, "aria-label", span1_aria_label_value = /*getCorrect*/ ctx[4]("ID" + /*i*/ ctx[26])
			? "marked as correct"
			: "marked as incorrect");

			add_location(span1, file, 419, 32, 16024);
			attr_dev(span2, "class", span2_class_value = "" + (null_to_empty(/*state*/ ctx[0].iconVisible) + " svelte-4djjpi"));
			set_style(span2, "position", "absolute");
			set_style(span2, "width", "17px");
			set_style(span2, "height", "17px");
			set_style(span2, "right", "-8px");
			set_style(span2, "top", "-9px");
			set_style(span2, "background", "white");
			set_style(span2, "border-radius", "15px 12px 12px");
			set_style(span2, "font-size", "18px");
			set_style(span2, "z-index", "1");

			set_style(span2, "display", (/*state*/ ctx[0].iconVisible == "" && /*data*/ ctx[24].selected
			? "block"
			: "none") + "\n                                ");

			add_location(span2, file, 404, 28, 15240);
			attr_dev(div, "key", div_key_value = /*i*/ ctx[26]);
			attr_dev(div, "class", "tokenHeader position-relative float-left");
			add_location(div, file, 385, 24, 14110);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div, anchor);
			append_dev(div, span0);
			append_dev(span0, t0);
			append_dev(div, t1);
			append_dev(div, span2);
			append_dev(span2, span1);
			append_dev(div, t2);

			if (!mounted) {
				dispose = listen_dev(span0, "click", /*setSelected*/ ctx[5].bind(this, /*i*/ ctx[26]), false, false, false);
				mounted = true;
			}
		},
		p: function update(new_ctx, dirty) {
			ctx = new_ctx;
			if (dirty & /*state*/ 1 && t0_value !== (t0_value = /*data*/ ctx[24].value + "")) set_data_dev(t0, t0_value);

			if (dirty & /*state*/ 1 && span0_data_selected_value !== (span0_data_selected_value = /*data*/ ctx[24].selected)) {
				attr_dev(span0, "data-selected", span0_data_selected_value);
			}

			if (dirty & /*state*/ 1 && span0_tabindex_value !== (span0_tabindex_value = /*state*/ ctx[0].pointerEvents == "auto" ? "0" : "1")) {
				attr_dev(span0, "tabindex", span0_tabindex_value);
			}

			if (dirty & /*state*/ 1 && span0_class_value !== (span0_class_value = "pointer float-left text-left font14 token " + (/*data*/ ctx[24].selected ? "token_selected" : "") + " svelte-4djjpi")) {
				attr_dev(span0, "class", span0_class_value);
			}

			if (dirty & /*state*/ 1) {
				set_style(span0, "pointer-events", /*state*/ ctx[0].pointerEvents + "\n                                ");
			}

			if (dirty & /*state*/ 1 && span2_class_value !== (span2_class_value = "" + (null_to_empty(/*state*/ ctx[0].iconVisible) + " svelte-4djjpi"))) {
				attr_dev(span2, "class", span2_class_value);
			}

			if (dirty & /*state*/ 1) {
				set_style(span2, "display", (/*state*/ ctx[0].iconVisible == "" && /*data*/ ctx[24].selected
				? "block"
				: "none") + "\n                                ");
			}
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(div);
			mounted = false;
			dispose();
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_else_block_1.name,
		type: "else",
		source: "(385:20) {:else}",
		ctx
	});

	return block;
}

// (383:56) 
function create_if_block_3(ctx) {
	let br;

	const block = {
		c: function create() {
			br = element("br");
			attr_dev(br, "class", "svelte-4djjpi");
			add_location(br, file, 383, 24, 14052);
		},
		m: function mount(target, anchor) {
			insert_dev(target, br, anchor);
		},
		p: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(br);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block_3.name,
		type: "if",
		source: "(383:56) ",
		ctx
	});

	return block;
}

// (374:20) {#if data.value == "," || data.value == "."}
function create_if_block_2(ctx) {
	let div;
	let span;
	let t0_value = /*data*/ ctx[24].value + "";
	let t0;
	let t1;

	const block = {
		c: function create() {
			div = element("div");
			span = element("span");
			t0 = text(t0_value);
			t1 = space();
			attr_dev(span, "class", "float-left position-absolute top2");
			set_style(span, "left", "-1.5px");
			add_location(span, file, 375, 28, 13696);
			attr_dev(div, "class", "float-left position-relative");
			set_style(div, "width", "1.5px");
			set_style(div, "height", "1px");
			add_location(div, file, 374, 24, 13591);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div, anchor);
			append_dev(div, span);
			append_dev(span, t0);
			append_dev(div, t1);
		},
		p: function update(ctx, dirty) {
			if (dirty & /*state*/ 1 && t0_value !== (t0_value = /*data*/ ctx[24].value + "")) set_data_dev(t0, t0_value);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(div);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block_2.name,
		type: "if",
		source: "(374:20) {#if data.value == \\\",\\\" || data.value == \\\".\\\"}",
		ctx
	});

	return block;
}

// (367:16) {#each state.itemLayout as data, i }
function create_each_block(ctx) {
	let show_if_1 = /*data*/ ctx[24].value.indexOf("##pt") > -1;
	let t0;
	let show_if = /*data*/ ctx[24].value.indexOf("#cm") > -1;
	let t1;
	let if_block2_anchor;
	let if_block0 = show_if_1 && create_if_block_5(ctx);
	let if_block1 = show_if && create_if_block_4(ctx);

	function select_block_type_1(ctx, dirty) {
		if (/*data*/ ctx[24].value == "," || /*data*/ ctx[24].value == ".") return create_if_block_2;
		if (/*data*/ ctx[24].value == "#newline#") return create_if_block_3;
		return create_else_block_1;
	}

	let current_block_type = select_block_type_1(ctx);
	let if_block2 = current_block_type(ctx);

	const block = {
		c: function create() {
			if (if_block0) if_block0.c();
			t0 = space();
			if (if_block1) if_block1.c();
			t1 = space();
			if_block2.c();
			if_block2_anchor = empty();
		},
		m: function mount(target, anchor) {
			if (if_block0) if_block0.m(target, anchor);
			insert_dev(target, t0, anchor);
			if (if_block1) if_block1.m(target, anchor);
			insert_dev(target, t1, anchor);
			if_block2.m(target, anchor);
			insert_dev(target, if_block2_anchor, anchor);
		},
		p: function update(ctx, dirty) {
			if (dirty & /*state*/ 1) show_if_1 = /*data*/ ctx[24].value.indexOf("##pt") > -1;

			if (show_if_1) {
				if (if_block0) {
					if_block0.p(ctx, dirty);
				} else {
					if_block0 = create_if_block_5(ctx);
					if_block0.c();
					if_block0.m(t0.parentNode, t0);
				}
			} else if (if_block0) {
				if_block0.d(1);
				if_block0 = null;
			}

			if (dirty & /*state*/ 1) show_if = /*data*/ ctx[24].value.indexOf("#cm") > -1;

			if (show_if) {
				if (if_block1) {
					if_block1.p(ctx, dirty);
				} else {
					if_block1 = create_if_block_4(ctx);
					if_block1.c();
					if_block1.m(t1.parentNode, t1);
				}
			} else if (if_block1) {
				if_block1.d(1);
				if_block1 = null;
			}

			if (current_block_type === (current_block_type = select_block_type_1(ctx)) && if_block2) {
				if_block2.p(ctx, dirty);
			} else {
				if_block2.d(1);
				if_block2 = current_block_type(ctx);

				if (if_block2) {
					if_block2.c();
					if_block2.m(if_block2_anchor.parentNode, if_block2_anchor);
				}
			}
		},
		d: function destroy(detaching) {
			if (if_block0) if_block0.d(detaching);
			if (detaching) detach_dev(t0);
			if (if_block1) if_block1.d(detaching);
			if (detaching) detach_dev(t1);
			if_block2.d(detaching);
			if (detaching) detach_dev(if_block2_anchor);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_each_block.name,
		type: "each",
		source: "(367:16) {#each state.itemLayout as data, i }",
		ctx
	});

	return block;
}

function create_fragment(ctx) {
	let current_block_type_index;
	let if_block;
	let if_block_anchor;
	let current;
	const if_block_creators = [create_if_block, create_else_block];
	const if_blocks = [];

	function select_block_type(ctx, dirty) {
		if (/*onError*/ ctx[1] != "") return 0;
		return 1;
	}

	current_block_type_index = select_block_type(ctx);
	if_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);

	const block = {
		c: function create() {
			if_block.c();
			if_block_anchor = empty();
		},
		l: function claim(nodes) {
			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
		},
		m: function mount(target, anchor) {
			if_blocks[current_block_type_index].m(target, anchor);
			insert_dev(target, if_block_anchor, anchor);
			current = true;
		},
		p: function update(ctx, [dirty]) {
			let previous_block_index = current_block_type_index;
			current_block_type_index = select_block_type(ctx);

			if (current_block_type_index === previous_block_index) {
				if_blocks[current_block_type_index].p(ctx, dirty);
			} else {
				group_outros();

				transition_out(if_blocks[previous_block_index], 1, 1, () => {
					if_blocks[previous_block_index] = null;
				});

				check_outros();
				if_block = if_blocks[current_block_type_index];

				if (!if_block) {
					if_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);
					if_block.c();
				}

				transition_in(if_block, 1);
				if_block.m(if_block_anchor.parentNode, if_block_anchor);
			}
		},
		i: function intro(local) {
			if (current) return;
			transition_in(if_block);
			current = true;
		},
		o: function outro(local) {
			transition_out(if_block);
			current = false;
		},
		d: function destroy(detaching) {
			if_blocks[current_block_type_index].d(detaching);
			if (detaching) detach_dev(if_block_anchor);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots("HotspotTokenPreview", slots, []);
	let { xml } = $$props;
	let { editorState } = $$props;
	let { isReview } = $$props;
	let { showAns } = $$props;
	let { uxml } = $$props;
	let state = {};

	let hdd = writable({
		xml: "",
		itemType: "",
		cdata: "",
		correctAns: "",
		userAns: [],
		itemLayout: [],
		smController: "h",
		pointerEvents: "auto",
		iconVisible: "h",
		isReview: false
	});

	let onError = "";

	const unsubs = hdd.subscribe(items => {
		$$invalidate(0, state = items);
	});

	// calls whenever there is change in props or state
	beforeUpdate(() => {
		// go in block if there is change in xml
		if (xml != state.xml) {
			// set the state of xml to the current(changed) xml
			$$invalidate(0, state.xml = xml, state);

			// reset the correct and user ans
			resetValue();

			// load the module
			loadModule(xml);
		}

		// go in block if there is change in remediation mode
		if (isReview) {
			// check tha answer
			checkAns();

			setReview();
		} else {
			// if review mode is off
			if (editorState) unsetReview();
		}
	});

	// run just after rendering
	onMount(() => {
		// select token press the Enter Key ADA
		AH.listen("body", "keydown", ".token", (_this, e) => {
			if (e.which === 13) {
				_this.click();
			}
		});

		if (window.inNative) {
			window.getHeight && window.getHeight();
		}
	}); // //Toggle Button Color
	// AH.bind('#sm_controller button').click(function() {
	//     $('#sm_controller button').removeClass("active btn-primary text-white bg-primary");
	//     $(this).addClass('active btn-primary text-white bg-primary');

	// });
	// Binding set-review and unset-review with the click event
	//For modeOn functions in prepkit
	// $("#set-review").on('click', function() {
	//     setReview();
	// });
	// $("#unset-review").on('click', function() {
	//     unsetReview();
	// });
	// binding token with enter key in case of IE
	// if (isIE) {
	//     AH.listen(document, "keyup", ".hotspot-token-preview .token", (_this, event)=> {
	//         if (event.which == 13) {
	//             _this.click();
	//         }
	//     });
	// }
	// when review mode is on
	function setReview() {
		$$invalidate(0, state.isReview = true, state);
		$$invalidate(0, state.smController = "", state);
		$$invalidate(0, state.pointerEvents = "none", state);
		showAnswer("yans", "showIcon");

		//$('#sm_controller .your-ans').addClass("btn-light active"); 
		AH.select(".tokenHeader", "attr", { tabIndex: "0" });
	}

	// when review mode is off
	function unsetReview() {
		$$invalidate(0, state.isReview = false, state);
		$$invalidate(0, state.smController = "h", state);
		$$invalidate(0, state.pointerEvents = "auto", state);
		showAnswer("yans", "hideIcon");
		AH.select(".tokenHeader", "removeAttr", "tabindex");
	} //$('#sm_controller button').removeClass("active btn-primary text-white bg-primary");

	// for resetting the value
	function resetValue() {
		$$invalidate(0, state.correctAns = [], state);
		$$invalidate(0, state.userAns = [], state);
	}

	// load the module
	function loadModule(loadXml) {
		// Here xml is converted into the json and pass into the parseXMLAuthoring for xml parsing
		loadXml = XMLToJSON(loadXml);

		parseXMLPreview(loadXml);
	}

	// parse function for the preview
	async function parseXMLPreview(MYXML) {
		try {
			// split the correctAns by , & stored it in the current state 
			$$invalidate(0, state.correctAns = MYXML.smxml.div._correctAns.split(","), state);

			// set the type of module wether it is w,p or s
			$$invalidate(0, state.itemType = MYXML.smxml.div._type, state);

			// set the state of cdata on the basis of xml and after that parse the xml according to its type
			$$invalidate(0, state.cdata = MYXML.smxml.div.__cdata, state);

			await tick();

			switch (MYXML.smxml.div._type) {
				case "w":
					// if the type is word
					// function for parse word
					parseWord(state.cdata);
					break;
				case "s":
					// if the type is sentence
					// function for parse sentence
					parseSentance(state.cdata);
					break;
				case "p":
					// if the type is paragraph
					// function for parse paragraph
					parseParagraph(state.cdata);
					break;
				default:
					console.warn("No type found to parse");
					break;
			}

			if (uxml) {
				// parse the user ans
				parseUserAns(uxml);
			}
		} catch(error) {
			$$invalidate(1, onError = error);

			console.warn({
				"error": error.message,
				"function name": "parseXMLPreview",
				"File name": "HotspotTokenPreview.js"
			});
		}
	}

	// in case of word 
	function parseWord(str) {
		// replace the newline with " #newline# "
		str = str.replace(/\n/g, " #newline# ");

		//Split the string with space and remove array which contain null value
		let word = str.split(" ").map(item => {
			return item.trim();
		}).filter(arr => {
			return arr != "";
		});

		let wordArray = [];
		let tempWord = [];

		/* split punctuation mark in word and store in the tempWord array */
		word.map((data, i) => {
			let special_symbol = data.match(/[.,]/g);

			if (special_symbol) {
				let splitText = data.split(special_symbol[0]);
				tempWord.push(splitText[0]);
				tempWord.push(special_symbol[0]);

				if (splitText[1].trim()) {
					tempWord.push(splitText[1]);
				}
			} else {
				tempWord.push(data);
			}
		});

		/*end*/
		// store id, value and selected in wordArray
		// Here id is unique id of that element , value stores the element value and selected stores wether it is selected or not
		tempWord.map((data, i) => {
			wordArray.push({
				id: "ID" + i,
				value: data,
				selected: false
			});
		});

		$$invalidate(0, state.itemLayout = wordArray, state);
	}

	// in case of sentence
	function parseSentance(str) {
		//Split the string with fullstop and remove array which contain null value
		let sentance = str.split(".").map(item => {
			return item.trim();
		}).filter(arr => {
			return arr != "";
		});

		let sentanceArray = [];

		// store id, value and selected in sentanceArray
		// Here id is unique id of that element , value stores the element value and selected stores wether it is selected or not
		sentance.map((data, i) => {
			sentanceArray.push({
				id: "ID" + i,
				value: data + ".",
				selected: false
			});
		});

		$$invalidate(0, state.itemLayout = sentanceArray, state);
	}

	// in case of paragraph
	function parseParagraph(str) {
		//Split the string with paragraph and remove array which contain null value
		let paragraph = str.split("\n").map(item => {
			return item.trim();
		}).filter(arr => {
			return arr != "";
		});

		let paragraphArray = [];

		// store id, value and selected in paragraphArray
		// Here id is unique id of that element , value stores the element value and selected stores wether it is selected or not
		paragraph.map((data, i) => {
			paragraphArray.push({
				id: "ID" + i,
				value: data,
				selected: false
			});
		});

		$$invalidate(0, state.itemLayout = paragraphArray, state);
	}

	function getCorrect(id) {
		//Return true if this id is correct answer
		return AH.findInArray(id, state.correctAns) ? true : false;
	}

	// for checking the answer
	function checkAns() {
		// used for switch on next question in prepengine if current question is attempted
		ISSPECIALMODULEUSERXMLCHANGE = 1;

		let resultLength = 0;
		const correctLength = state.correctAns.length;

		//Check if correct answer is equal to user answer
		state.correctAns.map((data, i) => {
			state.userAns.map((data2, j) => {
				if (data == data2) {
					resultLength = resultLength + 1;
				}
			});
		});

		let ans = correctLength == resultLength && resultLength == state.userAns.length
		? true
		: false;

		onUserAnsChange({
			ans,
			uXml: "",
			correctPoints: state.correctAns.length,
			ansPoint: resultLength
		});

		showAns && showAns(ans ? "Correct" : "Incorrect");
	}

	// for stting the user answer for selected one
	function setSelected(pos) {
		$$invalidate(0, state.itemLayout[pos].selected = !state.itemLayout[pos].selected, state);
		setUserAns(pos, state.itemLayout[pos].selected);
	}

	function setUserAns(id, selected) {
		let tempUserAns = state.userAns;

		//Push the index in user answer array if clicked first time
		//and delete the index from user answer if it is already selected
		if (selected == true) {
			// push in the userAns if it is selected
			tempUserAns.push("ID" + id);

			$$invalidate(0, state.userAns = tempUserAns, state);
		} else if (selected == false) {
			let deleteValue = tempUserAns.indexOf("ID" + id);

			if (deleteValue > -1) {
				// delete from the user ans if it is deselected
				tempUserAns.splice(deleteValue, 1);
			}

			$$invalidate(0, state.userAns = tempUserAns, state);
		}

		// getting height in native
		if (window.inNative) {
			window.getHeight && window.getHeight();
		}

		// updating the uaXml
		AH.select("#special_module_user_xml", "value", "<smans><div userAns='" + state.userAns.join() + "'></div></smans>");

		// check for correct answer
		checkAns();
	}

	// for showing answer
	function showAnswer(val, iconState) {
		//show correct incorrect icon with respect to iconState
		$$invalidate(0, state.iconVisible = iconState == "showIcon" ? "" : "h", state);

		//change token highlight with respect to val
		//either to show correct answer or user answer
		let ans = [];

		if (val == "cans") {
			// if correct ans tab
			ans = state.correctAns;
		} else if (val == "yans") {
			// if user answer tab
			ans = state.userAns;
		}

		state.itemLayout.map((data, j) => {
			data.selected = AH.findInArray(data.id, ans) ? true : false;
		}); //return data;
	}

	// for parsing the user ans function
	function parseUserAns(uans) {
		// converting the xml into the json and stored in userAnswer
		let userAnswer = XMLToJSON(uans);

		// cheking for the 2 elements smans,div, and one attribute of div i.e, userAns
		if (userAnswer.smans && userAnswer.smans.div && userAnswer.smans.div._userAns) {
			// splitting the userAns with ,
			$$invalidate(0, state.userAns = userAnswer.smans.div._userAns.split(","), state);

			// get the selection on the basis of the user answer
			state.itemLayout.map((data, j) => {
				data.selected = AH.findInArray(data.id, state.userAns) ? true : false;
			});
		}
	}

	function handleReviewClick(mode, event) {
		if (mode == "c") {
			showAnswer("cans", "hideIcon");
		} else {
			showAnswer("yans", "showIcon");
		}
	}

	const writable_props = ["xml", "editorState", "isReview", "showAns", "uxml"];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console_1.warn(`<HotspotTokenPreview> was created with unknown prop '${key}'`);
	});

	$$self.$$set = $$props => {
		if ("xml" in $$props) $$invalidate(7, xml = $$props.xml);
		if ("editorState" in $$props) $$invalidate(8, editorState = $$props.editorState);
		if ("isReview" in $$props) $$invalidate(9, isReview = $$props.isReview);
		if ("showAns" in $$props) $$invalidate(10, showAns = $$props.showAns);
		if ("uxml" in $$props) $$invalidate(11, uxml = $$props.uxml);
	};

	$$self.$capture_state = () => ({
		beforeUpdate,
		onMount,
		tick,
		writable,
		ItemHelper,
		AH,
		onUserAnsChange,
		XMLToJSON,
		l: language,
		xml,
		editorState,
		isReview,
		showAns,
		uxml,
		state,
		hdd,
		onError,
		unsubs,
		setReview,
		unsetReview,
		resetValue,
		loadModule,
		parseXMLPreview,
		parseWord,
		parseSentance,
		parseParagraph,
		getCorrect,
		checkAns,
		setSelected,
		setUserAns,
		showAnswer,
		parseUserAns,
		handleReviewClick
	});

	$$self.$inject_state = $$props => {
		if ("xml" in $$props) $$invalidate(7, xml = $$props.xml);
		if ("editorState" in $$props) $$invalidate(8, editorState = $$props.editorState);
		if ("isReview" in $$props) $$invalidate(9, isReview = $$props.isReview);
		if ("showAns" in $$props) $$invalidate(10, showAns = $$props.showAns);
		if ("uxml" in $$props) $$invalidate(11, uxml = $$props.uxml);
		if ("state" in $$props) $$invalidate(0, state = $$props.state);
		if ("hdd" in $$props) hdd = $$props.hdd;
		if ("onError" in $$props) $$invalidate(1, onError = $$props.onError);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [
		state,
		onError,
		setReview,
		unsetReview,
		getCorrect,
		setSelected,
		handleReviewClick,
		xml,
		editorState,
		isReview,
		showAns,
		uxml
	];
}

class HotspotTokenPreview extends SvelteComponentDev {
	constructor(options) {
		super(options);
		if (!document.getElementById("svelte-4djjpi-style")) add_css();

		init(this, options, instance, create_fragment, safe_not_equal, {
			xml: 7,
			editorState: 8,
			isReview: 9,
			showAns: 10,
			uxml: 11
		});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "HotspotTokenPreview",
			options,
			id: create_fragment.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*xml*/ ctx[7] === undefined && !("xml" in props)) {
			console_1.warn("<HotspotTokenPreview> was created without expected prop 'xml'");
		}

		if (/*editorState*/ ctx[8] === undefined && !("editorState" in props)) {
			console_1.warn("<HotspotTokenPreview> was created without expected prop 'editorState'");
		}

		if (/*isReview*/ ctx[9] === undefined && !("isReview" in props)) {
			console_1.warn("<HotspotTokenPreview> was created without expected prop 'isReview'");
		}

		if (/*showAns*/ ctx[10] === undefined && !("showAns" in props)) {
			console_1.warn("<HotspotTokenPreview> was created without expected prop 'showAns'");
		}

		if (/*uxml*/ ctx[11] === undefined && !("uxml" in props)) {
			console_1.warn("<HotspotTokenPreview> was created without expected prop 'uxml'");
		}
	}

	get xml() {
		throw new Error("<HotspotTokenPreview>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set xml(value) {
		throw new Error("<HotspotTokenPreview>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get editorState() {
		throw new Error("<HotspotTokenPreview>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set editorState(value) {
		throw new Error("<HotspotTokenPreview>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get isReview() {
		throw new Error("<HotspotTokenPreview>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set isReview(value) {
		throw new Error("<HotspotTokenPreview>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get showAns() {
		throw new Error("<HotspotTokenPreview>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set showAns(value) {
		throw new Error("<HotspotTokenPreview>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get uxml() {
		throw new Error("<HotspotTokenPreview>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set uxml(value) {
		throw new Error("<HotspotTokenPreview>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

export default HotspotTokenPreview;
//# sourceMappingURL=HotspotTokenPreview-458cae46.js.map
