{"version":3,"file":"GraphPreview-af3ac8e3.js","sources":["../../../clsSMGraph/lib/mathString.js","../../../clsSMGraph/GraphPreview.svelte"],"sourcesContent":["/**\r\n *  File Name   : mathString.js\r\n *  Author      : Ayush Srivastava\r\n *  Function    : Graph\r\n *  Version     : 1.0\r\n *  Packege     : clsSMGRAPH (Preview)\r\n *  Last update : 02 Mar 2021\r\n *  Dependency  : JUI\r\n */\r\n\r\n// importing JUI\r\nimport JUI from '../../src/libs/javscript_helper/JUI';\r\nimport l from '../../src/libs/editorLib/language.js';\r\nconst JS = new JUI();\r\n\r\nlet GRAPH = {};\r\nGRAPH.userAnsXML = \"\";\r\nGRAPH.sinfo = false;\r\nGRAPH.ajax_eId = \"#mathmain\";\r\nlet board, point, prevPoint, is_correct;\r\n\r\n// plot the graph on the graph board with some binded events\r\nGRAPH.readyThis = function (mid) {\r\n    // plot the graph on the graph board\r\n    GRAPH.plotgraphPreview(mid);\r\n}\r\n\r\n// initialize the preview graph board\r\nGRAPH.initBoardPreview = function (mid, pElem) {\r\n    JXG.Options.point.snapToGrid = true; // point lie only on grid\r\n    JXG.Options.point.snapSizeX = JS.select(pElem).getAttribute('data-xtickdistance'); // x-axis interval\r\n    JXG.Options.point.snapSizeY = JS.select(pElem).getAttribute('data-ytickdistance'); // y-axis interval\r\n    JXG.Options.point.showInfobox = false;\r\n    /* \r\n        xright denotes number of grid will be draw on positive x-axis from center of the grid \r\n        xleft is same as xright only difference is of sign. Minus (-) denotes negative axis\r\n        ytop denotes number of grid will be draw on positive y-axis from center of the grid\r\n        ybottom is same as ytop only difference is of sign. Minus (-) denotes negative axis\r\n    */\r\n    let xright = JS.select(pElem).getAttribute('data-xaxis'), xleft = -xright, ytop = JS.select(pElem).getAttribute('data-yaxis'), ybottom = -ytop;\r\n\r\n    for (let index in JXG.boards) {\r\n        if ( JXG.boards[index].container.includes('Preview') ) {\r\n            if (JS.select(pElem).getAttribute('id') == JXG.boards[index].container) {\r\n                JXG.JSXGraph.freeBoard(JXG.boards[index]);\r\n            }\r\n        }\r\n    }\r\n    // hides the footer toolbox from the graph board\t\r\n\r\n    JS.find(mid, '.footer_toolbox').style.display = 'none';\r\n    // shows the delete button after removing the h class from delete button's container\r\n    JS.find(mid, '.delElem').classList.remove('h-imp');\r\n    let board, axis, xaxis, yaxis, points, polygon;\r\n    if (JS.select(pElem).classList.contains('association')) {\r\n        /* discarded by Pete sir */\r\n        board = JXG.JSXGraph.initBoard(JS.select(pElem).getAttribute('id'), {\r\n            'boundingbox': [xleft, 3.4, xright, -5.4],//[-0.2, 3.4, 3.2, -5.4]\r\n            'axis': false,\r\n            'grid': false,\r\n            'zoom': { 'factorX': 1.25, 'factorY': 1.25, 'wheel': true, 'needshift': true, 'eps': 0.1 },\r\n            'showCopyright': false,\r\n            'shownavigation': false\r\n        });\r\n        axis = board.create('line', [[0, 0], [1, 0]], { 'firstArrow': true, 'lastArrow': true, 'strokecolor': '#3E3E3E', 'fillcolor': '#3E3E3E', 'fixed': true });\r\n        board.axis = axis;\r\n        board.texts = [];\r\n        board.create('ticks', [axis, JS.select(pElem).getAttribute('data-xtickdistance')], {\r\n            'minorTicks': 9,\r\n            'majorHeight': 15,\r\n            'minorHeight': 5,\r\n            'drawLabels': true,\r\n            'label': { 'offset': [2, -10] },\r\n            'drawZero': true\r\n        });\r\n        JS.find(mid, '.delElem').classList.add('h-imp');\r\n\r\n        xaxis = Math.abs(JS.select(pElem).getAttribute('data-xaxis')) + Math.abs(JS.select(pElem).getAttribute('data-xtickdistance'));\r\n        yaxis = JS.select(pElem).getAttribute('data-yaxis');\r\n        polygon = board.create('polygon', [[-(xaxis), -2.4], [-(xaxis), -5.4], [(xaxis), -5.4], [(xaxis), -2.4]], { 'fillcolor': \"#ccc\", 'highlightfillcolor': \"#ccc\", 'withLines': false });\r\n    } else if (JS.select(pElem).classList.contains('plot')) {\r\n        // Initialise a new board\t\r\n        board = JXG.JSXGraph.initBoard(JS.select(pElem).getAttribute('id'), {\r\n            'boundingbox': [xleft, ytop, xright, -1], /* An array containing four numbers describing the left, top, right and bottom boundary of the board in user coordinates */\r\n            'axis': false, /* If set to true, show the axis. Can also be set to an object that is given to both axes as an attribute object. */\r\n            'grid': false, /* If set to true, shows the grid. Can also be set to an object that is given to the grid as its attribute object. */\r\n            'zoom': { 'factorX': 1.25, 'factorY': 1.25, 'wheel': true, 'needshift': true, 'eps': 0.1 }, /* Allow the user to zoom with the mouse wheel or the two-fingers-zoom gesture. */\r\n            'showCopyright': false, /* If it is true shows the copyright string in the top left corner. */\r\n            'shownavigation': false /* If it is true shows the navigation buttons in the bottom right corner. */\r\n        });\r\n        // Creates an instance of line\r\n        axis = board.create('line', [[0, 0], [1, 0]], { 'firstArrow': true, 'lastArrow': true, 'strokecolor': '#3E3E3E', 'fillcolor': '#3E3E3E', 'fixed': true });\r\n        // Creates an instance of ticks, ticks are used as distance markers on a line\r\n        board.create('ticks', [axis, JS.select(pElem).getAttribute('data-xtickdistance')], {\r\n            'minorTicks': 0, /* The number of minor ticks between two major ticks. */\r\n            'majorHeight': 15, /* Total height of a major tick. */\r\n            'minorHeight': 5, /* Total height of a minor tick. */\r\n            'drawLabels': true, /* Draw labels yes/no */\r\n            'label': { 'offset': [-6, -16] }, /* User defined labels for special ticks. */\r\n            'drawZero': true /* Draw the zero tick, that lies at line.point1 */\r\n        });\r\n        // defines maximun x-axis value \r\n        board.xmax = xright;\r\n        // hides the element have class 'delElem'\r\n        JS.find(mid, '.delElem').classList.add('h-imp');\r\n\r\n        // shows the element have class 'footer_toolbox'\r\n        JS.find(mid, '.footer_toolbox').style.display = 'block';\r\n    } else {\r\n        // Initialise a new board\r\n        board = JXG.JSXGraph.initBoard(JS.select(pElem).getAttribute('id'), {\r\n            'boundingbox': [xleft, ytop, xright, ybottom], /* An array containing four numbers describing the left, top, right and bottom boundary of the board in user coordinates */\r\n            'axis': false, /* If set to true, show the axis. Can also be set to an object that is given to both axes as an attribute object. */\r\n            'grid': false, /* If set to true, shows the grid. Can also be set to an object that is given to the grid as its attribute object. */\r\n            'zoom': { 'factorX': 1.25, 'factorY': 1.25, 'wheel': true, 'needshift': true, 'eps': 0.1 }, /* Allow the user to zoom with the mouse wheel or the two-fingers-zoom gesture. */\r\n            'showCopyright': false, /* If it is true shows the copyright string in the top left corner. */\r\n            'shownavigation': false /* If it is true shows the navigation buttons in the bottom right corner. */\r\n        });\r\n        // Creates an instance of x-axis\r\n        xaxis = board.create('axis', [[-(Math.abs(JS.select(pElem).getAttribute('data-xtickdistance')) / 2), 0], [(Math.abs(JS.select(pElem).getAttribute('data-xtickdistance')) / 2), 0]]);\r\n        // removes all ticks from x-axis \r\n        xaxis.removeAllTicks();\r\n        // Creates an instance of ticks, ticks are used as distance markers on a line\r\n        board.create('ticks', [xaxis, JS.select(pElem).getAttribute('data-xtickdistance')], {\r\n            'strokeColor': '#ccc', // color of the stroke\r\n            'majorHeight': -1, /* Total height of a major tick */\r\n            'drawLabels': true, /* Draw labels */\r\n            'label': { 'offset': [2, -10] }, /* Attributes for the axis label */\r\n            'minorTicks': 3, /* The number of minor ticks between two major ticks. */\r\n            'drawZero': true /* Draw the zero tick, that lies at line.point1 */\r\n        });\r\n        // Creates an instance of y-axis\r\n        yaxis = board.create('axis', [[0, -(Math.abs(JS.select(pElem).getAttribute('data-ytickdistance')) / 2)], [0, (Math.abs(JS.select(pElem).getAttribute('data-ytickdistance')) / 2)]]);\r\n        // removes all ticks from y-axis\r\n        yaxis.removeAllTicks();\r\n        // Creates an instance of ticks, ticks are used as distance markers on a line\r\n        board.create('ticks', [yaxis, JS.select(pElem).getAttribute('data-ytickdistance')], {\r\n            'strokeColor': '#ccc', // color of the stroke\r\n            'majorHeight': -1, /* Total height of a major tick */\r\n            'drawLabels': true, /* Draw labels */\r\n            'label': { 'offset': [4, -6] }, /* Attributes for the axis label */\r\n            'minorTicks': 3, /* The number of minor ticks between two major ticks. */\r\n            'drawZero': false /* If it is true then draw the zero tick, that lies at line.point1 */\r\n        });\r\n    }\r\n    board.points = [];\r\n    board.xtick = JS.select(pElem).getAttribute('data-xtickdistance'); /* defines the x-axis interval of the graph board */\r\n    board.ytick = JS.select(pElem).getAttribute('data-ytickdistance'); /* defines the y-axis interval of the graph board */\r\n    board.xaxis = JS.select(pElem).getAttribute('data-xaxis'); /* defines no of grid will be draw on each (positive and negative) x-axis of the graph board */\r\n    board.yaxis = JS.select(pElem).getAttribute('data-yaxis'); /* defines no of grid will be draw on each (positive and negative) y-axis of the graph board */\r\n    // Shows the name of the graph selected in left side of toolbar in capitalize form\r\n    let li = JS.find(mid, 'li.selected-option', 'all');\r\n    if (li.length) {\r\n        li.forEach((el) => {\r\n            el.innerHTML = JS.select(pElem).getAttribute('type');\r\n            el.style.textTransform = 'capitalize'\r\n        });\r\n    }\r\n\r\n    if (JS.select(pElem).getAttribute('type') == \"polygon\" && JS.select(pElem).getAttribute('data-reflection') && JS.select(pElem).getAttribute('data-reflection')) {\r\n        points = JS.select(pElem).getAttribute('data-reflection').split('|');\r\n        polygon = [];\r\n\r\n        for (let index = 0; index < points.length; index++) {\r\n            let k = points[index].split(',');\r\n            // Creates an instance of point\r\n            let point = board.create(\"point\", [k[0], k[1]], { 'name': \"\", 'strokecolor': \"darkgray\", 'strokewidth': 2, 'fillcolor': \"darkgray\" });\r\n            // pushes the instance of deffent-2 point into polygon array\r\n            polygon.push(point);\r\n        }\r\n        // Creates an instance of polygon\r\n        board.create('polygon', polygon, { 'withline': true, 'fillcolor': \"darkgray\", 'borders': { 'strokecolor': \"darkgray\", 'strokewidth': 2 } });\r\n    }\r\n    // returns reference to the created board\r\n    return board;\r\n}\r\n\r\n// plot the graph on the graph board\r\nGRAPH.plotgraphPreview = function (mid) {\r\n    let elements = JS.find(mid, '.drag-resize', 'all');\r\n    for (let index = 0; index < elements.length; index++) {\r\n        let elem = elements[index].getAttribute('id');\r\n        // assign reference of the created board\r\n        board = GRAPH.initBoardPreview(mid, elements[index]);\r\n        board.prevPoint = null;\r\n        let pointy = 1;\r\n        /* The function getMouseCoords extracts the click coordinates from the event object and returns a JXG.Coords object with the point's coordinates on the board */\r\n        let getMouseCoords = function (e) {\r\n            /* Calculates mouse coordinates relative to the boards container. */\r\n            let cPos = board.getCoordsTopLeftCorner(e),\r\n                absPos = JXG.getPosition(e, 0), /* Get the position of the mouse in screen coordinates, relative to the upper left corner of the host tag */\r\n                dx = absPos[0] - cPos[0],\r\n                dy = absPos[1] - cPos[1];\r\n            return new JXG.Coords(JXG.COORDS_BY_SCREEN, [dx, dy], board);\r\n        },\r\n        down = function (e) {\r\n            let canCreate = true, coords, el;\r\n            // instance of mouse coordinate\r\n            coords = getMouseCoords(e);\r\n            for (el in board.objects) {\r\n                if (JXG.isPoint(board.objects[el]) && board.objects[el].hasPoint(coords.scrCoords[1], coords.scrCoords[2])) {\r\n                    // used for check if point will be draw or not\r\n                    canCreate = false;\r\n                    break;\r\n                }\r\n            }\r\n            // allow to create the point if it is not exist on the board with same co-ordinate value\r\n            if (canCreate) {\r\n                let point, type;\r\n                if (JS.select('#' + elem).classList.contains('plot')) {\r\n                    // Creates an instance of point\r\n                    point = board.create('point', [coords.usrCoords[1], pointy], { 'name': \"\", 'showInfobox': false });\r\n                    point.Xjc = point.X() + Math.abs(point.board.xtick);\r\n                    type = JS.select('.footer_toolbox li.btn_active').getAttribute('data-value'); \r\n                    pointy++;\r\n                    if (pointy == point.board.yaxis) {\r\n                        board.off('down');\r\n                    }\r\n                } else {\r\n                    // Creates an instance of point\r\n                    point = board.create('point', [coords.usrCoords[1], coords.usrCoords[2]], { 'name': \"\" });\r\n                }\r\n                // Updates and draw the graph\r\n                GRAPH.updateAndDrawPreview(mid, elem, point, type);\r\n                // update the attributes of graph board container\r\n                GRAPH.updateAttrsPreview(elem, point);\r\n            }\r\n            // check the answer\r\n            GRAPH.checkAns(mid);\r\n        }\r\n        if (JS.select('#' + elem).classList.contains('association')) {\r\n            // It is discarded by Pete sir\r\n            if (JS.select('#' + elem).getAttribute('data-userans') == \"\") {\r\n                let anskey = JS.select('#' + elem).getAttribute('data-anskey').split('|'), p1 = -(JS.select('#' + elem).getAttribute('data-xaxis') - JS.select('#' + elem).getAttribute('data-xtickdistance')), p2 = -4.4;\r\n                for (let subindex = 0; subindex < anskey.length; subindex++) {\r\n                    let k = anskey[subindex].split(',');\r\n                    let txt = GRAPH.updateNumberline(mid, elem, p1, p2, k[0]);\r\n                    GRAPH.updateNumbelineAttr(elem, txt);\r\n                    p1 = p1 + 1 + (Math.abs(JS.select('#' + elem).getAttribute('data-xtickdistance')) / 10);\r\n                    GRAPH.checkAns(mid);\r\n                }\r\n            }\r\n        } else {\r\n            // create the point according to the condition if point will be draw or not\r\n            board.off('down').on('down', down);\r\n        }\r\n    }\r\n}\r\n\r\n// It is used with association that is discarded by  Pete sir\r\nGRAPH.updateNumberline = function (mid, elem, p1, p2, k) {\r\n    if (board.texts.length < JS.select('#' + elem).getAttribute('data-anskey').split('|').length) {\r\n        let text = board.create('text', [p1, p2, k], { 'cssClass': \"cursor-down\", 'fontSize': '20px', 'highlightCssClass': \"cursor-down\", 'display': 'html', 'snapSizeX': (Math.abs(JS.select('#' + elem).getAttribute('data-xtickdistance')) / 10), 'snapSizeY': 0.4, 'snapToGrid': true, 'anchorX': 'middle', 'anchorY': 'bottom' });\r\n        board.texts.push(text);\r\n        text.on('down', function () {\r\n            this.startPosition = this.X().toFixed(1) + ',' + this.Y() + ',' + this.htmlStr;\r\n        });\r\n        text.on('up', function () {\r\n            if (this.Y().toFixed(1) > 0.4) {\r\n                board.removeObject(this); board.texts.pop(this);\r\n                GRAPH.updateNumberline(mid, elem, parseFloat(this.X().toFixed(1)), 0.4, this.htmlStr);\r\n                this.upPosition = this.X().toFixed(1) + ',' + 0.4 + ',' + this.htmlStr;\r\n            } else if (this.Y().toFixed(1) < 0.4) {\r\n                board.removeObject(this); board.texts.pop(this);\r\n                GRAPH.updateNumberline(mid, elem, parseFloat(this.X().toFixed(1)), -4.4, this.htmlStr);\r\n                this.upPosition = this.X().toFixed(1) + ',' + -4.4 + ',' + this.htmlStr;\r\n            } else {\r\n                this.upPosition = this.X().toFixed(1) + ',' + this.Y().toFixed(1) + ',' + this.htmlStr;\r\n            }\r\n            GRAPH.updateNumbelineAttr(elem, this, true);\r\n            GRAPH.checkAns(mid);\r\n        });\r\n        text.on('over', function () {\r\n            if (!this.visProp.fixed) {\r\n                board.containerObj.style.cursor = 'move';\r\n                this.setAttribute({ 'cssClass': \"cursor-down-hover\", 'highlightCssClass': \"cursor-down-hover\" });\r\n            }\r\n        });\r\n        text.on('out', function () {\r\n            if (!this.visProp.fixed) {\r\n                board.containerObj.style.cursor = 'default';\r\n                this.setAttribute({ 'cssClass': \"cursor-down\", 'highlightCssClass': \"cursor-down\" });\r\n            }\r\n        });\r\n        return text;\r\n    }\r\n}\r\n\r\n// It is used with association that is discarded by  Pete sir\r\nGRAPH.updateNumbelineAttr = function (elem, txt, isUpdate) {\r\n    let userans = JS.select('#' + elem).getAttribute('data-userans');\r\n    if (typeof isUpdate == \"undefined\") {\r\n        userans = userans.split('|').filter(function (element) { return element != '' });\r\n        userans.push(txt.X().toFixed(1) + ',' + txt.Y() + ',' + txt.htmlStr);\r\n        JS.select('#' + elem).setAttribute('data-userans', userans.join('|'));\r\n    } else {\r\n        userans = JS.select('#' + elem).getAttribute('data-userans').replace(txt.startPosition, txt.upPosition);\r\n        JS.select('#' + elem).setAttribute('data-userans', userans);\r\n    }\r\n}\r\n\r\n// used to draw the graph on the board and according to defined events and also fill the point and sroke color of line or curve\r\nGRAPH.updateAndDrawPreview = function (mid, elem, point, isUpdate) {\r\n    if (JS.select('#' + elem).classList.contains('plot')) {\r\n        point.setAttribute({ 'fillcolor': '#52A8EC', 'strokecolor': '#52A8EC' });\r\n        if (JS.select('[data-value=\"' + isUpdate + '\"]').nodeName && JS.select('[data-value=\"' + isUpdate + '\"]').getAttribute('rel') && JS.select('[data-value=\"' + isUpdate + '\"]').getAttribute('rel').indexOf('segment') == 0) {\r\n            // creates the instance of point\r\n            point.board.prevPoint = point.board.create('point', [point.Xjc, point.Y()], { 'name': \"\", 'fillcolor': '#52A8EC', 'strokecolor': '#52A8EC', 'fixed': true });\r\n            // creates the instance of line\r\n            point.for = point.board.create('line', [point.board.prevPoint, point], { 'straightFirst': false, 'straightLast': false, 'firstArrow': false, 'lastArrow': false, 'strokeWidth': \"2\", 'fillcolor': '#52A8EC', 'strokecolor': '#52A8EC' });\r\n            // assign the value of 'isUpdate' in the name for point instance\t\r\n            point.for.name = isUpdate;\r\n            switch (isUpdate) {\r\n                // sets the stroke and fill color of the point\r\n                case \"SLH\":\r\n                    point.setAttribute({ 'fillcolor': '#fff', 'strokecolor': '#52A8EC' });\r\n                    break;\r\n                case \"SRH\":\r\n                    point.board.prevPoint.setAttribute({ 'fillcolor': '#fff', 'strokecolor': '#52A8EC' });\r\n                    break;\r\n                case \"SBH\":\r\n                    point.setAttribute({ 'fillcolor': '#fff', 'strokecolor': '#52A8EC' });\r\n                    point.board.prevPoint.setAttribute({ 'fillcolor': '#fff', 'strokecolor': '#52A8EC' });\r\n                    break;\r\n            }\r\n        } else if ( JS.select('[data-value=\"' + isUpdate + '\"]').nodeName && JS.select('[data-value=\"' + isUpdate + '\"]').getAttribute('rel') && JS.select('[data-value=\"' + isUpdate + '\"]').getAttribute('rel').indexOf('ray') == 0 ) {\r\n            // creates the instance of point\r\n            switch (isUpdate) {\r\n                case \"RL\":\r\n                    point.board.prevPoint = point.board.create('point', [-Math.abs(point.board.xmax), point.Y()], { 'visible': false });\r\n                    break;\r\n                case \"RR\":\r\n                    point.board.prevPoint = point.board.create('point', [Math.abs(point.board.xmax), point.Y()], { 'visible': false });\r\n                    break;\r\n                case \"RRH\":\r\n                    point.setAttribute({ 'fillcolor': '#fff', 'strokecolor': '#52A8EC' });\r\n                    point.board.prevPoint = point.board.create('point', [-Math.abs(point.board.xmax), point.Y()], { 'visible': false });\r\n                    break;\r\n                case \"RLH\":\r\n                    point.setAttribute({ 'fillcolor': '#fff' });\r\n                    point.board.prevPoint = point.board.create('point', [Math.abs(point.board.xmax), point.Y()], { 'visible': false });\r\n                    break;\r\n            }\r\n            // creates the instance of line\r\n            point.for = point.board.create('line', [point.board.prevPoint, point], { 'straightFirst': true, 'straightLast': false, 'firstArrow': true, 'lastArrow': false, 'strokeWidth': \"2\", 'fillcolor': '#52A8EC', 'strokecolor': '#52A8EC' });\r\n            // assign the name in point reference to value of variable 'isUpdate'\r\n            point.for.name = isUpdate;\r\n        }\r\n        board.on('move', function () {\r\n            if (point.Yjc != null) {\r\n                // sets the initial point where mouse moved on the graph board\r\n                point.moveTo([point.X(), point.Yjc]);\r\n            }\r\n        });\r\n        point.on('over', function () {\r\n            if (!this.visProp.fixed) {\r\n                // change the style of the cursor to 'e-resize'\r\n                board.containerObj.style.cursor = 'e-resize';\r\n            }\r\n        });\r\n        point.on('out', function () {\r\n            if (!this.visProp.fixed) {\r\n                // change the style of the cursor to 'default'\r\n                board.containerObj.style.cursor = 'default';\r\n            }\r\n        });\r\n    } else {\r\n        GRAPH.sinfo = false;\r\n        point.board.points.push(point);\r\n        if (point.board.prevPoint == null) {\r\n            point.board.prevPoint = point;\r\n        } else {\r\n            let i, s;\r\n            if (JS.select('#' + elem).classList.contains('line')) {\r\n                // assign the value to is_correct variable returned by 'GRAPH.getEquationPreview' method\r\n                is_correct = GRAPH.getEquationPreview(elem, point.X(), point.Y(), point.board.prevPoint.X(), point.board.prevPoint.Y());\r\n                // creates the instance of line\r\n                point.for = point.board.create('line', [point, point.board.prevPoint], { 'straightFirst': true, 'straightLast': true, 'firstArrow': true, 'lastArrow': true, 'strokeWidth': \"2\" });\r\n                GRAPH.sinfo = (is_correct) ? true : false;\r\n            } else if (JS.select('#' + elem).classList.contains('circle')) {\r\n                // creates the instance of circle\r\n                point.for = point.board.create('circle', [point.board.prevPoint, point], { 'straightFirst': true, 'straightLast': true, 'firstArrow': true, 'lastArrow': true, 'strokeWidth': \"2\" });\r\n                // instance of center points of the circle\r\n                point.for.center.for = point.for;\r\n            } else if (JS.select('#' + elem).classList.contains('segment')) {\r\n                // creates the instance of line\r\n                point.for = point.board.create('line', [point, point.board.prevPoint], { 'straightFirst': false, 'straightLast': false, 'firstArrow': false, 'lastArrow': false, 'strokeWidth': \"2\" });\r\n            } else if (JS.select('#' + elem).classList.contains('vector')) {\r\n                /*\r\n                    * creates instance of the line.\r\n                    * straightFirst: If true, line stretches infinitely in direction of its first point.\r\n                    * straightLast: If true, line stretches infinitely in direction of its last point.\r\n                    * strokeWidth: Denotes width of the line.\r\n                    * firstArrow: Line has an arrow head at the position of its first point or the corresponding intersection with the canvas border.\r\n                    * lastArrow: Line has an arrow head at the position of its second point or the corresponding intersection with the canvas border.\r\n                */\r\n                point.for = point.board.create('line', [point, point.board.prevPoint], { 'straightFirst': false, 'straightLast': false, 'firstArrow': true, 'lastArrow': false, 'strokeWidth': \"2\" });\r\n            } else if (JS.select('#' + elem).classList.contains('ray')) {\r\n                // same as defined in above for vector class condition\r\n                point.for = point.board.create('line', [point, point.board.prevPoint], { 'straightFirst': true, 'straightLast': false, 'firstArrow': true, 'lastArrow': false, 'strokeWidth': \"2\" });\r\n            } else if (JS.select('#' + elem).classList.contains('parabola')) {\r\n                point.setAttribute({ 'fixed': true }); point.board.prevPoint.setAttribute({ 'fixed': true });\r\n                let eq = JS.select('#' + elem).getAttribute('data-equation').split('=');\r\n                // assign the parabola equation to variable fx returned by 'GRAPH.getEquationPreview' method\r\n                let fx = GRAPH.getEquationPreview(elem, point.X(), point.Y(), point.board.prevPoint.X(), point.board.prevPoint.Y());\r\n                /* \r\n                    * Parses a JessieCode snippet, e.g. \"3+4\", and wraps it into a function, if desired. \r\n                    * First argument is a small snippet of JessieCode. Must not be an assignment.\r\n                    * If second argument is true, the code is wrapped in a function.\r\n                    * Third argument is the name of the parameter(s).\r\n                    * Fourth variable is geonext compatibility mode. \r\n                */\r\n                let f = board.jc.snippet(fx, true, 'x', true);\r\n                // provides a constructor for functiongraph, which is just a wrapper for element Curve with JXG.Curve#X() set to x\r\n                point.for = point.board.create('functiongraph', [f]);\r\n                GRAPH.sinfo = (fx == eq[1]) ? true : false;\r\n                // sets the initial and final points instance\r\n                point.for.point1 = point.board.prevPoint; point.for.point2 = point;\r\n                point.board.prevPoint = null;\r\n            } else if (JS.select('#' + elem).classList.contains('polygon')) {\r\n                if (typeof isUpdate == \"undefined\") {\r\n                    // creates the instance of the polygon\r\n                    point.for = point.board.create('polygon', [point.board.prevPoint, point]);\r\n                    // defines the initial point instance\r\n                    point.board.prevPoint = point;\r\n                } else {\r\n                    if (isUpdate.length == point.board.points.length) {\r\n                        // creates the instance of the polygon\r\n                        point.for = point.board.create('polygon', point.board.points, { 'boadres': { 'strokecolor': \"darkgray\", 'strokeWidth': 2 } });\r\n                        point.for.parents.for = point.for; point.board.prevPoint = null; point.board.points = [];\r\n                    }\r\n                }\r\n            } else if (JS.select('#' + elem).classList.contains('sine')) {\r\n                // assign the value to is_correct variable returned by 'GRAPH.getEquationPreview' method\r\n                is_correct = GRAPH.getEquationPreview(elem, point.X(), point.Y(), point.board.prevPoint.X(), point.board.prevPoint.Y());\r\n                i = point.board.prevPoint;\r\n                s = point;\r\n                // creates the instance of the curve\r\n                point.for = point.board.create('curve', [function (e) {\r\n                    return e;\r\n                }, function (e) {\r\n                    let t = i.coords.usrCoords, n = s.coords.usrCoords,\r\n                        r = t[1], o = t[2], u = n[1], a = n[2], f = a - o, l = 1 / (4 * (u - r));\r\n                    return f * Math.sin(2 * Math.PI * l * (e - r)) + o;\r\n                }]);\r\n                // defines the instance of initial and last point \r\n                point.for.point1 = point.board.prevPoint; point.for.point2 = point;\r\n                GRAPH.sinfo = (is_correct) ? true : false;\r\n            } else if (JS.select('#' + elem).classList.contains('cosine')) {\r\n                // assign the value to is_correct variable returned by 'GRAPH.getEquationPreview' method\r\n                is_correct = GRAPH.getEquationPreview(elem, point.X(), point.Y(), point.board.prevPoint.X(), point.board.prevPoint.Y());\r\n                i = point.board.prevPoint;\r\n                s = point;\r\n                // creates the instance of the curve\r\n                point.for = point.board.create('curve', [function (e) {\r\n                    return e;\r\n                }, function (e) {\r\n                    let t = i.coords.usrCoords, n = s.coords.usrCoords,\r\n                        r = t[1], o = t[2], u = n[1], a = n[2], f = (a - o), l = 1 / (4 * (r - u));\r\n                    return f * Math.cos(2 * Math.PI * l * (e - u)) + o;\r\n                }]);\r\n                point.for.point1 = point.board.prevPoint; point.for.point2 = point;\r\n                GRAPH.sinfo = (is_correct) ? true : false;\r\n            }\r\n            if (!JS.select('#' + elem).classList.contains('polygon')) {\r\n                // assign the initial point instance to null\r\n                point.board.prevPoint = null;\r\n            }\r\n        }\r\n    }\r\n    point.on('down', function () {\r\n        if (JS.select('#' + elem).classList.contains('plot')) {\r\n            // assign the value of y co-ordinate\r\n            this.Yjc = this.Y();\r\n            if (typeof this.for == \"undefined\") {\r\n                // contains the x-axis co-ordinate and name with ',' separated, not aware of 'this.name'\r\n                this.startPosition = this.X() + ',' + this.name;\r\n            } else {\r\n                // contains the x-axis co-ordinates of the points and name with ',' separated, not aware of 'this.name'\r\n                this.startPosition = this.for.point2.X() + ',' + this.for.point1.X() + ',' + this.for.name;\r\n            }\r\n        } else {\r\n            this.startPosition = this.X() + \",\" + this.Y();\r\n            if (JS.select('#' + elem).classList.contains('polygon') && point.board.points.length > 0) {\r\n                if (this.X() + \",\" + this.Y() == point.board.points[0].X() + \",\" + point.board.points[0].Y()) {\r\n                    // creates the instance of the polygon\r\n                    point.for = point.board.create('polygon', point.board.points, { 'boadres': { 'strokecolor': \"darkgray\", 'strokeWidth': 2 } });\r\n                    point.for.parents.for = point.for;\r\n                    // sets the initial point instance of the graph to null\r\n                    point.board.prevPoint = null;\r\n                    point.board.points = [];\r\n                }\r\n            }\r\n        }\r\n        if (typeof this.for != \"undefined\" && this.for.elType == \"circle\") {\r\n            // assign the value of radius to 'this.startPosition' after mousedown on the points of the circle\r\n            this.startPosition = Math.round(this.for.Radius());\r\n        }\r\n    });\r\n    point.on('up', function () {\r\n        let remove_active = false;\r\n        if (!JS.select('.delElem').children[0].classList.contains('active')) {\r\n            // update the attributes of the graph board container and draw the graph accordingly\r\n            GRAPH.updateAttrsPreview(elem, this, true);\r\n            // returns Correct or Incorrect after matching the answer\r\n            GRAPH.checkAns(mid);\r\n        } else {\r\n            /* removes the plotted point when mouse up on it and according to this also removes graph if the children of the element having id deleteElm has active */\r\n            if (JS.select('#' + elem).classList.contains('point')) {\r\n                //removes the point from board on which mouse up\r\n                board.removeObject(this);\r\n                // it is co-ordinate of the point on which mouse up\r\n                this.position = this.startPosition;\r\n                remove_active = true;\r\n            } else if (JS.select('#' + elem).classList.contains('circle')) {\r\n                //removes the reference of the circle\r\n                board.removeObject(this);\r\n                // removes the center of the circle\r\n                board.removeObject(this.for.center);\r\n                /* removes second point which lies on circumference of the circle for decide the radius of circle */\r\n                board.removeObject(this.for.point2);\r\n                GRAPH.modeOn();  // @pradeep : added for delete complete.\r\n                /* contains center and radius of the circle which is deleted */\r\n                this.position = this.for.center.X() + \",\" + this.for.center.Y() + \"/\" + Math.round(this.for.Radius());\r\n                remove_active = true;\r\n            } else if (JS.select('#' + elem).classList.contains('polygon') && typeof this.for != \"undefined\") {\r\n                let vertices = [];\r\n                if (typeof this.for.parents.for != \"undefined\") {\r\n                    for (let i = 0; i < point.for.vertices.length; i++) {\r\n                        // removes the vertics of the polygon with specified index\r\n                        point.board.removeObject(this.for.parents.for.vertices[i]);\r\n                        // push the co-ordinates of the vertics at specified index in vertices array\r\n                        vertices.push(this.for.parents.for.vertices[i].X() + ',' + this.for.parents.for.vertices[i].Y());\r\n                    }\r\n                    // removes the polygon reference\r\n                    point.board.removeObject(this.for.parents.for);\r\n                    // removes last index value from vertices array\r\n                    vertices.pop(vertices[vertices.length - 1]);\r\n                    // assign the values of vertices array after joining it by '|' into 'this.position' \r\n                    this.position = vertices.join('|');\r\n                    remove_active = true;\r\n                }\r\n            } else {\r\n                if (typeof this.for != \"undefined\") {\r\n                    // removes the point reference from graph board\r\n                    board.removeObject(this.for);\r\n                    // removes the first point from graph board\r\n                    board.removeObject(this.for.point1);\r\n                    // removes the second point from graph board\r\n                    board.removeObject(this.for.point2);\r\n                    // sets the position key value for manage the anskey\r\n                    this.position = this.for.point1.X() + ',' + this.for.point1.Y() + '|' + this.for.point2.X() + ',' + this.for.point2.Y();\r\n                    remove_active = true;\r\n                } else {\r\n                    if (JS.select('#' + elem).classList.contains('parabola')) {\r\n                        JS && JS.showmsg(l.curve_start_point, 3000);\r\n                    }\r\n                }\r\n            }\r\n\r\n            /* for warning in parabola when clicked other than last point of the curve to delete it */\r\n            if (JS.select('#' + elem).classList.contains('parabola')) {\r\n                if (typeof this.for != \"undefined\") {\r\n                    /* removes the value from data-userans attribute of graph board container and also removes the graph according to remove this value */\r\n                    GRAPH.updateDeleteAttrs(elem, this.position);\r\n                    // returns Correct or Incorrect after matching the answer\r\n                    GRAPH.checkAns(mid);\r\n                    // removes the active class from delete button inside Preview container\r\n                    JS.select('.delElem').children[0].classList.remove('active');\r\n                } else {\r\n                    console.warn({ msg: l.warning_this_for });\r\n                }\r\n            } else {\r\n                /* removes the value from data-userans attribute of graph board container and also removes the graph according to remove this value */\r\n                GRAPH.updateDeleteAttrs(elem, this.position);\r\n                // returns Correct or Incorrect after matching the answer\r\n                GRAPH.checkAns(mid);\r\n            }\r\n\r\n            if (remove_active) {\r\n                let remove_focus = setTimeout(function (){\r\n                    JS.selectAll('#mathmain #delButton.active', 'removeClass','active');\r\n                    clearTimeout(remove_focus);\r\n                }, 100)\r\n            }\r\n        }\r\n    });\r\n    point.on('over', function () {\r\n        /* if delete button on preview container has active classs then on hover it, it shows the text 'Delete',hides the box which contains the co-ordinate of that point on which mouseover and sets its stroke and fill color to 'black' */\r\n        if (!this.visProp.fixed && JS.select('.delElem').children[0].classList.contains('active')) {\r\n            if (JS.select('#' + elem).classList.contains('point')) {\r\n                this.setAttribute({ 'name': 'Delete', 'showInfobox': false, 'fillcolor': '#000', 'strokecolor': '#000' });\r\n            } else if (JS.select('#' + elem).classList.contains('circle') && typeof this.for != \"undefined\") {\r\n                this.for.center.setAttribute({ 'name': 'Delete', 'showInfobox': false, 'fillcolor': '#000', 'strokecolor': '#000' });\r\n                this.for.point2.setAttribute({ 'name': 'Delete', 'showInfobox': false, 'fillcolor': '#000', 'strokecolor': '#000' });\r\n            } else if (JS.select('#' + elem).classList.contains('polygon') && typeof this.for != \"undefined\") {\r\n                if (typeof this.for.parents.for != \"undefined\") {\r\n                    this.setAttribute({ 'name': 'Delete', 'showInfobox': false, 'fillcolor': '#000', 'strokecolor': '#000' });\r\n                }\r\n            } else if (JS.select('#' + elem).classList.contains('sine') || JS.select('#' + elem).classList.contains('cosine')) {\r\n                if (typeof this.for != \"undefined\") {\r\n                    this.for.point2.setAttribute({ 'name': 'Delete', 'showInfobox': false, 'fillcolor': '#000', 'strokecolor': '#000' });\r\n                }\r\n            } else {\r\n                if (typeof this.for != \"undefined\") {\r\n                    this.for.point1.setAttribute({ 'name': 'Delete', 'showInfobox': false, 'fillcolor': '#000', 'strokecolor': '#000' });\r\n                }\r\n            }\r\n        }\r\n    });\r\n    point.on('out', function () {\r\n        /* if delete button on preview container has active classs then mouseout on it, it sets the text blank, allow to show the box which contains the co-ordinate of that point on which mouseout and sets its stroke and fill color to 'red' */\r\n        if (!this.visProp.fixed && JS.select('.delElem').children[0].classList.contains('active')) {\r\n            if (JS.select('#' + elem).classList.contains('point')) {\r\n                this.setAttribute({ 'name': '', 'showInfobox': true, 'fillcolor': '#ff0000', 'strokecolor': '#ff0000' });\r\n            } else if (JS.select('#' + elem).classList.contains('circle') && typeof this.for != \"undefined\") {\r\n                this.for.center.setAttribute({ 'name': '', 'showInfobox': true, 'fillcolor': '#ff0000', 'strokecolor': '#ff0000' });\r\n                this.for.point2.setAttribute({ 'name': '', 'showInfobox': true, 'fillcolor': '#ff0000', 'strokecolor': '#ff0000' });\r\n            } else if (JS.select('#' + elem).classList.contains('polygon') && typeof this.for != \"undefined\") {\r\n                if (typeof this.for.parents.for != \"undefined\") {\r\n                    this.setAttribute({ 'name': '', 'showInfobox': true, 'fillcolor': '#ff0000', 'strokecolor': '#ff0000' });\r\n                }\r\n            } else if (JS.select('#' + elem).classList.contains('sine') || JS.select('#' + elem).classList.contains('cosine')) {\r\n                if (typeof this.for != \"undefined\") {\r\n                    this.for.point2.setAttribute({ 'name': '', 'showInfobox': true, 'fillcolor': '#ff0000', 'strokecolor': '#ff0000' });\r\n                }\r\n            } else {\r\n                if (typeof this.for != \"undefined\") {\r\n                    this.for.point1.setAttribute({ 'name': '', 'showInfobox': true, 'fillcolor': '#ff0000', 'strokecolor': '#ff0000' });\r\n                }\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\n// returns the equation of parabola if type is parabola otherwise returns true or false\r\nGRAPH.getEquationPreview = function (elem, pointx, pointy, prevx, prevy) {\r\n    // splite the value of data-equation attribute with '='\r\n    let eq = JS.select('#' + elem).getAttribute('data-equation').split('='), a;\r\n    let _this = JS.select('#' + elem).getAttribute('type'), str;\r\n    let equation = '';\r\n    let is_correct;\r\n    switch (_this) {\r\n        case \"parabola\":\r\n            {\r\n\r\n                if (!eq[0].includes('x')) {\r\n                    // find the value of 'a' after calculation\r\n                    a = Math.round((0,eval)((pointy - prevy) / (Math.pow((pointx - prevx), 2))) * 10) / 10;\r\n                    // equation of parabola if region covering the y-axis\r\n                    equation = \"a*(x-h)^2+k\";\r\n                } else {\r\n                    // equation of parabola if region covering the x-axis\r\n                    equation = \"a*(y-h)^2+k\";\r\n                    // find the value of 'a' after calculation\t\r\n                    a = (0,eval)(pointx - prevy) / (Math.pow((pointy - prevx), 2));\r\n                }\r\n                // equation of parabola after substituting the value of 'a', 'h', 'k' in it's general equation\r\n                let eqn = equation.replace('a', a).replace('h', prevx).replace('k', prevy);\r\n                // changes the sign of operator according to math formula as (- * - = +), (+ * - = -)\r\n                //returns the equation of parabola after substituting the value of 'a', 'h', 'k' in it's general equation\r\n                eqn = eqn.replace(/\\\\-\\\\-/g, '+').replace(/\\\\+\\\\-/g, '-');\r\n                return eqn;\r\n            }\r\n        case \"sine\":\r\n        case \"cosine\":\r\n            {\r\n                if (JS.select('#' + elem).classList.contains('sine')) {\r\n                    str = eq[1].replace('sin', 'Math.sin').replace('x', '(x/180)*Math.PI'); /* converts 'sin' into 'Math.sin' and 'x' which is in degree converts it into radian */\r\n                } else if (JS.select('#' + elem).classList.contains('cosine')) {\r\n                    str = eq[1].replace('cos', 'Math.cos').replace('x', '(x/180)*Math.PI'); /* converts 'cos' into 'Math.cos' and 'x' which is in degree converts it into radian */\r\n                }\r\n                // assign the value 1 to 'a' if the value of 'eq[1].charAt(0)' represents javascript number otherwise returns the value of 'eq[1].charAt(0)' \r\n                a = (!(!isNaN(parseFloat(eq[1].charAt(0))) && isFinite(eq[1].charAt(0)))) ? 1 : eq[1].charAt(0);\r\n                // assign the value of is_correct variable to true or false after calculating the given condition\r\n                is_correct = (Math.round((0,eval)(str.replace('x', pointx)) * 100 / 100) == pointy &&\r\n                    Math.round((0,eval)(str.replace('x', prevx)) * 100 / 100) == prevy &&\r\n                    a == Math.abs(prevy)) ? true : false;\r\n                // returns the true of false value\r\n                return is_correct;\r\n            }\r\n        case \"line\":\r\n            {\r\n                // assign the value of is_correct variable to true or false after calculating the given condition\r\n                is_correct = (Math.round((0,eval)(eq[1].replace('x', pointx))) == Math.round((0,eval)(eq[0].replace('y', pointy))) && Math.round((0,eval)(eq[1].replace('x', prevx))) == Math.round((0,eval)(eq[0].replace('y', prevy)))) ? true : false;\r\n                //returns the variable is_correct\r\n                return is_correct;\r\n            }\r\n    }\r\n}\r\n\r\n// updates the data-userans attribute value of graph board container after removing the point on which clicked for delete\r\nGRAPH.updateDeleteAttrs = function (elem, point) {\r\n    let ans = JS.select('#' + elem).getAttribute('data-userans').split('|'), val = [];\r\n    switch (JS.select('#' + elem).getAttribute('type')) {\r\n        case \"point\":\r\n        case \"circle\":\r\n            for (let index = 0; index < ans.length; index++) {\r\n                if (ans[index] != point) {\r\n                    val.push(ans[index]);\r\n                }\r\n            }\r\n            break;\r\n        case \"segment\":\r\n        case \"ray\":\r\n        case \"vector\":\r\n        case \"sine\":\r\n        case \"cosine\":\r\n        case \"line\":\r\n        case \"parabola\":\r\n            if (point != null) {\r\n                let sub_point = point.split('|');\r\n                val = ans.filter( function(element) { return !this.has(element) }, new Set(sub_point) );\r\n            }\r\n            break;\r\n    }\r\n    /* sets the value of val array to 'data-userans' attribute of graph board container after joining it into string with '|' separator */\r\n    JS.select('#' + elem).setAttribute('data-userans', val.join('|'));\r\n}\r\n\r\n// updates the 'data-userans' atrribute of the graph board container\r\nGRAPH.updateAttrsPreview = function (elem, point, isUpdate) {\r\n    // contains the value of 'data-userans' attribute of graph board container\r\n    let userans = JS.select('#' + elem).getAttribute('data-userans');\r\n    // contains the value of 'type' attribute of graph board container\r\n    let _this = JS.select('#' + elem).getAttribute('type');\r\n    if (typeof point.for != \"undefined\" && point.for.elType == \"circle\") {\r\n        let center = point.for.center, cp = center.X() + \",\" + center.Y();\r\n        if (typeof point.startPosition != \"undefined\") {\r\n            cp += '/' + point.startPosition;\r\n        }\r\n        // stores the value for set it to 'data-userans' attribute of graph board container\r\n        userans = userans.replace(cp, center.X() + \",\" + center.Y() + \"/\" + Math.round(point.for.Radius()));\r\n        // assign the value of variable 'userans' to 'data-userans' attribute of graph board container\r\n        JS.select('#' + elem).setAttribute('data-userans', userans);\r\n    } else if (isUpdate) {\r\n        if (JS.select('#' + elem).classList.contains('plot')) {\r\n            if (typeof point.for == \"undefined\") {\r\n                userans = JS.select('#' + elem).getAttribute('data-userans').replace(point.startPosition, point.X() + ',' + point.name);\r\n            } else {\r\n                userans = JS.select('#' + elem).getAttribute('data-userans').replace(point.startPosition, point.for.point2.X() + ',' + point.for.point1.X() + ',' + point.for.name);\r\n            }\r\n        } else {\r\n            // assign the value to variable 'userans' after replacing the value of 'point.startPosition' from 'data-userans' attribute of graph board container with the value of 'point.X()' and 'point.Y()' separated by comma\r\n            userans = JS.select('#' + elem).getAttribute('data-userans').replace(point.startPosition, point.X() + ',' + point.Y());\r\n        }\r\n        // assign the value of variable 'userans' to 'data-userans' attribute of graph board container\r\n        JS.select('#' + elem).setAttribute('data-userans', userans);\r\n        switch (_this) {\r\n            case \"line\":\r\n            case \"sine\":\r\n            case \"cosine\":\r\n                {\r\n                    let is_false = 0, prev = null;\r\n                    let user_ans = userans.split('|');\r\n                    for (let index = 0; index < user_ans.length; index++) {\r\n                        let key = user_ans[index].split(',');\r\n                        if (prev == null) {\r\n                            prev = key;\r\n                        } else {\r\n                            let is_correct = GRAPH.getEquationPreview(elem, key[0], key[1], prev[0], prev[1]);\r\n                            if (is_correct == false) {\r\n                                is_false++;\r\n                            }\r\n                            prev = null;\r\n                        }\r\n                    }\r\n                    GRAPH.sinfo = (is_false > 0) ? false : true;\r\n                }\r\n\r\n        }\r\n    }\r\n    if (typeof point.for == \"undefined\" || point.for.elType != \"circle\") {\r\n        userans = userans.split('|').filter((el) => {return el})\r\n        if (JS.select('#' + elem).classList.contains('plot')) {\r\n            if (typeof point.for == \"undefined\") {\r\n                userans.push(point.X() + ',' + point.name);\r\n            } else {\r\n                userans.push(point.for.point2.X() + ',' + point.for.point1.X() + ',' + point.for.name);\r\n            }\r\n        } else {\r\n            // push the x and y co-ordinate value in userans array sepaated with comma\r\n            userans.push(point.X() + ',' + point.Y());\r\n        }\r\n        if (typeof isUpdate == \"undefined\") {\r\n            // assign the value of array 'userans' to 'data-userans' attribute of graph board container after joining it with '|'\r\n            JS.select('#' + elem).setAttribute('data-userans', userans.join('|'));\r\n            if (JS.select('#' + elem).classList.contains('polygon')) {\r\n                if (point.board.points.length == 0) {\r\n                    JS.select('#' + elem).setAttribute('data-userans', GRAPH.getUnique(JS.select('#' + elem).getAttribute('data-userans').split('|')).join('|'));\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n// for getting the unique data\r\nGRAPH.getUnique = function(array) {\r\n    let unique = array.filter(function (value, index, self) {\r\n        return self.indexOf(value) === index;\r\n    });\r\n    return unique;\r\n}\r\n\r\n// returns Correct or Incorrect after matching the answer \r\nGRAPH.checkAns = function (mid) {\r\n    // used to create user answer xml\r\n    GRAPH.userAnsXML = \"<smans type='20'>\\n\";\r\n    GRAPH.result = true;\t// There is pass False value by Abhishek Kumar 9th april 2019\r\n    // finds the closest grap board container inside preview container\r\n\r\n    let elements = JS.selectAll('#mathmain > .drag-resize');\r\n    for (let index = 0; index < elements.length; index++) {\r\n        GRAPH.userAnsXML = GRAPH.checkChildAnswer(mid, elements[index]);\r\n    }\r\n    GRAPH.userAnsXML += \"</smans>\";\r\n    \r\n    if (window.inNative) {\r\n        // used for mobile team\r\n        window.getHeight();\r\n        window.postMessage(JSON.stringify({\r\n            userAnswers: GRAPH.userAnsXML,\r\n            inNativeIsCorrect: GRAPH.result\r\n        }), '*');\r\n    }\r\n\r\n    return {uXml: GRAPH.userAnsXML, ans: GRAPH.result};\r\n}\r\n\r\n// returns the user answer xml and defines the GRAPH.result value according to matching the answer that helps chackAns method to show the Correct or Incorrect on the basis of variable GRAPH.result\r\nGRAPH.checkChildAnswer = function (mid, pElem) {\r\n    let _this = JS.select(pElem).getAttribute('type'), ansKey, userKey, index_no;\r\n    switch (_this) {\r\n        case \"plot\":\r\n        case \"association\":\r\n        case \"point\":\r\n        case \"segment\":\r\n            {\r\n                // converts the value of data-anskey attribute of graph board container into array and sorts it then again converts it into string\r\n                ansKey = JS.select(pElem).getAttribute('data-anskey').split('|').sort().join('|');\r\n                // converts the value of data-userans attribute of graph board container into array and sorts it then again converts it into string\r\n                userKey = JS.select(pElem).getAttribute('data-userans').split('|').sort().join('|');\r\n                if (ansKey != userKey) {\r\n                    // assign the value false to variable GRAPH.result if value of ansKey and userKey is not same\r\n                    GRAPH.result = false;\r\n                }\r\n                break;\r\n            }\r\n        case \"circle\":\r\n        case \"vector\":\r\n        case \"ray\": {\r\n            if (JS.select(pElem).getAttribute(\"data-anskey\") != JS.select(pElem).getAttribute(\"data-userans\")) {\r\n                /* assign the value false to variable GRAPH.result if value of attributes data-anskey and data-userans are not same */\r\n                GRAPH.result = false;\r\n            }\r\n            break;\r\n        }\r\n        /* these all 2 values can be assign with fist case where the answer checking done for 'plot', point, segment and association */\r\n        case \"sine\":\r\n        case \"cosine\": {\r\n            // converts the value of data-anskey attribute of graph board container into array and sorts it then again converts it into string\r\n            ansKey = JS.select(pElem).getAttribute('data-anskey').split('|').sort().join('|');\r\n            // converts the value of data-userans attribute of graph board container into array and sorts it then again converts it into string\r\n            userKey = JS.select(pElem).getAttribute('data-userans').split('|').sort().join('|');\r\n            if (ansKey != userKey) {\r\n                // assign the value false to variable GRAPH.result if value of ansKey and userKey is not same\r\n                GRAPH.result = false;\r\n            }\r\n            break;\r\n        }\r\n        case \"parabola\": {\r\n            // converts the value of data-anskey attribute of graph board container into array and sorts it then again converts it into string\r\n            ansKey = JS.select(pElem).getAttribute('data-anskey').split('|').filter(function (element) { return element != '' });\r\n            // converts the value of data-userans attribute of graph board container into array and sorts it then again converts it into string\r\n            userKey = JS.select(pElem).getAttribute('data-userans').split('|').filter(function (element) { return element != '' });\r\n            if (ansKey.length == userKey.length) {\r\n                for (index_no = 0; index_no < userKey.length; index_no += 2) {\r\n                    let question_index_no = ansKey.indexOf(userKey[index_no]);\r\n                    if (question_index_no > -1) {\r\n                        // finding value of a using equation 'f(x) = a(x-h)^2 + k' by substituting the value of 'f(x)', 'h', 'k' and 'x' where 'h' is the x-axis co-ordinate of vertix, 'k' is the y-axis co-ordinate of vertix, 'f(x)' is the y-axis co-ordinate which lies on the curve of parabola other than vertix, 'x' is the x-axis co-ordinate which lies on the curve of parabola other than vertix\r\n                        let distancefromvertix_to_foci = (ansKey[question_index_no + 1].split(',')[1] - ansKey[question_index_no].split(',')[1]) / ((ansKey[question_index_no + 1].split(',')[0] - ansKey[question_index_no].split(',')[0]) * (ansKey[question_index_no + 1].split(',')[0] - ansKey[question_index_no].split(',')[0]));\r\n                        let distancefromvertix_to_foci_ansKey = (userKey[index_no + 1].split(',')[1] - userKey[index_no].split(',')[1]) / ((userKey[index_no + 1].split(',')[0] - userKey[index_no].split(',')[0]) * (userKey[index_no + 1].split(',')[0] - userKey[index_no].split(',')[0]));\r\n                        if (distancefromvertix_to_foci != distancefromvertix_to_foci_ansKey) {\r\n                            // assign the value false to variable GRAPH.result if value of ansKey and userKey is not same\r\n                            GRAPH.result = false;\r\n                        } else {\r\n                            GRAPH.result = true;\r\n                        }\r\n                    } else {\r\n                        // assign the value false to variable GRAPH.result if value of ansKey and userKey is not same\r\n                        GRAPH.result = false;\r\n                    }\r\n                }\r\n            } else {\r\n                // assign the value false to variable GRAPH.result if value of ansKey and userKey is not same\r\n                GRAPH.result = false;\r\n            }\r\n            break;\r\n        }\r\n        case \"line\": {\r\n            try {\r\n                // converts the value of data-anskey attribute of graph board container into array\r\n                ansKey = JS.select(pElem).getAttribute('data-anskey').split('|');\r\n                // converts the value of data-userans attribute of graph board container into array\r\n                userKey = JS.select(pElem).getAttribute('data-userans').split('|');\r\n                if (userKey.length == 0 || userKey.length == 1) {\r\n                    // assign the value false to variable GRAPH.result if value of ansKey.length or userKey.length is equals to zero means line is not draw either during question creation or during provide the answer\r\n                    GRAPH.result = false;\r\n                    break;\r\n                } else {\r\n                    let index_no = 0;\r\n                    let index_no1 = 0;\r\n                    let count_data = 0;\r\n                    let not_match = 0;\r\n                    while (index_no < ansKey.length) {\r\n                        count_data = 0;\r\n                        index_no1 = 0;\r\n                        while (index_no1 < userKey.length && userKey.length == ansKey.length) {\r\n                            let left1, left2, right1, right2;\r\n                            const x2minusx1 = parseFloat(ansKey[index_no+1].split(',')[0]) - parseFloat(ansKey[index_no].split(',')[0]);\r\n                            const y2minusy1 = parseFloat(ansKey[index_no+1].split(',')[1]) - parseFloat(ansKey[index_no].split(',')[1]);\r\n                            /* left1 is the left hand side value and right1 is the right hand side value after putting the values of user answer in standard line equation '(y-y1)(x2-x1) = (y2-y1)(x-x1)', where y and x are the values of first point's x and y value of line created at the time of question creation and x1, y1, x2, y2 are the points draw by user to create the line graph  */\r\n                            left1 = (parseFloat(userKey[index_no1].split(',')[1]) - parseFloat(ansKey[index_no].split(',')[1]))*x2minusx1;\r\n                            right1 = y2minusy1*(parseFloat(userKey[index_no1].split(',')[0]) - parseFloat(ansKey[index_no].split(',')[0]));\r\n                            /* left2 is the left hand side value and right2 is the right hand side value after putting the values of user answer in standard line equation '(y-y1)(x2-x1) = (y2-y1)(x-x1)', where y and x are the values of second point's x and y value of line created at the time of question creation and x1, y1, x2, y2 are the points draw by user to create the line graph  */\r\n                            left2 = (parseFloat(userKey[index_no1+1].split(',')[1]) - parseFloat(ansKey[index_no].split(',')[1]))*x2minusx1;\r\n                            right2 = y2minusy1*(parseFloat(userKey[index_no1+1].split(',')[0]) - parseFloat(ansKey[index_no].split(',')[0]));\r\n\r\n                            if ((parseFloat(left1) == parseFloat(right1)) && (parseFloat(left2) == parseFloat(right2))) {\r\n                                // assign the value to this variable will help to return the value of variable GRAPH.result\r\n                                count_data += 1;\r\n                                not_match = 0;\r\n                                break;\r\n                            } else {\r\n                                GRAPH.result = false;\r\n                                not_match = 1;\r\n                            }\r\n                            // increase the value 2 more in there previous value\r\n                            index_no1 += 2;\r\n                        }\r\n                        if (not_match == 1) {\r\n                            count_data = 0;\r\n                            break;\r\n                        }\r\n                        // increase the value 2 more in there previous value\r\n                        index_no += 2;\r\n                    }\r\n                    if (count_data == 0) {\r\n                        // assign the value false to variable GRAPH.result if value of count_data is equals to 0, means data not matched\r\n                        GRAPH.result = false;\r\n                    } else {\r\n                        // assign the value true to variable GRAPH.result if value of count_data is not equals to 0, means data matched\r\n                        GRAPH.result = true;\r\n                    }\r\n                }\r\n            } catch (e) {\r\n                console.warn(e);\r\n            }\r\n            break;\r\n        }\r\n        case \"polygon\":\r\n            {\r\n                /* converts the value of data-anskey attribute of graph board container into array and sorts it then removes the duplicate value then again converts it into string */\r\n                ansKey = GRAPH.getUnique(JS.select(pElem).getAttribute('data-anskey').split('|').sort()).join('|');\r\n                /* converts the value of data-userans attribute of graph board container into array and sorts it   then removes the duplicate value then again converts it into string */\r\n                userKey = GRAPH.getUnique(JS.select(pElem).getAttribute('data-userans').split('|').sort()).join('|');\r\n                if (ansKey != userKey) {\r\n                    // assign the value false to variable GRAPH.result if value of ansKey and userKey is not same\r\n                    GRAPH.result = false;\r\n                }\r\n                break;\r\n            }\r\n    }\r\n    // assign the value into GRAPH.userAnsXML with it's pre value and creates user answer xml\r\n    GRAPH.userAnsXML += \"<div id='\" + JS.select(pElem).getAttribute('id') + \"' userAns='\" + JS.select(pElem).getAttribute('data-userans') + \"'></div>\\n\";\r\n    // returns the user answer xml\r\n    return GRAPH.userAnsXML;\r\n}\r\n\r\n/* used to call the method 'showchildansdrag' for every graph and passed arguments are id of preview container, id of graph board container, andType have 2 values 'c' for correct answer and 'u' for user answer, review have 2 values '0' and '1' */\r\nGRAPH.showansdrag = function (mid, ansType, review) {\r\n    if (typeof review === \"undefined\") {\r\n        review = 0;\r\n    }\r\n    let elements = JS.selectAll('#mathmain > .drag-resize');\r\n\r\n    for (let index = 0; index < elements.length; index++) {\r\n        GRAPH.showchildansdrag(mid, elements[index], ansType, review);\r\n    }\r\n}\r\n\r\n/* used for show the stroke and fill color of point and graph according to the value of 'data-userans'  attribute of graph board container and argument 'review', Also update the graph board and draw the graph */\r\nGRAPH.showchildansdrag = function (mid, pElem, ansType, review) {\r\n    if (review == 1) {\r\n        // assign reference of the created board\r\n        board = GRAPH.initBoardPreview(mid, pElem);\r\n        // disabled the 'li' element and removes the class 'btn_active' and add the class 'btn_active_disabled' to it that exist inside the element have class 'footer_toolbox' in preview container\r\n        let footer_li = JS.find(mid, '.footer_toolbox li', 'all');\r\n        if (footer_li.length > 0) {\r\n            footer_li.forEach(function(element) {\r\n                element.disabled = true;\r\n                element.classList.add('btn_active_disabled');\r\n                element.classList.remove('btn_active');\r\n            })\r\n        }\r\n    }\r\n    // defines the name of graph\r\n    let _this = JS.select(pElem).getAttribute('type');\r\n    // defines the id of the graph board container\r\n    let elem = JS.select(pElem).getAttribute('id'), cans;\r\n    if (JS.select(pElem).getAttribute(\"data-anskey\") != '') {\r\n        // defines the array of correct answer points\r\n        cans = JS.select(pElem).getAttribute(\"data-anskey\").split('|');\r\n    }\r\n    // defines the array of user answer points\r\n    let uans = JS.select(pElem).getAttribute(\"data-userans\").split('|');\r\n    let is_point, k;\r\n    if (ansType == \"c\") {\r\n        if (JS.select('#' + elem).classList.contains('association')) {\r\n            /* it is discarded by Pete sir */\r\n            for (let index = 0; index < cans.length; index++) {\r\n                k = cans[index].split(',');\r\n                let text = GRAPH.updateNumberline(mid, elem, k[0], k[1], k[2]);\r\n                text.setAttribute({ 'cssClass': \"cursor-down-active\", 'highlightCssClass': \"cursor-down-active\", 'fixed': true });\r\n            }\r\n        } else if (JS.select('#' + elem).classList.contains('plot')) {\r\n            is_point = 1;\r\n            for (let index = 0; index < cans.length; index++) {\r\n                let point;\r\n                if (cans[index].indexOf(',') == -1) {\r\n                    // creates the instance of point\r\n                    point = board.create('point', [parseInt(cans[index]), is_point], { 'name': \"\", 'fixed': true });\r\n                    // update and draw the point on the graph board and according to point also draw the graph\r\n                    GRAPH.updateAndDrawPreview(mid, elem, point);\r\n                } else {\r\n                    k = cans[index].split(',');\r\n                    // creates the instance of point\r\n                    point = board.create('point', [parseInt(k[0]), is_point], { 'name': \"\", 'fixed': true });\r\n                    point.Xjc = parseInt(k[1]);\r\n                    // update and draw the point on the graph board and according to point also draw the graph\r\n                    GRAPH.updateAndDrawPreview(mid, elem, point, k[2]);\r\n                }\r\n                is_point++;\r\n            }\r\n        } else {\r\n            for (let index = 0; index < cans.length; index++) {\r\n                // creates the array of x and y coordinates of the point\r\n                k = cans[index].split(',');\r\n                // creates the instance of the point\r\n                let point = board.create('point', [parseInt(k[0]), parseInt(k[1])], { 'name': \"\", 'fixed': true, 'strokeColor': \"#0000FF\", 'fillColor': \"#0000FF\" });\r\n                if (! JS.select(pElem).classList.contains('circle')) {\r\n                    // update and draw the graph on graph board according to their type\r\n                    GRAPH.updateAndDrawPreview(mid, elem, point, cans);\r\n                } else {\r\n                    // draw the circle on preview graph board\r\n                    GRAPH.drawCirclePreview(mid, elem, cans[index]);\r\n                }\r\n            }\r\n        }\r\n        // sets the border color of preview container to #0000ff\r\n        JS.setCss(mid, {\r\n            border: \"1px solid #0000ff\"\r\n        });\r\n    } else if (ansType == \"u\") {\r\n        let is_false = 0, is_correctln = null, is_flag = false;\r\n        is_point = 1;\r\n        if (!JS.select('#' + elem).classList.contains('association')) {\r\n            for (let index = 0; index < uans.length; index++) {\r\n                let val = uans[index];\r\n                if (JS.select('#' + elem).classList.contains('plot')) {\r\n                    if (JS.select(pElem).getAttribute(\"data-userans\") != '') {\r\n                        if (val.indexOf(',') == -1) {\r\n                            // creates the instance of point\r\n                            point = board.create('point', [parseInt(val), is_point], { 'name': \"\" });\r\n                            // update and draw the point on the board\r\n                            GRAPH.updateAndDrawPreview(mid, elem, point);\r\n                        } else {\r\n                            // array of x and y coordinates\r\n                            k = val.split(',');\r\n                            // creates the instance of point\r\n                            point = board.create('point', [parseInt(k[0]), is_point], { 'name': \"\" });\r\n                            // not clear what is this\r\n                            point.Xjc = parseInt(k[1]);\r\n                            // update and draw the point on the board\r\n                            GRAPH.updateAndDrawPreview(mid, elem, point, k[2]);\r\n                        }\r\n                        is_point++;\r\n                    }\r\n                } else {\r\n                    // array of x and y coordinates\r\n                    k = val.split(',');\r\n                    // creates the instance of point\r\n                    point = board.create('point', [parseInt(k[0]), parseInt(k[1])], { 'name': \"\" });\r\n                    if (JS.select(pElem).getAttribute(\"data-userans\") != '') {\r\n                        if (! JS.select(pElem).classList.contains('circle')) {\r\n                            // update and draw the point on the board\r\n                            GRAPH.updateAndDrawPreview(mid, elem, point, uans);\r\n                        } else {\r\n                            // draw the circle on the board\r\n                            GRAPH.drawCirclePreview(mid, elem, val);\r\n                        }\r\n                    }\r\n                }\r\n                if (typeof review != \"undefined\" && review == 1 && JS.select(pElem).getAttribute(\"data-userans\") != '') {\r\n                    point.setAttribute({ 'fixed': true });\r\n                    switch (_this) {\r\n                        case \"point\":\r\n                            {\r\n                                if ( cans.includes(val) ) {\r\n                                    /* if any value of uans array exist in cans array then sets the fill and stroke color of that point to #00FF00 */\r\n                                    point.setAttribute({ 'strokeColor': \"#00FF00\", 'fillColor': \"#00FF00\" });\r\n                                } else {\r\n                                    /* if any value of uans array does not exist in cans array then sets the fill and stroke color of that point to #FF0000 */\r\n                                    point.setAttribute({ 'strokeColor': \"#FF0000\", 'fillColor': \"#FF0000\" });\r\n                                    // iincrease the value of is_false variable\r\n                                    is_false++;\r\n                                }\r\n                                break;\r\n                            }\r\n                        case \"circle\":\r\n                            {\r\n                                if (typeof point.for != \"undefined\") {\r\n                                    /* assign the value of is_flag variable to 'true' if the value of uans at perticular index exist in cans array otherwise false */\r\n                                    is_flag = (cans.includes(val)) ? true : false;\r\n                                    /* calls GRAPH.drawelem for value of is_false after setting the stroke and color of the point */\r\n                                    is_false = GRAPH.drawelem(elem, is_flag, is_false);\r\n                                }\r\n                                break;\r\n                            }\r\n                        case \"plot\":\r\n                            {\r\n                                /* assign the value of is_flag variable to 'true' if the value of uans at perticular index exist in cans array otherwise false */\r\n                                is_flag = (cans.includes(val)) ? true : false;\r\n                                /* calls GRAPH.drawelem for value of is_false after setting the stroke and color of the point */\r\n                                is_false = GRAPH.drawelem(elem, is_flag, is_false);\r\n                                break;\r\n                            }\r\n                        case \"line\":\r\n                        case \"parabola\":\r\n                        case \"sine\":\r\n                        case \"cosine\":\r\n                            {\r\n                                if (typeof point.for == \"undefined\") {\r\n                                    // defines the initial point of the graph\r\n                                    prevPoint = point.board.prevPoint;\r\n                                } else {\r\n                                    /* calls GRAPH.drawelem for value of is_false after setting the stroke and color of the point */\r\n                                    is_false = GRAPH.drawelem(elem, GRAPH.result, is_false);\r\n                                }\r\n                                break;\r\n                            }\r\n                        case \"segment\":\r\n                        case \"vector\":\r\n                        case \"ray\":\r\n                            {\r\n                                let is_correct;\r\n                                if (JS.select(pElem).classList.contains('segment') || JS.select(pElem).classList.contains('polygon')) {\r\n                                    /* assign the value of is_correct variable to 'true' if the value of uans at perticular index exist in cans array otherwise false */\r\n                                    is_correct = (cans.includes(val)) ? true : false;\r\n                                }\r\n                                if (JS.select(pElem).classList.contains('ray') || JS.select(pElem).classList.contains('vector')) {\r\n                                    /* assign the value of is_correct variable to 'true' if the index of any value in uans array is same for index of that perticular value in cans array otherwise false */\r\n                                    is_correct = (cans.indexOf(val) == uans.indexOf(val)) ? true : false;\r\n                                }\r\n                                if (typeof point.for == \"undefined\") {\r\n                                    // reference of initial point on the board\r\n                                    prevPoint = point.board.prevPoint;\r\n                                    is_correctln = is_correct;\r\n                                } else {\r\n                                    // assign the value of is_flag variable according to the value of 'is_correctln' and 'is_correct' variables\r\n                                    is_flag = (is_correctln && is_correct) ? true : false;\r\n                                    /* calls GRAPH.drawelem for value of is_false after setting the stroke and color of the point */\r\n                                    is_false = GRAPH.drawelem(elem, is_flag, is_false);\r\n                                }\r\n                                break;\r\n                            }\r\n                        case \"polygon\":\r\n                            {   \r\n                                let shallow_cans = [...cans];\r\n                                let shallow_uans = [...uans];\r\n\r\n                                /* assign the value of is_flag according to the value of correct answer and your answer after spliting the value of these variables with '|' and sorting it*/\r\n                                is_flag = (shallow_cans.sort().join('|') == shallow_uans.sort().join('|')) ? true : false;\r\n                                /* calls GRAPH.drawelem for value of is_false after setting the stroke and color of the point */\r\n                                is_false = GRAPH.drawelem(elem, is_flag, is_false);\r\n                                break;\r\n                            }\r\n\r\n                    }\r\n                    /* change the border color of the preview container according to correct or incorrect */\r\n                    GRAPH.setCorrectAns(mid, is_false);\r\n                } else if (typeof review != \"undefined\" && review == 1 && JS.select(pElem).getAttribute(\"data-userans\") == '') {\r\n                    /* shows the border color of the preview container in red color */\r\n                    JS.setCss(mid, {\r\n                        border: \"1px solid #ff0000\"\r\n                    });\r\n                }\r\n            }\r\n        } else {\r\n            /* It is discarded by Pete sir */\r\n            for (let index = 0; index < uans.length; index++) {\r\n                let val = uans[index];\r\n                k = val.split(',');\r\n                let text = GRAPH.updateNumberline(mid, elem, parseFloat(k[0]), parseFloat(k[1]), k[2]);\r\n                if (typeof review != \"undefined\" && review == 1) {\r\n                    if (k[1] == '0.4') {\r\n                        if (cans.includes(val)) {\r\n                            text.setAttribute({ 'cssClass': \"cursor-down-correct\", 'highlightcssClass': \"cursor-down-correct\", 'fixed': true });\r\n                        } else {\r\n                            text.setAttribute({ 'cssClass': \"cursor-down-incorrect\", 'highlightcssClass': \"cursor-down-incorrect\", 'fixed': true })\r\n                            is_false++;\r\n                        }\r\n                    } else {\r\n                        text.setAttribute({ 'fixed': true });\r\n                        is_false++;\r\n                    }\r\n                    GRAPH.setCorrectAns(mid, is_false);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n// change the border color of the preview container according tho the answer matched\r\nGRAPH.setCorrectAns = function (mid, is_false) {\r\n    if (is_false == 0) {\r\n        // set the border color of preview container to show that answer is correct\r\n        JS.setCss(mid, {\r\n            border: \"1px solid #00ff00\"\r\n        });\r\n        // check the element have id: answer\r\n        JS.select(\"#answer\").checked = true;\r\n        // sets the attribute 'as' value 1 of preview container\r\n        JS.select(mid).setAttribute('as', 1);\r\n    } else {\r\n        // set the border color of preview container to show that answer is incorrect\r\n        JS.setCss(mid, {\r\n            border: \"1px solid #ff0000\"\r\n        });\r\n        // uncheck the element have id: answer\r\n        JS.select(\"#answer\").checked = false;\r\n        // sets the attribute 'as' value -1 of preview container\r\n        JS.select(mid).setAttribute('as', -1);\r\n    }\r\n}\r\n\r\n// sets the fill and stroke color of point and returns the value of variable is_flase \r\nGRAPH.drawelem = function (elem, is_flag, is_false) {\r\n    if (JS.select('#' + elem).classList.contains('plot')) {\r\n        if (is_flag == true) {\r\n            if (typeof point.for == \"undefined\") {\r\n                // sets the stroke and fill color of point to #00FF00\r\n                point.setAttribute({ 'strokeColor': \"#00FF00\", 'fillColor': \"#00FF00\" });\r\n            } else {\r\n                // sets the stroke color of point to #00FF00\r\n                point.for.setAttribute({ 'strokeColor': \"#00FF00\" });\r\n                // sets the stroke and fill color of the first point to #00FF00\r\n                point.for.point1.setAttribute({ 'strokeColor': \"#00FF00\", 'fillColor': \"#00FF00\" });\r\n                // sets the stroke and fill color of the second point to #00FF00\r\n                point.for.point2.setAttribute({ 'strokeColor': \"#00FF00\", 'fillColor': \"#00FF00\" });\r\n            }\r\n        } else {\r\n            if (typeof point.for == \"undefined\") {\r\n                // sets the stroke and fill color of point to #FF0000\r\n                point.setAttribute({ 'strokeColor': \"#FF0000\", 'fillColor': \"#FF0000\" });\r\n            } else {\r\n                // sets the stroke color of point to #FF0000\r\n                point.for.setAttribute({ 'strokeColor': \"#FF0000\" });\r\n                // sets the stroke and fill color of the first point to #FF0000\r\n                point.for.point1.setAttribute({ 'strokeColor': \"#FF0000\", 'fillColor': \"#FF0000\" });\r\n                // sets the stroke and fill color of the second point to #FF0000\r\n                point.for.point2.setAttribute({ 'strokeColor': \"#FF0000\", 'fillColor': \"#FF0000\" });\r\n            }\r\n            is_false++;\r\n        }\r\n    } else if (JS.select('#' + elem).classList.contains('polygon')) {\r\n        let i;\r\n        if (is_flag == true) {\r\n            if (typeof point.for != \"undefined\") {\r\n                for (i = 0; i < point.for.vertices.length; i++) {\r\n                    // sets the stroke and fill color of the vertics to #00FF00\r\n                    point.for.vertices[i].setAttribute({ 'strokeColor': \"#00FF00\", 'fillColor': \"#00FF00\" });\r\n                }\r\n            }\r\n        } else {\r\n            if (typeof point.for != \"undefined\") {\r\n                for (i = 0; i < point.for.vertices.length; i++) {\r\n                    // sets the stroke and fill color of the vertics to #FF0000\r\n                    point.for.vertices[i].setAttribute({ 'strokeColor': \"#FF0000\", 'fillColor': \"#FF0000\" });\r\n                }\r\n                // fills the color of the polygon to #FF0000 with opacity 0.5\r\n                point.for.setAttribute({ 'fillColor': \"#FF0000\", 'opacity': 0.5 });\r\n            }\r\n            is_false++;\r\n        }\r\n    } else {\r\n        if (is_flag == true) {\r\n            /* sets the stroke and fill color of the last point to #00FF00 if the graph board container have not class polygon or plot and value of is_flag is true */\r\n            point.setAttribute({ 'strokeColor': \"#00FF00\", 'fillColor': \"#00FF00\" });\r\n            /* sets the stroke and fill color of the initial point to #00FF00 if the graph board container have not class polygon or plot and value of is_flag is true */\r\n            prevPoint.setAttribute({ 'strokeColor': \"#00FF00\", 'fillColor': \"#00FF00\" });\r\n            /* sets the stroke color to #00FF00 if the graph board container have not class polygon or plot and value of is_flag is true */\r\n            point.for.setAttribute({ 'strokeColor': \"#00FF00\" });\r\n        } else {\r\n            /* sets the stroke and fill color of the last point to #FF0000 if the graph board container have not class polygon or plot and value of is_flag is false */\r\n            point.setAttribute({ 'strokeColor': \"#FF0000\", 'fillColor': \"#FF0000\" });\r\n            /* sets the stroke and fill color of the initial point to #FF0000 if the graph board container have not class polygon or plot and value of is_flag is false */\r\n            prevPoint.setAttribute({ 'strokeColor': \"#FF0000\", 'fillColor': \"#FF0000\" });\r\n            /* sets the stroke color to #FF0000 if the graph board container have not class polygon or plot and value of is_flag is false */\r\n            point.for.setAttribute({ 'strokeColor': \"#FF0000\" });\r\n            is_false++;\r\n        }\r\n\r\n    }\r\n    // returns the value of variable is_false\r\n    return is_false;\r\n}\r\n\r\n// function for draw the circle on preview side\r\nGRAPH.drawCirclePreview = function (mid, elem, val) {\r\n    // split the data combined of center and radius of the circle separated by '/'\r\n    let key = val.split('/');\r\n\r\n    for (let index = 0; index < key.length; index++) {\r\n        let n = key[0].split(','), point;\r\n        if (key[index].indexOf(',') != -1) {\r\n            // create instance of point\r\n            point = board.create('point', [parseInt(n[0]), parseInt(n[1])], { 'name': \"\" });\r\n            //assign the center point\r\n            prevPoint = point;\r\n        } else {\r\n            let next = (parseInt(n[0]) - parseInt(key[1]));\r\n            // creates the instance of point\r\n            point = board.create('point', [parseInt(next), parseInt(n[1])], { 'name': \"\" });\r\n        }\r\n        // update and draw the graph on graph board according to the type and point on the graph board\r\n        GRAPH.updateAndDrawPreview(mid, elem, point);\r\n    }\r\n}\r\n\r\n/* ajax based code */\r\nGRAPH.labbinded = true;\r\n\r\n// shows the UI indicting correct or incorrect and correct answer and your answer button and not allowed to perform the task if the value of its  argument is not equals to undefined\r\nGRAPH.modeOn = function (modeType) {\r\n    // adds the class 'h' to the element have class 'test' or 'review'. Basically hides the correct and your answer buttons\r\n    JS.selectAll('.test, .review', 'addClass', 'h');\r\n    if (modeType) {\r\n        // shows the correct and your answer buttons\r\n        JS.selectAll('.review', 'removeClass', 'h');\r\n        /* prevents the user to perform the task when review mode is on and changes the color of button which is currently clicked */\r\n        GRAPH.unBindLab();\r\n        GRAPH.showansdrag(GRAPH.ajax_eId, 'u', 1);\r\n    } else {\r\n        // removes the class 'h' from element have class 'test'\r\n        JS.selectAll('.test', 'removeClass', 'h');\r\n        // allows the user to perform the task when review mode is off\r\n        GRAPH.bindLab();\r\n        // shows the user answer which was performed by the user\r\n        GRAPH.showansdrag(GRAPH.ajax_eId, 'u');\r\n        // sets the border color of preview container\r\n        JS.setCss(GRAPH.ajax_eId).style.border = '1px solid #CCCCCC';\r\n    }\r\n}\r\n\r\n\r\n// allows the user to perform the task when review mode is off\r\nGRAPH.bindLab = function () {\r\n    // assign the value true to variable GRAPH.labbinded\r\n    GRAPH.labbinded = true;\r\n    // plot the graph on the graph board with some binded events\r\n    GRAPH.readyThis(GRAPH.ajax_eId);\r\n    // shows delete button when review mode is off\r\n    JS.find(GRAPH.ajax_eId, '.delElem').removeAttribute('style');\r\n    // shows ada button when review mode is off\r\n    JS.find(GRAPH.ajax_eId, '#ADA_button').style.display = 'block';\r\n}\r\n\r\n\r\n// prevents the user to perform the task when review mode is on and changes the color of button which is currently clicked\r\nGRAPH.unBindLab = function () {\r\n    // assign the value false to variable GRAPH.labbinded\r\n    GRAPH.labbinded = false;\r\n    // hides delete button when review mode is on\r\n    JS.find(GRAPH.ajax_eId, '.delElem').style.display = 'none';\r\n    // hides ada button when review mode is on\r\n    JS.find(GRAPH.ajax_eId, '#ADA_button').style.display = 'none';\r\n}\r\n\r\nexport default GRAPH;","<!--\r\n *  File Name   : GraphPreview.svelte\r\n *  Description : Responsible for Preview Side functionality\r\n *  Author      : Ayush Srivastava\r\n *  Package     : clsSMGRAPH (Preview)\r\n *  Last update : 02-Mar-2021\r\n *  Last Updated By : Ayush Srivastava\r\n-->\r\n<script>\r\n    import { afterUpdate, beforeUpdate, onMount } from 'svelte';\r\n    import l from '../src/libs/editorLib/language.js';\r\n    import { writable } from \"svelte/store\";\r\n    import ItemHelper from '../helper/ItemHelper.svelte';\r\n\timport { XMLToJSON, AH, onUserAnsChange } from '../helper/HelperAI.svelte';\r\n    import GRAPH from './lib/mathString';\r\n    export let xml;\r\n\texport let uxml;\r\n\texport let isReview;\r\n\texport let showAns;\r\n\texport let editorState;\r\n    let state = {};\r\n    let preview_store = writable({\r\n\t\txml : \"\",\r\n        QXML: \"\",\r\n        userAns_data: \"\",\r\n        moduleType : \"none\",\r\n        noOfRow: 1,\r\n        review: false,\r\n        init : false,\r\n        open: false,\r\n        modalViewLayout: [],\r\n        checked: true,\r\n\t});\r\n    const unsubscribe = preview_store.subscribe(value => {\r\n\t\tstate = value;\r\n\t});\r\n    // functions responsible for loading the module\r\n    beforeUpdate(async() => {\r\n        if (!state.init) {\r\n            if (typeof (JXG) == 'object' && editorState) {\r\n                state.init = true;\r\n            } else if (typeof(editorState) == 'undefined') {\r\n                AH.addScript('', itemUrl + 'src/libs/jsxgraph.min.js', {callback: function () {\r\n                    state.init = true;\r\n                }});\r\n            }\r\n        }\r\n        if (editorState && editorState.stopPreviewUpdate) {\r\n            xml = AH.select('#special_module_xml').value;\r\n        }\r\n        if (state.init && state.xml != xml) {\r\n            loadModule(xml);\r\n        }\r\n    })\r\n    // functions responsible for doing the changes according to the xml\r\n    afterUpdate(async() => {\r\n        if (state.init) {\r\n            if (state.xml != xml) {\r\n                if (editorState) {\r\n                    // resetting the answer\r\n                    resetAdaModal();\r\n                    AH.find(\"#mathmain\", '[id^=ID]').setAttribute(\"data-userans\", \"\");\r\n                }\r\n                initModule();\r\n                \r\n                preview_store.update( (item) => {\r\n                    item.xml = xml;\r\n                    return item;\r\n                });\r\n                if (isReview && typeof (editorState) == 'undefined') {\r\n                    setReview();\r\n                }\r\n            }\r\n            if (state.review != isReview && editorState) {\r\n                preview_store.update( (item) => {\r\n                    item.review = isReview;\r\n                    return item;\r\n                });\r\n                if (isReview) {\r\n                    GRAPH.modeOn(1);\r\n                    displayAns();\r\n                } else {\r\n                    GRAPH.modeOn(0);\r\n                }\r\n                AH.selectAll('#mathmain #delButton.active', 'removeClass','active');\r\n            }\r\n            if (state.checked && typeof(showAns) == 'undefined') {\r\n                GRAPH.checkAns(\"#mathmain\");\r\n                state.checked = false;\r\n            }\r\n            AH.enableBsAll('[data-bs-toggle=\"tooltip\"]', 'Tooltip')\r\n        }\r\n    })\r\n    // Responible for binding the events\r\n    onMount(async()=> {\r\n        if (window.inNative) {\r\n            window.getHeight && window.getHeight();\r\n        }\r\n        AH.set(\"q_refresh\", refreshModule);\r\n        if (!editorState) {\r\n            refreshModule();\r\n        }\r\n        AH.listen('body', 'keydown', '#mathmain #delButton', function (current, event) {\r\n            if (event.ctrlKey && event.altKey && (event.which == 49 || event.keyCode == 49)) {\r\n                openModal();\r\n            }\r\n        });\r\n        AH.listen('body', 'keydown', '#mathmain #ADA_button', function (current, event) {\r\n            if (event.keyCode == 13) {\r\n                openModal();\r\n            }\r\n        });\r\n        AH.listen('body', 'click', '#mathmain', function (current, event) {\r\n            if (event.target.parentNode.id != 'delButton' && event.target.id != 'ADA_button' && event.target.id != 'delButton' && event.target.parentNode.id != 'ADA_button' && event.target.id != 'option-toolbar') {\r\n                displayAns();\r\n            }\r\n        });\r\n        AH.listen('body', 'mouseup', '#mathmain', function (current, event) {\r\n            if (event.target.parentNode.id != 'delButton' && event.target.id != 'ADA_button' && event.target.id != 'delButton' && event.target.parentNode.id != 'ADA_button' && event.target.id != 'option-toolbar') {\r\n                displayAns();\r\n            }\r\n        });\r\n        AH.listen('body', 'click', '.delElem', function (current) {\r\n            let cur_elem = current.children[0];\r\n            cur_elem.classList.toggle('active');\r\n            if ( AH.select('.selected-option').innerHTML == 'point' || AH.select('.selected-option').innerHTML == 'circle' || AH.select('.selected-option').innerHTML == 'association' ) {\r\n                if (cur_elem.classList.contains('active')) {\r\n                    AH.alert(l.delete_msg);\r\n                    AH.find('#mathmain', '#ID0Preview').style.cursor = \"pointer\";\r\n                } else {\r\n                    AH.find('#mathmain', '#ID0Preview').style.cursor = \"default\";\r\n                    cur_elem.style.color = 'black';\r\n                }\r\n            } else if (cur_elem.classList.contains('active')) {\r\n                cur_elem.style.color = 'black';\r\n                AH.alert(l.last_delete_msg);\r\n                AH.setCss(current, {\r\n                    backgroundColor: \"transparent\",\r\n                    boxShadow: \"none\"\r\n                });\r\n                AH.find('#mathmain', '#ID0Preview').style.cursor = \"default\";\r\n            }\r\n        });\r\n        AH.listen('body', 'click', '#mathmain .footer_toolbox li', function (current) {\r\n            current.classList.add('btn_active');\r\n            AH.selectAll(AH.siblings(current), 'removeClass', 'btn_active')\r\n        });\r\n    })\r\n    // for refreshing the module\r\n    function refreshModule() {\r\n        if (typeof JXG != 'undefined' && AH.select('#ID0Preview').nodeName && AH.select('#ID0Preview').offsetHeight) {\r\n            initModule();\r\n        }\r\n    }\r\n    // function for iniating module \r\n    function initModule() {\r\n        GRAPH.readyThis(\"#mathmain\");\r\n        // called for update the graph on graph board\r\n        GRAPH.showansdrag(\"#mathmain\", 'u', 1);\r\n        /* allows user to perform the task and hides 'correct answer' and 'your answer' button */\r\n        GRAPH.modeOn();\r\n    }\r\n    // responsible for showing the answer\r\n    function displayAns() {\r\n        // used for switch on next question in prepengine if current question is attempted\r\n        //ISSPECIALMODULEUSERXMLCHANGE = 1;\r\n        // collect Correct or Incorrect which is returned by checkAns method \r\n        let result = GRAPH.checkAns(\"#mathmain\");\r\n        if (typeof(is_sm) != \"undefined\") AH.showmsg(result.ans ? \"Correct\" : \"Incorrect\", 3000);\r\n        if (editorState) {\r\n            // shows the answer according to the value of its argument passed\r\n            showAns(result.ans ? \"Correct\":\"Incorrect\");\r\n        }\r\n        onUserAnsChange(result)\r\n    }\r\n    // function responsible for loading the module\r\n    function loadModule (loadXml) {\r\n        loadXml = XMLToJSON(loadXml);\r\n        parseXMLAuthoring(loadXml);\r\n        let uaXML = {};\r\n        if (uxml) {\r\n            // converts the user answer xml value into json which is store in 'uxml'\r\n            uaXML = XMLToJSON(uxml);\r\n            if ( uaXML && uaXML.smans && uaXML.smans.div && uaXML.smans.div._userAns) {\r\n                preview_store.update( (item) => {\r\n                    item.userAns_data = uaXML.smans.div._userAns;\r\n                    return item;\r\n                });\r\n            }\t\r\n        }\r\n    }\r\n    // function responsible for parsing the xml\r\n    function parseXMLAuthoring(MYXML) {\r\n        preview_store.update( (item) => {\r\n            item.QXML = MYXML.smxml.plot;\r\n            item.moduleType = MYXML.smxml.plot._type;\r\n            return item;\r\n        });\r\n    }\r\n    // function responsible for opening the modal\r\n    function openModal() {\r\n        AH.getBS('#graph_modal', 'Modal').show();\r\n        loadModalView();\r\n        AH.selectAll('[resetValue=\"1\"]', 'value', '');\r\n    }\r\n    // function for setting the uxml on key update\r\n    function modifyUxmlOnKey() {\r\n        let tempRowVal = [];\r\n        let row;\r\n        switch (state.moduleType) {\r\n            case \"circle\":\r\n                // selects all row\r\n                row = document.querySelectorAll('.mainDiv');\r\n                //var tempRowVal = [];\r\n                row.forEach(function(item) {\r\n                    // selects all input field in perticular row\r\n                    let col = document.querySelectorAll(`#${item.id} .getFieldVal`);\r\n                    // creates array with input fields value which are defined for x and y co-ordinate and radius after separating comma and '/' which is required where it is suitable \r\n                    let tempCol = [col[0].value + \",\" + col[1].value + \"/\" + col[2].value];\r\n                    // pushes the value of 'tempCol' array into array 'tempRowVal'\r\n                    tempRowVal.push(tempCol);\r\n                });\r\n                // updates the value of 'data-userans' attribute of graph board container inside preview container where id starts with 'ID' character after joining the 'tempRowVal' array value with '|' \r\n                AH.find(\"#mathmain\", '[id^=ID]').setAttribute(\"data-userans\", tempRowVal.join('|'));\r\n                // calls unsetReview method\r\n                unsetReview();\r\n                break;\r\n            case \"point\":\r\n            case \"polygon\": \r\n                // selects the all rows available in ADA modal box\r\n                row = document.querySelectorAll('.mainDiv');\r\n                //var tempRowVal = [];\r\n                row.forEach(function(item) {\r\n                    // selects all input field in perticular row\r\n                    let col = document.querySelectorAll(`#${item.id} .getFieldVal`);\r\n                    // creates array with input fields value which are defined for x and y co-ordinate\r\n                    let tempCol = [col[0].value + \",\" + col[1].value];\r\n                    // pushes the data of 'tempCol' in array 'tempRowVal'\r\n                    tempRowVal.push(tempCol);\r\n                });\r\n                // updates the value of 'data-userans' attribute of graph board container inside preview container where id starts with 'ID' character after joining the 'tempRowVal' array value with '|' \r\n                AH.find(\"#mathmain\", '[id^=ID]').setAttribute(\"data-userans\", tempRowVal.join('|'));\r\n                // calls unsetReview method\r\n                unsetReview();\r\n                break;\r\n            case \"sine\":\r\n            case \"cosine\":\r\n            case \"line\":\r\n            case \"ray\":\r\n            case \"segment\":\r\n            case \"vector\":\r\n            case \"parabola\":\r\n                row = document.querySelectorAll('.mainDiv');\r\n                //var tempRowVal = [];\r\n                row.forEach(function(item) {\r\n                    let col = document.querySelectorAll(`#${item.id} .getFieldVal`);\r\n                    // contains the array of value point x1, y1 and  x2, y2 separated with '|' from ADA dialog box\r\n                    let tempCol = [col[0].value + \",\" + col[1].value + \"|\" + col[2].value + \",\" + col[3].value];\r\n                    // pushes the data in 'tempRowVal' array\r\n                    tempRowVal.push(tempCol);\r\n                });\r\n                // updates the value of 'data-userans' attribute of graph board container inside preview container where id starts with 'ID' character after joining the 'tempRowVal' array value with '|'\r\n                AH.find(\"#mathmain\", '[id^=ID]').setAttribute(\"data-userans\", tempRowVal.join('|'));\r\n                // calls unsetReview method\r\n                unsetReview();\r\n                break;\r\n            case \"association\":\r\n                // it is discarded by Pete sir\r\n                row = document.querySelectorAll('.mainDiv');\r\n                //var tempRowVal = [];\r\n                row.forEach(function(item) {\r\n                    let col = document.querySelectorAll(`#${item.id} .getFieldVal`);\r\n                    let tempCol = [col[0].value + \",\" + col[1].value + \",\" + col[2].value];\r\n                    tempRowVal.push(tempCol);\r\n                });\r\n                AH.find(\"#mathmain\", '[id^=ID]').setAttribute(\"data-userans\", tempRowVal.join('|'));\r\n                unsetReview()\r\n                break;\r\n        }\r\n        displayAns();\r\n        AH.getBS('#graph_modal', 'Modal').hide();\r\n    }\r\n    // used for ADA and adds or removes the row \r\n    function updateRow (type) {\r\n        if (type == \"add\") {\r\n            // increases the row by 1 if 'add' button clicked\r\n            state.noOfRow = state.noOfRow + 1;\r\n        } else if (type == 'remove') {\r\n            if (state.noOfRow == 1) {\r\n                AH.alert(\"Default row can't be deleted\");\r\n            } else {\r\n                //  decreases the row by 1 if 'remove' button clicked and row is greater than 1\r\n                state.noOfRow = state.noOfRow - 1;\r\n            }\r\n        }\r\n        loadModalView();\r\n    }\r\n    \r\n    // loads the ADA modal box according to the value of state 'moduleType'\r\n    function loadModalView() {\r\n        let modalViewLayout = [];\r\n        for (let index = 0; index < state.noOfRow; index++) {\r\n            // pushes the value return by getRow method in array 'modalViewLayout'\r\n            modalViewLayout = [\r\n                ...modalViewLayout, {\r\n                    moduleType : state.moduleType,\r\n                    index: index,\r\n                }\r\n            ]\r\n        }\r\n        preview_store.update((item) => {\r\n            item.modalViewLayout = modalViewLayout;\r\n            return item;\r\n        });\r\n    }\r\n    /* shows correct or incorrect message and correct answer and your answer button and does not allow user to perform the task */\r\n    function setReview() {\r\n        AH.selectAll('#mathmain #delButton.active', 'removeClass','active');\r\n        isReview = true;\r\n        // does not allow user to perform the task and shows correct answer and your answer button\r\n        GRAPH.modeOn(\"on\");\r\n        // shows the stroke and fill color of the point and graph\r\n        GRAPH.showansdrag('#mathmain', 'u', 1);\r\n        // display the correct or incorrect \r\n        displayAns();\r\n    }\r\n    /* hides correct or incorrect message and correct answer and your answer button and allow user to perform the task removes red or green color of border of preview container */\r\n    function unsetReview() {\r\n        AH.selectAll('#mathmain #delButton.active', 'removeClass','active');\r\n        isReview = false;\r\n        // allow user to perform the task\r\n        GRAPH.modeOn();\r\n        // does not show the point and graph stroke and fill color to indicate that answer is correct or incorrect, shows border color of preview container in gray color */\r\n        GRAPH.showansdrag('#mathmain', 'u', 0);\r\n    }\r\n    // function for handling the review mode\r\n    function handleReviewMode(mode) {\r\n        if (mode == 'c') {\r\n            GRAPH.showansdrag('#mathmain', 'c', 1)\r\n        } else if (mode == 'u') {\r\n            GRAPH.showansdrag('#mathmain', 'u', 1)\r\n        }\r\n    }\r\n    // function for resetting the modal\r\n    function resetAdaModal () {\r\n        state.noOfRow = 1;\r\n        AH.selectAll('[id^=divAllTextBox]:not([id=\"divAllTextBox0\"])', 'remove');\r\n        AI.selectAll('.getFieldVal:not(:disabled)', 'value', '');\r\n    }\r\n</script>\r\n<div>\r\n    <link onload=\"this.rel='stylesheet'\" rel=\"preload\" as=\"style\" href={itemUrl + \"src/libs/Math.min.css\"}/>\r\n    \r\n    <center>\r\n        <ItemHelper \r\n            on:setReview = {setReview}\r\n            on:unsetReview = {unsetReview}\r\n            reviewMode={isReview}\r\n            handleReviewClick = {handleReviewMode}\r\n        />\r\n        <div\r\n            id=\"mathmain\"\r\n            class=\"userAns position-relative bg-white\"\r\n            style = \"height:{(Number(state.QXML._height) + 2)}px;width:{state.QXML._width}px;\"\r\n        >\r\n        <div id=\"option-toolbar\" class=\"text-dark\">\r\n            <ul class=\"controls\">\r\n                <li value=\"plotgraph\" class=\"selected-option text-uppercase m-0\">{state.QXML._type}</li>\r\n            </ul>\r\n            <button \r\n                tabindex=\"0\" \r\n                id=\"ADA_button\" \r\n                class= \"ADAButton float-start mt-1 btn w-auto h-auto p-1 btn-light ml\" \r\n                aria-label={l.ada_graph_msg} \r\n            >\r\n                <span data-bs-toggle=\"tooltip\"  title={l.ada_graph_msg} class=\"icomoon-keyboard-2 s2\"></span>\r\n            </button>\r\n            <div\r\n                class=\"btn-group tools delElem h-imp\" \r\n            >\r\n                <button\r\n                    type=\"button\"\r\n                    class=\"btn btn-light p-1 focus_div\"\r\n                    id=\"delButton\"\r\n                    data-placement=\"right\"\r\n                    tabindex=\"0\"\r\n                    aria-label={l.ada_message} \r\n                >\r\n                    <span title={l.delete} data-bs-toggle=\"tooltip\"  class={\"icomoon-new-24px-delete-1\"}></span>\r\n                </button>\r\n            </div>\r\n        </div>\r\n\r\n        {#if state.QXML._reflection}\r\n            <div\r\n                id={state.QXML._id + \"Preview\"} \r\n                data-userans={state.userAns_data}\r\n                data-anskey={state.QXML._anskey}\r\n                type={state.QXML._type} \r\n                class={\"drag-resize dropable \" + state.QXML._type}\r\n                data-xtickdistance={state.QXML._xtickdistance}\r\n                data-ytickdistance={state.QXML._ytickdistance} \r\n                data-xaxis={state.QXML._xaxis} \r\n                data-yaxis={state.QXML._yaxis} \r\n                data-snapsize={state.QXML._snapsize} \r\n                data-equation={state.QXML._equation}\r\n                data-reflection = {state.QXML._reflection}\r\n                style = \"\r\n                    height: {state.QXML._height - 40}px;\r\n                    width: {state.QXML._width}px;\r\n                    border: 1px solid #ccc;\r\n                \"\r\n            ></div>\r\n        {:else}\r\n            <div\r\n                id={state.QXML._id + \"Preview\"} \r\n                data-userans={state.userAns_data}\r\n                data-anskey={state.QXML._anskey}\r\n                type={state.QXML._type} \r\n                class={\"drag-resize dropable \" + state.QXML._type}\r\n                data-xtickdistance={state.QXML._xtickdistance}\r\n                data-ytickdistance={state.QXML._ytickdistance} \r\n                data-xaxis={state.QXML._xaxis} \r\n                data-yaxis={state.QXML._yaxis} \r\n                data-snapsize={state.QXML._snapsize} \r\n                data-equation={state.QXML._equation}\r\n                style = \"\r\n                    height: {state.QXML._height - 40}px;\r\n                    width: {state.QXML._width}px;\r\n                    border: 1px solid #ccc;\r\n                \"\r\n            ></div>\r\n        {/if}\r\n        <ul class=\"footer_toolbox h\">\r\n            <li class=\"btn_active btn-point\" rel=\"point\" data-value=\"P\"></li>\r\n            <li rel=\"segment\" class=\"btn-segment\" data-value=\"S\"></li>\r\n            <li rel=\"segment_left_point_hollow\" class=\"btn-SLH\" data-value=\"SLH\"></li>\r\n            <li rel=\"segment_right_point_hollow\" class=\"btn-SRH\" data-value=\"SRH\"></li>\r\n            <li rel=\"segment_both_point_hollow\" class=\"btn-SBH\" data-value=\"SBH\"></li>\r\n            <li rel=\"ray_left_direction\" class=\"btn-RL\" data-value=\"RL\"></li>\r\n            <li rel=\"ray_right_direction\" class=\"btn-RR\" data-value=\"RR\"></li>\r\n            <li rel=\"ray_left_direction_right_hollow\" class=\"btn-RRH\" data-value=\"RRH\"></li>\r\n            <li rel=\"ray_right_direction_left_hollow\" class=\"btn-RLH\" data-value=\"RLH\"></li>\t\r\n        </ul>\r\n        </div>\r\n    </center>\r\n\r\n    <div id=\"graph_modal\" class=\"modal fade\" tabIndex=\"-1\">\r\n        <div class=\"modal-dialog modal-dialog-centered\">\r\n            <div class=\"modal-content\">\r\n                <div class=\"modal-header\">\r\n                    <h5 class=\"modal-title\">{l.set_ans}</h5>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-12\">\r\n                            <div class=\"float-end\">\r\n                                <button class=\"btn btn-light\" id=\"updateRow\" on:click={()=> {updateRow(\"add\")}}>{l.add_point}</button>\r\n                                <button class=\"btn btn-light ml-1\" id=\"delete_btn\" on:click={()=> {updateRow(\"remove\")}}>{l.del_row}</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"modal-body overflow-y\">\r\n                    <div class=\"row\">\r\n                        {#each  state.modalViewLayout as data}\r\n                            {#if data.moduleType == 'circle'}\r\n                                <div class=\"row mainDiv mt-4\" key={\"divAllTextBox\" + (data.index)} id={\"divAllTextBox\" + (data.index)}>\r\n                                    <div class=\"col-12 text-center\">\r\n                                        <span class=\"text-justify\">\r\n                                            <label class=\"ml-2 text-body\">\r\n                                                {l.pointx + (data.index + 1)}\r\n                                                <input type=\"number\" resetValue=\"1\" class=\"point_x_1 getFieldVal form-control \" id=\"setAnsByKey\" placeholder={l.insert_numeric_data}/>\r\n                                            </label>\r\n                                            <label class=\"ml-2 text-body\">\r\n                                                {l.pointy + (data.index + 1)}\r\n                                                <input type=\"number\" resetValue=\"1\" class=\"point_y_1 getFieldVal form-control\" placeholder={l.insert_numeric_data}/>\r\n                                            </label>\r\n                                        </span>\r\n                                    </div>\r\n                                    <div class=\"col-12 text-center\">\r\n                                        <label class=\"text-body\">\r\n                                            {\"Radius \" + (data.index + 1)}\r\n                                            <input type=\"number\" resetValue=\"1\" class=\"point_x_2 getFieldVal form-control\" placeholder={l.insert_numeric_data}/>\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                            {:else if data.moduleType == 'association' }\r\n                                <div class=\"row mainDiv mt-2\" key={\"divAllTextBox\" + (data.index)} id={\"divAllTextBox\" + (data.index)}>\r\n                                    <div class=\"col-12 text-center\">\r\n                                        <span class=\"text-justify\">\r\n                                            <label\r\n                                                class=\"ml-2 text-body\">\r\n                                                {l.pointx + (data.index + 1)} \r\n                                                <input type=\"number\" resetValue=\"1\" class=\"association_x_point getFieldVal form-control\" placeholder={l.insert_numeric_data}/>\r\n                                            </label>\r\n                                            <label class=\"ml-2 text-body\">\r\n                                                {l.pointy + (data.index + 1)}\r\n                                                <input type=\"number\" value=\"0.4\" disabled=\"disabled\" class=\"point_y_1 pe-none getFieldVal form-control\" placeholder={l.insert_numeric_data}/>\r\n                                            </label>\r\n                                        </span>\r\n                                    </div>\r\n                                    <div class=\"col-12 text-center\">\r\n                                        <label class=\"text-body\">\r\n                                            {l.pointx2}\r\n                                            <input type=\"number\" resetValue=\"1\" class=\"association_point getFieldVal form-control\" placeholder={l.insert_numeric_data}/>\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                            {:else if data.moduleType == 'point' || data.moduleType == 'polygon'}\r\n                                <div class=\"row mainDiv mt-2\" key={\"divAllTextBox\" + (data.index)} id={\"divAllTextBox\" + (data.index)}>\r\n                                    <div class=\"col-12 text-center\">\r\n                                        <label class=\"text-body\">\r\n                                            {l.pointx + (data.index + 1)}\r\n                                            <input type=\"number\" resetValue=\"1\" class=\"form-control getFieldVal\" name={\"point_\" + (data.index)} id={\"x_\" + (data.index)} placeholder={l.insert_numeric_data}/>\r\n                                        </label>\r\n                                        <label class=\"ml-2 text-body\">\r\n                                            {l.pointy + (data.index + 1)}\r\n                                            <input type=\"number\" resetValue=\"1\" class=\"form-control getFieldVal\" name={\"point_\" + (data.index)} id={\"y_\" + (data.index)} placeholder={l.insert_numeric_data}/>\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                            {:else}\r\n                                <div class=\"row mainDiv mt-4\" key={\"divAllTextBox\" + (data.index)} id={\"divAllTextBox\" + (data.index)}>\r\n                                    <div class=\"col-12 text-center\">\r\n                                        <label class=\"text-body\">\r\n                                            {l.pointx1}\r\n                                            <input type=\"number\" resetValue=\"1\" class=\"point_x_1 getFieldVal form-control\" id=\"setAnsByKey\" placeholder={l.insert_numeric_data}/>\r\n                                        </label>\r\n                                        <label class=\"ml-2 text-body\">\r\n                                            {l.pointy1}\r\n                                            <input type=\"number\" resetValue=\"1\" class=\"point_y_1 getFieldVal form-control\" id=\"setAnsByKey\" placeholder={l.insert_numeric_data}/>\r\n                                        </label>\r\n                                        <label class=\"text-body\">\r\n                                            {l.pointx2}\r\n                                            <input type=\"number\" resetValue=\"1\" class=\"point_x_2 getFieldVal form-control\" id=\"setAnsByKey\" placeholder={l.insert_numeric_data}/>\r\n                                        </label>\r\n                                        <label class=\"ml-2 text-body\">\r\n                                            {l.pointy2}\r\n                                            <input type=\"number\" resetValue=\"1\" class=\"point_y_2 getFieldVal form-control\" id=\"setAnsByKey\" placeholder={l.insert_numeric_data}/>\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                            {/if}\r\n                        {/each}\r\n                    </div>\r\n                </div>\r\n                <div class=\"modal-footer\">\r\n                    <button type=\"button\" class=\"btn btn-light\" data-bs-dismiss=\"modal\">{l.cancel}</button>\r\n                    <button type=\"button\" class=\"btn btn-secondary\" on:click={modifyUxmlOnKey}>{l.ok_btn}</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<style>\r\n    #graph_modal .modal-body {\r\n        max-height: 350px;\r\n    }\r\n</style>"],"names":[],"mappings":"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"}