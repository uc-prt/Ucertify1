{"version":3,"file":"Insight-5a0a47f3.js","sources":["../../../clsSMInsight/Insight.svelte"],"sourcesContent":["<!--\r\n *  File Name   : Insight.svelte\r\n *  Description : Responsible for Authoring Side functionality\r\n *  Author      : Ayush Srivastava\r\n *  Package     : Insight (Authoring & Preview)\r\n *  Last update : 09-Feb-2021\r\n *  Last Updated By : Ayush Srivastava\r\n-->\r\n<script>\r\n    import { afterUpdate, beforeUpdate, onMount } from 'svelte';\r\n\timport { writable } from 'svelte/store';\r\n    import { AH , XMLToJSON, JSONToXML} from '../helper/HelperAI.svelte';\r\n    import l from '../src/libs/editorLib/language.js';\r\n    import Loader from '../helper/Loader.svelte';\r\n    import swal from 'sweetalert';\r\n    import Sortable from 'sortablejs';\r\n\r\n    export let xml;\r\n    export let getChildXml;\r\n    export let user;\r\n    export let editorState;\r\n    export let itemIcons;\r\n    const category = { 'quiz': 'knowledge_check', 'terminal': 'lab', 'simulation': 'lab', 'insight': 'lab', 'lablink': 'lab', 'playground': 'lab', 'video': 'media', 'audio': 'media', 'exhibit': 'link', 'pdf': 'link', 'weblink': 'link', 'download': 'link', 'object3d': 'objects' };\r\n    let itemArray = ['quiz', 'link', 'terminal', 'object3d', 'exhibit', 'insight', 'lablink', 'playground', 'simulation'],\r\n    sceneTemp = \"\",\r\n    characterData  = \"\",\r\n    localcharacterData   = [],\r\n    localcharacterChoice = [],\r\n    insightData = [],\r\n    stepData    = \"\",\r\n    isSmartChat = \"\",\r\n    localstepData     = [],\r\n    scoreCategoryData = \"\",\r\n    localscoreCategoryData = [],\r\n    assetData       = \"\",\r\n    localassetData  = [],\r\n    tabData         = \"\",\r\n    localtabData    = [],\r\n    modeData        = \"\",\r\n    localmodeData   = [],\r\n    assetsData      = \"\",\r\n    localassetsData = [],\r\n    defaultScene = 0,\r\n    sceneName    = \"\",\r\n    sceneJson    = \"\",\r\n    qxml         = \"\",\r\n    resultTitle  = \"\",\r\n    BGsrc      = \"\",\r\n    began      = \"\",\r\n    updateAnimation = [],\r\n    sceneData       = {},\r\n    localpage_value  = 0,\r\n    data_active = 1,\r\n    state = {},\r\n    menuLayout   = [],\r\n    sceneArr     = [],\r\n    is_scene_load = false,\r\n    show_dom = false;\r\n\r\n    // it need to change by baseUrl\r\n    let check_domain = (window.location.origin.search('localhost') > 0 || window.location.origin.search('demo-a.ucertify.com') > 0);\r\n    let curDomain = (check_domain) ? 'https://www.jigyaasa.info/' : baseUrl;\r\n\r\n    // creating the authoring writable store\r\n    let auth_store = writable({\r\n        xml: \"\",\r\n        activeTab: 1,\r\n        category: 'knowledge_check',\r\n        type: 'simulation',\r\n        content_type: 'q,u',\r\n        content_subtype: '16',\r\n        currentItem: \"\",\r\n        msg : \"\",\r\n        sceneData: \"\",\r\n        tabvalue: 0,\r\n        layout: 0,\r\n        toggleMode: \"\",\r\n        end: 12,\r\n    });\r\n\r\n    // subscribing to the store\r\n    const unsubscribe = auth_store.subscribe((item)=> {\r\n\t\tstate = item;\r\n\t});\r\n\r\n    // calling beforeUpdate which calls before every time there is update\r\n    beforeUpdate(async() => {\r\n        if (is_scene_load) {\r\n\r\n            // checking for authoring and preview mode\r\n            if (editorState.toggleMode != state.toggleMode) {\r\n                if (editorState.toggleMode) {\r\n                    qxml = state.xml;\r\n                    auth_store.update( (item) => {\r\n                        item.xml = qxml;\r\n                        return item;\r\n                    });\r\n\r\n                    getChildXml(qxml);\r\n\r\n                    if (AH.selectAll('#authoringArea form').length) {\r\n                        AH.select('#authoringArea form').remove();\r\n                    }\r\n\r\n                    let formaction = baseUrl + 'sim/smartsim/index.php?insight=1&in_editor=1&insight_navigation=1';\r\n                    let testHtml = '<form method=\"post\" target=\"authoringFrame\" action=\"' + formaction + '\"><input type=\"hidden\" name=\"no_header\" value=\"1\"/><textarea class=\"h\" name=\"qxml\">'+qxml+'</textarea><input type=\"hidden\" name=\"uxml\" value=\"\"/><input type=\"hidden\" name=\"content_guid\" value=\"0\" /></form>';\r\n\r\n                    AH.insert('#authoringArea', testHtml, 'beforeend');\r\n                    let element = AH.selectAll('#title, #stem,.insight_tabs, #remediation, .editor_placeholder');\r\n                    for (let index = 0; index < element.length; index++) {\r\n                        AH.setCss(element[index], {\r\n                            display: 'none',\r\n                        })\r\n                    }\r\n                    AH.insert('#title', '<div id=\"tilteShow\">' + AH.select('#title').innerHTML + '</div>', 'afterend');\r\n                    AH.insert('#stem', '<div id=\"stemShow\">' + AH.select('#stem').innerHTML + '</div>', 'afterend');\r\n                    AH.insert('#remediation', '<div id=\"remediationShow\">' + AH.select('#remediation').innerHTML + '</div>', 'afterend');\r\n                    editorState.activator = true;\r\n                    AH.select('form[target=\"authoringFrame\"]').submit();\r\n                    AH.select(\"#authoringFrame\").style.display = 'block';\r\n                } else {\r\n                    AH.selectAll('#tilteShow, #stemShow, #remediationShow' , 'remove');\r\n                    let element = AH.selectAll('#title, #stem, #remediation, #externalInputs, .insight_tabs, .editor_placeholder');\r\n                    for (let index = 0; index < element.length; index++) {\r\n                        AH.setCss(element[index], {\r\n                            display: 'block',\r\n                        })\r\n                    }\r\n                    try { \r\n                        AH.select(\"#authoringFrame\").contentWindow.responsiveVoice.cancel(); \r\n                    } catch(e) { \r\n                        console.log(e); \r\n                    }\r\n                    AH.select(\"#authoringFrame\").style.display = 'none';\r\n                }\r\n                auth_store.update( (item) => {\r\n                    item.toggleMode = editorState.toggleMode;\r\n                    return item;\r\n                });\r\n            }\r\n\r\n            // checking for change in xml\r\n            if (state.xml != xml) {\r\n                loadModule(xml);\r\n                auth_store.update( (item) => {\r\n                    item.xml = xml;\r\n                    return item;\r\n                });\r\n\r\n                loadScene(state.end);\r\n            }\r\n\r\n            // setting visibles tabs according to the selected scene\r\n            if (state.sceneData) {\r\n                for (let index = 0; index < state.sceneData.scene.length; index++) {\r\n                    if (sceneName == state.sceneData.scene[index].title) {\r\n                        defaultScene = index;\r\n                        if (AH.select('.insightTab8').nodeName && AH.select('.insightTab5').nodeName && AH.select('.insightTab4').nodeName) {\r\n                            if (state.sceneData.scene[defaultScene].anim.length < 1) {\r\n                                AH.select('.insightTab8').style.display = 'none';\r\n                            } else {\r\n                                AH.select('.insightTab8').style.display = 'block';\r\n                            }\r\n                            if (state.sceneData.scene[defaultScene].assets.length < 2) {\r\n                                AH.select('.insightTab4').style.display = 'none';\r\n                                AH.select('.insightTab5').style.display = 'none';\r\n                            } else {\r\n                                AH.select('.insightTab4').style.display = 'block';\r\n                            }\r\n                        }\r\n                    } \r\n                }\r\n            }\r\n        } else {\r\n            // removing editor activator after scene fetch\r\n            editorState.activator = true;\r\n        }\r\n    });\r\n\r\n    // binding up neccessary events \r\n    onMount( async() => {\r\n        // for getting the insight data\r\n        getDataFromApi();\r\n\r\n        AH.listen('body', 'keyup', '#stem .ebook_item_text', function () {\r\n            updateXmlValue();\r\n        });\r\n\r\n\r\n        AH.listen('body', 'keyup', '#search', function (current, event) {\r\n            searchTable(event);\r\n        });\r\n\r\n        AH.listen('body', 'click', '.pagination_btn', function (current, event) {\r\n            data_active = event.target.value;\r\n            AH.selectAll(\".pagination_btn\", \"removeClass\", \"active\");\r\n            current.classList.add('active');\r\n            menuLayout = [];\r\n            createPagination();\r\n            state.end = 24;\r\n        });\r\n\r\n        AH.listen('body', 'click', '#table_list tr', function (current, event) {\r\n            let guid = AH.find(current, 'td').innerText;\r\n            let index = AH.select(\"#currentItem\").value;\r\n            localstepData[index].guids = guid;\r\n            updateXmlValue(event, index, \"\", \"\", guid);\r\n            AH.getBS('#player_modal', 'Modal').hide();\r\n        });\r\n\r\n        document.querySelector(\"#authoringFrame\").addEventListener('load', ()=> { \r\n            if (editorState.toggleMode) {\r\n                editorState.activator = false;\r\n            }\r\n\t\t});\r\n\r\n        AH.select('#preview').style.display = 'none';\r\n        AH.select('#authoringFrame').style.display = 'none';\r\n\r\n        AH.listen('body', 'click', '.tabbutton', function(element) {\r\n            AH.selectAll('.tabbutton', 'removeClass', 'active');\r\n            element.classList.add('active');\r\n            auth_store.update( (item) => {\r\n                item.tabvalue = Number(element.getAttribute('data-tab'));\r\n                return item;\r\n            });\r\n        });\r\n    })\r\n\r\n    // afterUpdate is called after updation of the varibale here it set the content type & also manage sortable event\r\n    afterUpdate( async() => {\r\n        let isFound = itemArray.indexOf(state.type);\r\n        if (isFound > -1) {\r\n            setContentType();\r\n        }\r\n\r\n        if (state.tabvalue == 6) {\r\n            let sortable = new Sortable(AH.select('#sortable'), {\r\n                animation: 150,\r\n                handle: '.allowDraggable',\r\n                onEnd: function (evt) {\r\n                    if (evt.oldIndex > evt.newIndex) {\r\n                        for (let index = evt.oldIndex; index > evt.newIndex; index--) {\r\n                            let tempValue = localstepData[index - 1];\r\n                            localstepData[index-1] = localstepData[index];\r\n                            localstepData[index] = tempValue;\r\n                        }\r\n                    } else if (evt.oldIndex < evt.newIndex) {\r\n                        for (let index = evt.oldIndex; index < evt.newIndex; index++) {\r\n                            let tempValue = localstepData[index + 1];\r\n                            localstepData[index+1] = localstepData[index];\r\n                            localstepData[index] = tempValue;\r\n                        }\r\n                    } else {\r\n                        localstepData[evt.oldIndex] = localstepData[evt.newIndex];\r\n                    }\r\n                    \r\n                    let swap_element = AH.selectAll('.step_swap');\r\n                    swap_element.forEach((el) => {\r\n                        el.click();\r\n                    });\r\n                    AH.select('.insightTab6').click();\r\n                    let insight_timer = setTimeout( ()=> {\r\n                        AH.select('.insightTab7').click();\r\n                        clearTimeout(insight_timer);\r\n                    }, 10);\r\n                },\r\n            });\r\n        }\r\n\r\n    });\r\n\r\n    // used for fetching the insight data from the api\r\n    function getDataFromApi() {\r\n        AH.activate(2);\r\n        AH.ajax({\r\n            type: 'GET',\r\n            url: baseUrl + 'editor/index.php?action=getinsight&insightId=054oF',\r\n            onEnd: function() {\r\n                editorState.activator = false;\r\n                AH.activate(0);\r\n                show_dom = true;\r\n                is_scene_load = true;\r\n            }\r\n        }).then(function(data) {\r\n            data = JSON.parse(data);\r\n            auth_store.update( (item) => {\r\n                item.sceneData = data;\r\n                return item;\r\n            });\r\n\r\n            createPagination();\r\n            loadScene(12);\r\n\r\n            if (AH.selectAll(\"#placeHolderRemediation\").length) {\r\n                let parent = AH.select(\"#placeHolderRemediation\").parentElement;\r\n                parent.classList.add(\"float-start\");\r\n                parent.classList.add(\"col-12\");\r\n                parent.style.zIndex = '9';\r\n            }\r\n        });\r\n    }\r\n\r\n    // responsible for loading the module on the basis of xml\r\n    function loadModule(loadXml) {\r\n        let new_xml = XMLToJSON(loadXml);\r\n        parseXMLAuthoring(new_xml); \r\n    }\r\n\r\n    // create variable and store data in variable and used for parsing the xml\r\n    function parseXMLAuthoring(INSIGHTXML) {\r\n        localstepData          = [];\r\n        localcharacterData \t   = [];\r\n        localcharacterChoice   = [];\r\n        localscoreCategoryData = [];\r\n        localassetData         = [];\r\n        localassetsData        = [];\r\n        localtabData           = [];\r\n        localmodeData          = [];\r\n        insightData            = JSON.parse(INSIGHTXML.smxml.__cdata);\r\n        stepData               = insightData.steps;\r\n        scoreCategoryData      = insightData.scoreCategories;\r\n        assetData              = insightData.assets;\r\n        tabData                = insightData.link;\r\n        modeData               = insightData.mode;\r\n        sceneName              = INSIGHTXML.smxml._sceneName;\r\n        sceneJson              = INSIGHTXML.smxml._sceneJson;\r\n        isSmartChat            = INSIGHTXML.smxml._isSmartChat;\r\n        began\t\t\t\t   = insightData.begin;\r\n        BGsrc\t\t\t\t   = insightData.bgImage;\r\n        resultTitle\t\t\t   = insightData.detail;\r\n        // setting the pagination count according to the total scenes\r\n        if (state.sceneData) {\r\n            for (let index = 0; index < state.sceneData.scene.length; index++) {\r\n                if (sceneName == state.sceneData.scene[index].title) {\r\n                    defaultScene = index;\r\n                } \r\n            }\r\n        }\r\n\r\n        characterData = insightData.characters;\r\n        // set all data of charaters like name id visiblity etc.\r\n\r\n        for (let index = 0; index < characterData.length; index++) {\r\n            localcharacterData = [\r\n                ...localcharacterData, {\r\n                visible  : characterData[index].visible,\r\n                name     : characterData[index].name,\r\n            }];\t\r\n            localcharacterChoice = [\r\n                ...localcharacterChoice, {\r\n                visible  : characterData[index].visible,\r\n                name     : characterData[index].name,\r\n            }];\t\r\n        }\r\n\r\n        assetsData = insightData.assets;\r\n        // set all data of assets like name id visiblity etc\r\n\r\n        for (let index = 0; index < assetsData.length; index++) {\r\n            localassetsData = [\r\n                ...localassetsData, {\r\n                name         : assetsData[index].asset,\r\n                visible      : assetsData[index].visible,\r\n                assets_click : assetData[index].assets_click,\r\n                tooltip      : assetData[index].tooltip,\r\n                anim         : assetData[index].anim,\r\n                focus\t\t : assetData[index].focus,\r\n            }];\t\r\n        }\r\n\r\n        // push all data into variables\r\n        if (Object.keys(stepData).length) {\r\n            for (let index = 0; index < stepData.length; index++) {\r\n                if (typeof stepData[index].image == 'undefined') {\r\n                    stepData[index].image = '';\r\n                }\r\n                localstepData = [ \r\n                    ...localstepData, {\r\n                    id      \t\t : stepData[index].id,\r\n                    name     \t\t : stepData[index].name,\r\n                    allowChoices     : stepData[index].allowChoices,\r\n                    camera     \t\t : stepData[index].camera,\r\n                    voice     \t\t : stepData[index].voice,\r\n                    message     \t : stepData[index].message,\r\n                    stepIndex     \t : stepData[index].stepIndex,\r\n                    guids     \t     : stepData[index].guids,\r\n                    choicesScore     : stepData[index].choicesScore,\r\n                    state\t\t\t : stepData[index].state,\r\n                    speech\t\t\t : stepData[index].speech,\r\n                    auto\t\t\t : stepData[index].auto,\r\n                    choicesCategory  : stepData[index].choicesCategory,\r\n                    condition        : stepData[index].condition,\r\n                    image            : stepData[index].image,\r\n                    choices     \t : [],\r\n                    title\t\t\t : stepData[index].title,\r\n                    important_node   : stepData[index].important_node,\r\n                    level_text       : stepData[index].level_text\r\n                }];\r\n            }\r\n            for (let index = 0; index < localstepData.length; index++) {\r\n                for (let sub_index = 0; sub_index < stepData[index].choices.length; sub_index++) {\r\n                    if (typeof stepData[index].choices[sub_index].fdbk_char_cam == 'undefined') {\r\n                        stepData[index].choices[sub_index].fdbk_char_cam = stepData[index].choices[sub_index].camera;\r\n                    }\r\n                    if (typeof stepData[index].choices[sub_index].fdbk_char_voice == 'undefined') {\r\n                        stepData[index].choices[sub_index].fdbk_char_voice = stepData[index].choices[sub_index].voice;\r\n                    }\r\n                    localstepData[index].choices = [ \r\n                        ...localstepData[index].choices, {\r\n                        id      \t\t : stepData[index].choices[sub_index].id,\r\n                        correct     \t : stepData[index].choices[sub_index].correct,\r\n                        text             : stepData[index].choices[sub_index].text,\r\n                        feedback         : stepData[index].choices[sub_index].feedback,\r\n                        choicesScore     : stepData[index].choices[sub_index].choicesScore,\r\n                        choicesCategory  : stepData[index].choices[sub_index].choicesCategory,\r\n                        stepIndex        : stepData[index].choices[sub_index].stepIndex,\r\n                        feedback_charact : stepData[index].choices[sub_index].feedback_charact,\r\n                        fdbk_char_cam    : stepData[index].choices[sub_index].fdbk_char_cam,\r\n                        fdbk_char_voice  : stepData[index].choices[sub_index].fdbk_char_voice\r\n                    }];\t\r\n                }\r\n            }\r\n        }\r\n        if (Object.keys(scoreCategoryData).length) {\r\n            for (let index = 0; index < scoreCategoryData.length; index++) {\r\n                localscoreCategoryData = [\r\n                    ...localscoreCategoryData, {\r\n                    id      : scoreCategoryData[index].id,\r\n                    name    : scoreCategoryData[index].name,\r\n                    value   : scoreCategoryData[index].value,\r\n                }];\t\t\r\n            }\r\n        }\r\n        if (Object.keys(assetData).length) {\r\n            for (let index = 0; index < assetData.length; index++) {\r\n                localassetData = [\r\n                    ...localassetData, {\r\n                    src         : assetData[index].src,\r\n                    title       : assetData[index].title,\r\n                    icon        : assetData[index].icon ,\r\n                    text        : assetData[index].text ,\r\n                }];\t\t\r\n            }\r\n        }\r\n        if (Object.keys(tabData).length) {\r\n            for (let index = 0; index < tabData.length; index++) {\r\n                localtabData = [ ...localtabData , {\r\n                    title      : tabData[index].title,\r\n                    name       : tabData[index].name ,\r\n                    guid       : tabData[index].guid ,\r\n                    focus      : tabData[index].focus ,\r\n                    dialog     : tabData[index].dialog,\r\n                }];\r\n            }\r\n        }\r\n\r\n        localmodeData = (modeData) ? modeData :  0;\r\n    }\r\n\r\n    // for uploading the image \r\n    function onChoiceImageSelect(event, i) {\r\n        let files = event.target.files[0];\r\n        const fd = new FormData();\r\n        let rand =  Math.floor(100 * Math.random()) + 1;\r\n        let image_name = 'uc_' + rand + 'choice' + i;\r\n        if (files.size > 32768) {\r\n            fd.append('image',files, '/' + image_name + '.png');\r\n            AH.select('#bgResult').nodeName && AH.select(\"#bgResult\").setAttribute(\"src\", curDomain + 'labs/insight/Images/loading.gif');\r\n            AH.select(\"#samplechoice_image\" + i).nodeName && AH.select(\"#samplechoice_image\" + i).setAttribute(\"src\", curDomain + 'labs/insight/Images/loading.gif');\r\n            \r\n            AH.ajax({\r\n                type:'POST',\r\n                url: baseUrl+'editor/index.php?func=choiceupload&folder=Choice_question_images',\r\n                data: fd,\r\n                formData: true,\r\n            }).then(function() {\r\n                AH.select(\"#result_img\").nodeName && AH.select(\"#result_img\").setAttribute('value', curDomain + 'labs/insight/Choice_question_images/' + image_name + '.png');\r\n                AH.select(\"#choice_question_image\" + i).nodeName && AH.select(\"#choice_question_image\" + i).setAttribute('value', curDomain + 'labs/insight/Choice_question_images/' + image_name + '.png');\r\n                AH.select(\"#result_img\").nodeName && AH.select(\"#result_img\").click();\r\n                AH.select(\"#choice_question_image\" + i).nodeName && AH.select(\"#choice_question_image\" + i).click();\r\n            })\r\n        } else {\r\n            if (AH.select(\"#result_img\").nodeName) {\r\n                AH.select(\"#result_img\").innerText = \"File size is too small\";\r\n            }\r\n            if (AH.select(\"#choice_question_image\").nodeName) {\r\n                AH.select(\"#choice_question_image\").innerText = \"File size is too small\";\r\n            }\r\n            swal(\"File size is too small\");\r\n        }\r\n    }\r\n\r\n    // for removing the tags in the tags\r\n    function removeTags(text) {\r\n        let strippedText = text.replace(/(<([^>]+)>)/ig, '').replace(/\\n/g, ' ');\r\n        return strippedText;\r\n    }\r\n\r\n    // for setting the content type and content subtype\r\n    function setContentType() {\r\n        let content_type = '', content_subtype = '';\r\n        switch (state.type) {\r\n            case \"terminal\":\r\n                content_type = \"q,f\";\r\n                content_subtype = \"13\";\r\n                break;\r\n            case \"lablink\":\r\n                content_type = \"q\";\r\n                content_subtype = \"25\";\r\n                break;\r\n            case \"playground\":\r\n                content_type = \"q\";\r\n                content_subtype = \"24\";\r\n                break;\r\n            case \"simulation\":\r\n                content_type = \"q\";\r\n                content_subtype = \"16\";\r\n                break;\r\n            default:\r\n                content_type = content_subtype = '';\r\n                break;\r\n        }\r\n        if (state.content_type != content_type || state.content_subtype != content_subtype) {\r\n            auth_store.update( (item) => {\r\n                item.content_type = content_type;\r\n                item.content_subtype = content_subtype;\r\n                return item;\r\n            });\r\n        }\r\n    }\r\n\r\n    // For getting the snippet \r\n    function getSnippet() {\r\n        AH.selectAll(\".list_content, #not_found, #info_data, .search_list\", 'addClass', 'h')\r\n        AH.select(\"#not_found\").innerText = l.no_record;\r\n        if (state.content_type != '' || state.content_subtype != '') {\r\n            if (editor.course) {\r\n                AH.select(\"#list_process\").classList.remove(\"h\");\r\n                AH.ajax({\r\n                    url: baseUrl + 'editor/index.php?action=getSnippet&ajax=1',\r\n                    data: {\r\n                        course_code: editor.course.split('.')[0],\r\n                        content_type: state.content_type,\r\n                        content_subtype: state.content_subtype\r\n                    },\r\n                    type: 'post',\r\n                }).then(function (response) {\r\n                    if (response != 0) {\r\n                        let data = JSON.parse(response);\r\n                        let table = '';\r\n                        for (let index in data) {\r\n                            table += '<tr><td>' + index + '</td>';\r\n                            table += '<td>' + data[index]['snippet'] + '</td>';\r\n                            table += '<td class=\"text-center player_modal_tooltip\" data-bs-toggle=\"tooltip\" title=\"' + ((itemIcons[state.content_subtype]) ? (itemIcons[state.content_subtype].title) : '') + '\"><i class=\"' + ((itemIcons[state.content_subtype]) ? (itemIcons[state.content_subtype].icon) : '') + '\"></i></td></tr>';\r\n                        }\r\n                        AH.select(\"#table_list\").innerHTML = table;\r\n                        if (table == '') {\r\n                            AH.selectAll(\"#not_found\", 'removeClass', \"h\");\r\n                        } else {\r\n                            AH.selectAll(\"#list_content_tbl, .search_list\", 'removeClass', \"h\");\r\n                        }\r\n                        let tooltip_timer = setTimeout(function() {\r\n                            AH.enableBsAll('.player_modal_tooltip', 'Tooltip', {\r\n                                container: '#player_modal'\r\n                            });\r\n                            clearTimeout(tooltip_timer);\r\n                        }, 100);\r\n                    } else {\r\n                        AH.selectAll(\"#not_found\", 'removeClass', \"h\");\r\n                    }\r\n                    AH.select(\"#list_process\").classList.add(\"h\");\r\n                }).catch(function() {\r\n                    AH.selectAll(\"#list_process, .search_list\", 'addClass', \"h\");\r\n                    AH.selectAll(\"#not_found\", 'removeClass', \"h\");\r\n                    AH.showmsg(l.unable_to_get);\r\n                    AH.activate(0);\r\n                });\r\n            } else {\r\n                AH.selectAll(\"#not_found\", 'removeClass', \"h\");\r\n                AH.select(\"#not_found\").innerText = l.load_course;\r\n            }\r\n        }\r\n    }\r\n\r\n    // for searching in the table\r\n    function searchTable(event) {\r\n        let input_val = event.target.value, count = 0;\r\n        let table_tr = AH.selectAll('.table_search tbody tr');\r\n        for (let index = 0; index < table_tr.length; index++) {\r\n            let text = table_tr[index].innerText;\r\n            if (text && input_val && (text.toLowerCase().indexOf(input_val.toLowerCase()) == -1)) {\r\n                table_tr[index].classList.add('h');\r\n            } else {\r\n                table_tr[index].classList.remove('h');\r\n                count++;\r\n            }\r\n        }\r\n        if (count > 0) {\r\n            AH.select('#not_found').classList.add('h');\r\n            AH.select('#list_content_tbl').classList.remove('h');\r\n        } else {\r\n            AH.select('#not_found').classList.remove('h');\r\n            AH.select('#list_content_tbl').classList.add('h');\r\n        }\r\n    }\r\n\r\n    // for creating the pagination on scene tab\r\n    function createPagination() {\r\n        if (state.sceneData.scene.length > 12 * data_active) {\r\n            data_active = parseInt(data_active) + 1;\r\n            let end = 12 * data_active;\r\n            menuLayout = [\r\n                ...menuLayout, \r\n                {\r\n                    data_active: data_active,\r\n                    end: end\r\n                }\r\n            ];\r\n        } else {\r\n            menuLayout = [];\r\n        }\r\n    }\r\n\r\n    // whenever there is change in the knowledge item dropdown\r\n    function handlePlayer(event) {\r\n        AH.selectAll(\".list_content, #not_found, .search_list\", 'addClass', 'h')\r\n        AH.selectAll(\"#info_data\", 'removeClass', 'h')\r\n        AH.select('#table_list').innerHTML = '';\r\n        auth_store.update( (item) => {\r\n            item.msg = '';\r\n            return item;\r\n        });\r\n    }\r\n\r\n    // for loading the scene\r\n    function loadScene(end) {\r\n        localpage_value = end;\r\n        sceneArr = [];\r\n        state.sceneData && state.sceneData.scene.map((data, i)=>{\r\n            if (i < end && i < state.sceneData.scene.length) {\r\n                if (i == defaultScene) {\r\n                    sceneArr = [\r\n                        ...sceneArr, {\r\n                            key: i,\r\n                            background: '#F0F0F0',\r\n                            alt: data.title,\r\n                            type: 0\r\n                        }\r\n                    ]\r\n                } else if (data.by == user['user_guid']) {\r\n                    sceneArr = [\r\n                        ...sceneArr, {\r\n                            key: i,\r\n                            alt: data.title,\r\n                            type: 1\r\n                        }\r\n                    ]\r\n                } else {\r\n                    sceneArr = [\r\n                        ...sceneArr, {\r\n                            key: i,\r\n                            alt: data.title,\r\n                            type: 2\r\n                        }\r\n                    ]\r\n                }\r\n            }\r\n        });\r\n        auth_store.update( (item) => {\r\n            item.layout = item.layout++;\r\n            return item;\r\n        });\r\n    }\r\n    \r\n    // for updating the xml value this function is responsible\r\n    function updateXmlValue(event, index ,parentIndex=\"\", selector , value) {\r\n        if (event) {\r\n            value = event.target.value;\r\n        }\r\n        let xml = XMLToJSON(state.xml);\r\n        switch(selector) { \r\n            case \"addItem\":\r\n                AH.getBS('#player_modal', 'Modal').show();\r\n                auth_store.update( (item) => {\r\n                    item.currentItem = index;;\r\n                    return item;\r\n                });\r\n                break;\r\n            case \"setCharacter\" : \r\n                localcharacterData[index].name = value;\r\n                localcharacterChoice[index].name = value;\r\n                sceneData = state.sceneData;\r\n                sceneData.scene[defaultScene].characters[index].name = value;\r\n                auth_store.update( (item) => {\r\n                    item.sceneData = sceneData;\r\n                    return item;\r\n                });\r\n                break;\r\n            case \"setCategoryName\" :\r\n                localscoreCategoryData[index].name = value;\r\n                break;\r\n            case \"deleteStep\" :\r\n                localstepData.splice(index, 1);\r\n                break;\r\n            case \"deleteScene\" :\r\n                swal({\r\n                    title: \"Are you sure?\",\r\n                    text: \"Once deleted, you will not be able to recover this scene!\",\r\n                    type: \"warning\",\r\n                    buttons: true,\r\n                    dangerMode: true,\r\n                }).then(function(isConfirm) {\r\n                    if (!isConfirm && index > 0) {\r\n                        state.sceneData.scene.splice(index,1);\r\n                        var output = JSON.stringify(state.sceneData);\r\n                        AH.select('#pagination_btn1').click();\r\n                        AH.ajax({\r\n                            type: 'POST',\r\n                            data: {myData:output},\r\n                            url: baseUrl+'editor/index.php?action=setinsight&insightId=054oF',\r\n                        }).then( () => {\r\n                            swal(\"Delete successfully\");\r\n                        });\r\n                    }\r\n                });\r\n                break;\r\n            case \"addStep\" :\r\n                var avaliableCharacter = 0;\r\n                for (let increment = 0; increment < localcharacterData.length; increment++) {\r\n                    if (localcharacterData[increment].visible == 0) {\r\n                        avaliableCharacter = increment;\r\n                        break;\r\n                    }\r\n                }\r\n                localstepData[localstepData.length] = {\r\n                    'id'          : localstepData.length,\r\n                    'name'        : avaliableCharacter,\r\n                    'allowChoices': 0,\r\n                    \"camera\"      : state.sceneData.scene[defaultScene].characters[avaliableCharacter].camera,\r\n                    \"speech\"      : 0,\r\n                    \"auto\"        : 0,\r\n                    \"state\"       : \"talking\",\r\n                    \"voice\"       : state.sceneData.scene[defaultScene].characters[avaliableCharacter].voice,\r\n                    \"choices\"     : [],\r\n                    \"message\"     : \"\",\r\n                    \"level_text\"   : \"\",\r\n                    \"important_node\"   : \"\"\r\n                };\r\n                break;\r\n            case \"addChoice\" :\r\n                var avaliableCharacterChoice = 0;\r\n                for (let increment = 0; increment < localcharacterChoice.length; increment++) {\r\n                    if (localcharacterChoice[increment].visible == 0) {\r\n                        avaliableCharacterChoice = increment;\r\n                        break;\r\n                    }\r\n                }\r\n                localstepData[index].choices[localstepData[index].choices.length] = {\r\n                    'id'              : localstepData[index].choices.length,\r\n                    \"choicesScore\"    : 0,\r\n                    \"choicesCategory\" : 0,\r\n                    \"correct\"         : 0,\r\n                    \"text\"            : \"\",\r\n                    \"feedback\"        : \"\",\r\n                    \"feedback_charact\": avaliableCharacterChoice,\r\n                    \"fdbk_char_cam\"   : state.sceneData.scene[defaultScene].characters[avaliableCharacterChoice].camera,\r\n                    \"fdbk_char_voice\" : state.sceneData.scene[defaultScene].characters[avaliableCharacterChoice].voice\r\n                };\r\n                break;\r\n            case \"deleteChoice\" :\r\n                localstepData[parentIndex].choices.splice(index,1);\r\n                break;\r\n            case \"assetVisible\" :\r\n                if (localassetsData[index].visible == 0) {\r\n                    localassetsData[index].visible = 1;\r\n                } else {\r\n                    localassetsData[index].visible = 0;\r\n                }\r\n                sceneData = state.sceneData;\r\n                sceneData.scene[defaultScene].assets[index].visible = value;\r\n                auth_store.update( (item) => {\r\n                    item.sceneData = sceneData;\r\n                    return item;\r\n                });\r\n                break;\r\n            case \"setAssetsClick\" :\r\n                localassetsData[index].assets_click = parseInt(value);\r\n                break;\r\n            case \"setTooltip\" :\r\n                localassetsData[index].tooltip = value;\r\n                break;\r\n            case \"assetAnim\" :\r\n                localassetsData[index].anim = Number(value);\r\n                localassetsData[index].focus = state.sceneData.scene[defaultScene].anim[Number(value)].name;\r\n                sceneData = state.sceneData;\r\n                sceneData.scene[defaultScene].assets[index].anim = Number(value);\r\n                auth_store.update( (item) => {\r\n                    item.sceneData = sceneData;\r\n                    return item;\r\n                });\r\n                break;\r\n            case \"updateChoiceType\" :\r\n                //Added for alert switch blank page issue.\r\n                if (localstepData[index].name   == \"\") {\r\n                    localstepData[index].name = 0;\r\n                }\r\n\r\n                if (localstepData[index].image == \"\") {\r\n                    localstepData[index].image = 0;\r\n                }\r\n\r\n                var avaliableCharacterChoice = 0;\r\n                for (let increment = 0; increment < localcharacterChoice.length; increment++) {\r\n                    if (localcharacterChoice[increment].visible == 0) {\r\n                        avaliableCharacterChoice = increment;\r\n                        break;\r\n                    }\r\n                }\r\n                localstepData[index].allowChoices  = parseInt(value);\r\n                if (localstepData[index].choices.length === 0) {\r\n                    if (value == 1 || value == 3) {\r\n                        localstepData[index].choices[localstepData[index].choices.length] = {\r\n                            'id'              : localstepData[index].choices.length,\r\n                            \"choicesScore\"    : 0,\r\n                            \"choicesCategory\" : 0,\r\n                            \"correct\"         : 0,\r\n                            \"text\"            : \"\",\r\n                            \"feedback\"        : \"\",\r\n                            \"image\"\t\t      : \"\",\r\n                            \"feedback_charact\": avaliableCharacterChoice,\r\n                            \"fdbk_char_cam\"   : state.sceneData.scene[defaultScene].characters[avaliableCharacterChoice].camera,\r\n                            \"fdbk_char_voice\" : state.sceneData.scene[defaultScene].characters[avaliableCharacterChoice].voice\r\n                        };\r\n                    }\r\n                }\r\n                if (value == 2 || value == 4 || value == 5) {\r\n                    localstepData[index].guids = \"\";\r\n                    localstepData[index].cvalue = \"\";\r\n                    localstepData[index].choicesScore = 10;\r\n                    localstepData[index].choicesCategory = 0;\r\n                    localstepData[index].message = \"\";\r\n                }\r\n                if (value == 7) {\r\n                    localstepData[index].camera = 0;\r\n                    localstepData[index].name   = \"\";\r\n                    localstepData[index].voice  = 1;\r\n                    localstepData[index].image  = \"\";\r\n                }\r\n                break;\r\n            case \"updateStepChracter\" :\r\n                localstepData[index].voice = state.sceneData.scene[defaultScene].characters[value].voice;\r\n                localstepData[index].camera = state.sceneData.scene[defaultScene].characters[value].camera;\r\n                localstepData[index].name  = parseInt(value);\r\n                break;\r\n            case \"updateFeedbackChracter\" :\r\n                    localstepData[parentIndex].choices[index].feedback_charact = parseInt(value);\r\n                    localstepData[parentIndex].choices[index].fdbk_char_voice = state.sceneData.scene[defaultScene].characters[value].voice;\r\n                    localstepData[parentIndex].choices[index].fdbk_char_cam  = state.sceneData.scene[defaultScene].characters[value].camera;\r\n                    break;\r\n            case \"updateSpeech\" :\r\n                if (localstepData[index].speech == 0) {\r\n                    localstepData[index].speech  = 1;\r\n                } else {\r\n                    localstepData[index].speech  = 0;\r\n                }\r\n                break;\r\n            case \"updateAuto\" :\r\n                if (localstepData[index].auto == 0) {\r\n                    localstepData[index].auto  = 1;\r\n                } else {\r\n                    localstepData[index].auto  = 0;\r\n                }\r\n                break;\r\n            \r\n            case \"setImageSrc\":\r\n                localstepData[index].image = value;\r\n                break;\r\n            case \"updateIntroVoice\" :\r\n                localstepData[index].voice = parseInt(value);\r\n                break;\r\n            case \"setStepStatement\" :\r\n                // For remove the html tag to be seen in smart chat scene in chat box\r\n                if (sceneName == \"Smart Chat\") {\r\n                    if (value) {\r\n                        value = value.toString().replace(/<[^>]*>/gm, '');\r\n                    }\r\n                }\r\n                localstepData[index].message = value;\r\n                break;\r\n            case \"setStepBTN\" :\r\n                localstepData[index].btn = value;\r\n                break;\r\n            case \"setStepanim\" :\r\n                localstepData[index].anim = value;\r\n                break;\r\n            \r\n            case \"setStepCondition\" :\r\n                localstepData[index].condition = value;\r\n                break;\r\n            case \"setGuids\" :\r\n                localstepData[index].guids = value;\r\n                break;\r\n            case \"setChoiceText\" :\r\n                localstepData[parentIndex].choices[index].text = value;\r\n                break;\r\n            case \"setChoiceFeedback\" :\r\n                localstepData[parentIndex].choices[index].feedback = value;\r\n                break;\r\n            case \"setChoiceCategoryValue\" :\r\n                localstepData[parentIndex].choices[index].choicesScore = parseInt(event.target.value);\r\n                break;\r\n            case \"setChoiceStepIndex\" :\r\n                if (event.target.value < 0 || event.target.value > localstepData.length) {\r\n                    localstepData[parentIndex].choices[index].stepIndex = parentIndex;\r\n                } else {\r\n                    localstepData[parentIndex].choices[index].stepIndex = event.target.value;\r\n                }\r\n                break;\r\n            case \"setChoiceCorrect\" :\r\n                localstepData[parentIndex].choices[index].correct = parseInt(value);\r\n                break;\r\n            case \"setChoiceCorrectR\":\r\n                for (let dd = 0; dd < localstepData[parentIndex].choices.length; dd++) {\r\n                    if (index == dd) {\r\n                        localstepData[parentIndex].choices[dd].correct = Number(value);\t\r\n                    } else {\r\n                        localstepData[parentIndex].choices[dd].correct = 0;\r\n                    }\r\n                }\r\n                break;\r\n            case \"setChoiceCategory\" :\r\n                localstepData[parentIndex].choices[index].choicesCategory = Number(value);\r\n                break;\r\n            case \"setStepCategory\" :\r\n                localstepData[index].choicesCategory = parseInt(value);\r\n                break;\r\n            case \"setStepCategoryValue\" :\r\n                localstepData[index].choicesScore = event.target.value;\r\n                break;\r\n            case \"addCategory\" :\r\n                localscoreCategoryData[localscoreCategoryData.length] = {\r\n                    'id'    : localscoreCategoryData.length,\r\n                    'name'  : \"\",\r\n                    'value' : \"0\",\r\n                };\r\n                break;\r\n            case \"deleteCategory\" :\r\n                auth_store.update( (item) => {\r\n                    item.open = false;\r\n                    return item;\r\n                });\r\n\r\n                if (localscoreCategoryData.length > 1) {\r\n                    localscoreCategoryData.splice(index,1);\r\n                } else {\r\n                    swal(\"You cannot delete default node\");\r\n                }\r\n                break;\r\n            case \"addtab\" :\r\n                localtabData[localtabData.length] = {\r\n                    'title' : \"\",\r\n                    'name'  : \"\",\r\n                    'guid'  : \"\",\r\n                    'dialog': \"\",\r\n                };\r\n                break;\r\n            case \"setTabTitle\" :\r\n                localtabData[index].title = value;\r\n                break;\r\n            case \"setTabDialog\" :\r\n                localtabData[index].dialog = value;\r\n                break;\r\n            case \"setTabName\" :\r\n                localtabData[index].name = value;\r\n                localtabData[index].focus = state.sceneData.scene[defaultScene].anim[value].name;\r\n                break;\r\n            case \"setTabGuid\" :\r\n                localtabData[index].guid = value;\r\n                break;\r\n            case \"deleteTab\" :\r\n                localtabData.splice(index, 1);\r\n                break;\r\n            case \"setScene\" :\r\n                defaultScene = value;\r\n                sceneName    = state.sceneData.scene[defaultScene].title;\r\n                sceneJson    = state.sceneData.scene[defaultScene].json;\r\n                isSmartChat    = (state.sceneData.scene[defaultScene].is_smartchat == \"1\") ? \"1\" : \"0\";\r\n                let sceneCharacters = [];\r\n                if (state.sceneData.scene[defaultScene].assets.length < 2) {\r\n                    AH.select('.insightTab4').style.display = 'none';\r\n                    AH.select('.insightTab5').style.display = 'none';\r\n                } else {\r\n                    AH.select('.insightTab4').style.display = 'block';\r\n                }\r\n                for (let i = 0; i < state.sceneData.scene[defaultScene].characters.length; i++) {\r\n                    sceneCharacters = [\r\n                        ...sceneCharacters, {\r\n                        id     : i,\r\n                        name   : state.sceneData.scene[defaultScene].characters[i].name,\r\n                        visible: state.sceneData.scene[defaultScene].characters[i].visible\r\n                    }];\r\n                }\r\n                let sceneAssets = [];\r\n                for (let i = 0 ; i < state.sceneData.scene[defaultScene].assets.length; i++) {\r\n                    sceneAssets = [\r\n                        ...sceneAssets, {\r\n                        name    : state.sceneData.scene[defaultScene].assets[i].asset,\r\n                        visible : state.sceneData.scene[defaultScene].assets[i].visible,\r\n                        anim    : state.sceneData.scene[defaultScene].assets[i].anim,\r\n                        tooltip : state.sceneData.scene[defaultScene].assets[i].tooltip,\r\n                    }];\r\n                }\r\n                localcharacterData     = sceneCharacters;\r\n                localcharacterChoice   = sceneCharacters;\r\n                localassetsData \t   = sceneAssets;\r\n                localscoreCategoryData = [];\r\n                localscoreCategoryData[localscoreCategoryData.length] = {\r\n                    'id'    : localscoreCategoryData.length,\r\n                    'name'  : \"Mission\",\r\n                    'value' : \"0\",\r\n                };\r\n                localstepData = [];\r\n                if (state.sceneData.scene[defaultScene].anim.length < 1) {\r\n                    AH.select('.insightTab8').style.display = 'none';\r\n                } else {\r\n                    AH.select('.insightTab8').style.display = 'block';\r\n                }\r\n                loadScene(localpage_value);\r\n                break;\r\n            case \"updateMode\" :\r\n                localmodeData = parseInt(value);\r\n                break;\r\n            case \"voiceData2\" :\r\n                for (let indent = 0; indent < localstepData.length; indent++) {\r\n                    if (localstepData[indent].name == index) {\r\n                        localstepData[indent].voice = parseInt(value);\r\n                    }\r\n                }\r\n                state.sceneData.scene[defaultScene].characters[index].voice = parseInt(value);\r\n                break;\r\n            case \"visibleCharacter\" :\r\n                if (localcharacterData[index].visible == 0) {\r\n                    localcharacterData[index].visible = 1;\r\n                } else {\r\n                    localcharacterData[index].visible = 0;\r\n                }\r\n                sceneData = state.sceneData;\r\n                sceneData.scene[defaultScene].characters[index].visible = value;\r\n                auth_store.update( (item) => {\r\n                    item.sceneData = sceneData;\r\n                    return item;\r\n                });\r\n                state.sceneData.scene[defaultScene].characters[index].visible = value;\r\n                break;\r\n            case \"trigerchoiceimage\" :\r\n                AH.select(\"#choiceimg\"+index).click();\r\n                break;\r\n            case \"titleUpdate\":\r\n                resultTitle = value;\r\n                break;\r\n            case \"BGupdate\":\r\n                BGsrc = value;\r\n                AH.select(\"#bgResult\").setAttribute('src',value);\r\n                break;\r\n            case \"beganupdate\":\r\n                began = value;\r\n                /* It not allowed to add more than one word at the name of Begin button */\r\n                /*let begin = value.replace(/[^a-zA-Z]/gi, '');\r\n                began = begin;*/\r\n                AH.select(\"#begin_Button\").value = began;\r\n                break;\r\n            case \"labelupdate\":\r\n                localstepData[index].level_text = event.target.value;\r\n                break;\r\n            case \"updateNote\":\r\n                localstepData[index].important_node = event.target.value;\r\n                break;\r\n        }\r\n\r\n        for (let index = 0; index < localscoreCategoryData.length; index++) {\r\n            localscoreCategoryData[index].value = 0;\r\n        }\r\n\r\n        for (let index = 0; index < localstepData.length; index++) {\r\n            if (localstepData[index].allowChoices == 1 || localstepData[index].allowChoices == 3 ||  localstepData[index].allowChoices == 6) { \r\n                for (let sub_index = 0; sub_index < localstepData[index].choices.length; sub_index++) {\r\n                    let choicesScoreIndex = localstepData[index].choices[sub_index].choicesCategory;\r\n                    localscoreCategoryData[choicesScoreIndex].value += parseInt(localstepData[index].choices[sub_index].choicesScore);\r\n                    localstepData[index].choices[sub_index].id = sub_index;\r\n                }\r\n            } \r\n            if (localstepData[index].allowChoices == 2 || localstepData[index].allowChoices == 4 || localstepData[index].allowChoices ==  5) {\r\n                var scoreIndex = localstepData[index].choicesCategory;\t\r\n                localscoreCategoryData[scoreIndex].value += parseInt(localstepData[index].choicesScore);\t\r\n            }\r\n            localstepData[index].id = index;\r\n        }\r\n\r\n        xml.smxml._sceneName = sceneName;\r\n        xml.smxml._sceneJson = sceneJson;\r\n        xml.smxml._isSmartChat = isSmartChat;\r\n        let insightupdatedData = { 'characters': localcharacterData, 'steps': localstepData, 'scoreCategories': localscoreCategoryData, 'assets': localassetsData, 'link': localtabData, 'mode': localmodeData, 'bgImage': BGsrc, 'detail': resultTitle, 'begin': began, 'insight_intro': tinyMCE.get(\"stem\").getContent({ format: 'text' }).trim()}\r\n        insightupdatedData = JSON.stringify(insightupdatedData, null, 4);\r\n        xml.smxml.__cdata = insightupdatedData;\r\n        xml = JSONToXML(xml);\r\n\t\tif (xml.indexOf('<!--[CDATA') > -1) {\r\n\t\t\txml = xml.replace('<!--[CDATA', '<![CDATA').replace(']]-->', ']]>');\r\n        }\r\n        getChildXml(xml);\r\n    }\r\n\r\n    // for deleting the steps or mission\r\n    function triggerDelete(event, type, index) {\r\n        swal({\r\n            text: l.del_confirmation,\r\n            type: \"warning\",\r\n            buttons: true,\r\n            dangerMode: true,\r\n        }).then(function(isConfirm) {\r\n            if (isConfirm) {\r\n                updateXmlValue(event, index, \"\", type);\r\n            }\r\n        });\r\n    }\r\n    \r\n</script>\r\n\r\n<div id=\"authoringArea\">\r\n    <center>\r\n        <div id=\"frame\">\r\n            <iframe id=\"authoringFrame\" title=\"insight_frame\" name=\"authoringFrame\" height=\"580\" width=\"94%\" ></iframe>\r\n        </div>\r\n    </center>\r\n    \r\n    {#if state.tabvalue == 6}\r\n        <div id=\"player_modal\" class=\"modal player_dialog fade\" tabIndex=\"-1\">\r\n            <div class=\"modal-dialog modal-dialog-centered\">\r\n                <div class=\"modal-content\">\r\n                    <div class=\"modal-body overflow-y\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-6\">\r\n                                <div class=\"input-group\">\r\n                                    <label class=\"input-group-text\" for=\"module_type\">{l.module}</label>\r\n                                    <!-- svelte-ignore a11y-no-onchange -->\r\n                                    <select id=\"module_type\" on:change={handlePlayer} bind:value={state.type} class=\"form-select\">\r\n                                        <option value=\"simulation\">{l.simulation_txt}</option>\r\n                                        <option value=\"playground\">{l.playground}</option>\r\n                                        <option value=\"terminal\">{l.terminal_txt}</option>\r\n                                        <option value=\"lablink\">{l.livelab}</option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <input type=\"hidden\" name=\"currentItem\" id=\"currentItem\" value={state.currentItem}/>\r\n                            <div class=\"col-12 mb-0 mt-3 px-0 search_list h\">\r\n                                <input class=\"form-control search\" id=\"search\" name=\"search\" type=\"text\" placeholder={l.search_item_txt}/>\r\n                            </div>\r\n                            <div class=\"col-12 px-0 float-start\" style=\"max-height: 300px;\">\r\n                                <table id=\"list_content_tbl\" class=\"h list_content table table-hover table_list table_search w-100\">\r\n                                    <thead class=\"always_show\">\r\n                                        <tr>\r\n                                            <th class=\"text-dark border\">{l.item_id}</th>\r\n                                            <th class=\"text-dark border\">{l.title}</th>\r\n                                            <th class=\"text-dark border\">{l.type}</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody id=\"table_list\"></tbody>\r\n                                </table>\r\n                                <div class=\"alert alert-info col-12 float-start mb-0 mt-4\" id=\"info_data\">{l.select_instruction}</div>\r\n                                <div class=\"alert alert-danger mt-2 col-12 float-start h\" id=\"not_found\">{l.no_record}</div>\r\n                                <center id=\"list_process\" class=\"mt-4 pt-1 h\">\r\n                                    <Loader size={60} msg={'Please Wait'} />\r\n                                </center>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"modal-footer\">\r\n                        <button type=\"button\" class=\"btn btn-light\" data-bs-dismiss=\"modal\">{l.cancel}</button>\r\n                        <button type=\"button\" class=\"btn btn-secondary\" on:click={getSnippet}>{l.list_content}</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    {/if}\r\n\r\n    {#if show_dom}\r\n        <div class=\"insight_tabs\">\r\n            <div class=\"btn-toolbar justify-content-between\" role=\"toolbar\" aria-label=\"Tabs\">\r\n                <div class=\"btn-group col-12 flex-wrap px-0\" role=\"group\" aria-label=\"Insight Tabs\">\r\n                    <button type=\"button\" data-tab=\"0\" class:active = {state.tabvalue == 0} class=\"btn btn-outline-secondary tabbutton insightTab1\">{l.scene}</button>\r\n                    <button type=\"button\" data-tab=\"1\" class:active = {state.tabvalue == 1} class=\"btn btn-outline-secondary tabbutton insightTab2\">{l.intro}</button>\r\n                    <button type=\"button\" data-tab=\"2\" class:active = {state.tabvalue == 2} class=\"btn btn-outline-secondary tabbutton insightTab3\">{l.characters}</button>\r\n                    <button type=\"button\" data-tab=\"3\" class:active = {state.tabvalue == 3} class=\"btn btn-outline-secondary tabbutton insightTab4 h\">{l.assets}</button>\r\n                    <button type=\"button\" data-tab=\"4\" class:active = {state.tabvalue == 4} class=\"btn btn-outline-secondary tabbutton insightTab5 h\">{l.chat_windows}</button>\r\n                    <button type=\"button\" data-tab=\"5\" class:active = {state.tabvalue == 5} class=\"btn btn-outline-secondary tabbutton insightTab6\">{l.mission}</button>\r\n                    <button type=\"button\" data-tab=\"6\" class:active = {state.tabvalue == 6} class=\"btn btn-outline-secondary tabbutton insightTab7\">{l.communication}</button>\r\n                    <button type=\"button\" data-tab=\"7\" class:active = {state.tabvalue == 7} class=\"btn btn-outline-secondary tabbutton insightTab8 h\">{l.animation}</button>\r\n                    <button type=\"button\" data-tab=\"8\" class:active = {state.tabvalue == 8} class=\"btn btn-outline-secondary tabbutton insightTab9\">{l.result}</button>\r\n                </div>\r\n            </div>\r\n\r\n            {#if state.tabvalue == 0}\r\n                <center>\r\n                    <div class=\"img_gridView row col-12\">\r\n                        {#if sceneArr.length > 0}\r\n                            {#each sceneArr as data} \r\n                                <div key={data.key} class=\"col-lg-3 col-sm-4 col scene_image float-start p-2\" class:bg-light={data.type == 0}>\r\n                                    <div class=\"card card-body shadow-sm  p-2 h-100\">\r\n                                        <div class=\"image_view w-100 bg-light d-flex\">\r\n                                            <img \r\n                                                alt = {data.alt}\r\n                                                width=\"200\"\r\n                                                height=\"200\"\r\n                                                src = {curDomain + 'labs/insight/Images/'+data.alt+'/scene.png'}\r\n                                                class=\"w-100 border rounded\"\r\n                                            />\r\n                                        </div>\r\n                                        <div class=\"row pt-2\">\r\n                                            <div class=\"col-sm-12\">\r\n                                                <div class=\"image_dec font18 overflow-hidden w-100 h-100 pt-2 text-center text-truncate\" data-bs-toggle=\"tooltip\" title=\"{data.alt}\">\r\n                                                    <span htmlFor={\"choose_btn\" + (data.key)}>{data.alt}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"col-sm-12\">\r\n                                                <div class=\"grid_btn pt-2\">\r\n                                                    {#if data.type == 0}\r\n                                                        <button type=\"button\" \r\n                                                            value={data.key}\r\n                                                            class=\"btn choose_btn btn-secondary float-end px-1 px-sm-3\"\r\n                                                            id={\"choose_btn\"+(data.key)} \r\n                                                            on:click = {(event) => {\r\n                                                                updateXmlValue(event, \"\", \"\", \"setScene\")\r\n                                                            }}\r\n                                                        >\r\n                                                            {l.no_of_token}\r\n                                                        </button>\r\n                                                    {:else if data.type == 1}\r\n                                                        <button type=\"button\" value={data.key}\r\n                                                            class=\"btn choose_btn btn-light float-end text-dark\"\r\n                                                            id={\"choose_btn\"+(data.key)} \r\n                                                            data-bs-toggle=\"tooltip\"\r\n                                                            title={l.click_to_select + (data.alt).toLowerCase() + \".\"}\r\n                                                            on:click = {(event) => {\r\n                                                                updateXmlValue(event, \"\", \"\", \"setScene\")\r\n                                                            }}\r\n                                                        >\r\n                                                            {l.select}\r\n                                                        </button>\r\n                                                        <button type=\"button\" on:click = {(event) => {updateXmlValue(event, data.key, data.key, \"deleteScene\")}} class=\"delete_button ml-auto\" tabIndex=\"0\" role=\"button\" aria-pressed=\"false\"  style=\"border: none;background: white\">\r\n                                                            <span class=\"icomoon-remove-2 s4\" style=\"color: #000;cursor: pointer;\"></span>\r\n                                                        </button>\r\n                                                    {:else}\r\n                                                        <button type=\"button\" value={data.key}\r\n                                                            class=\"btn choose_btn float-end btn-light text-dark px-1 px-sm-3\"\r\n                                                            id={\"choose_btn\"+(data.key)} \r\n                                                            data-bs-toggle=\"tooltip\"\r\n                                                            title={l.click_to_select + (data.alt).toLowerCase()+\".\"}\r\n                                                            on:click = {(event) => {\r\n                                                                updateXmlValue(event, \"\", \"\", \"setScene\")\r\n                                                            }}\r\n                                                        >\r\n                                                            {l.select}\r\n                                                        </button>\r\n                                                    {/if}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            {/each}\r\n                        {/if}\r\n                    </div>\r\n                    <div class=\"col-12 float-start pb-3 px-0 row\">\r\n                        <div class=\"col-12 px-0\">\r\n                            {#if menuLayout.length > 0}\r\n                                {#each menuLayout as data} \r\n                                    <div class=\"pagination m-sm-1 justify-content-center\">\r\n                                        <button tabIndex=\"0\" type=\"button\" class=\"btn btn-outline-dark page-item form-control pagination_btn active col-6 col-sm-3\" id={\"pagination_btn\" + (data.data_active)} value={data.data_active} key={data.data_active} on:click={() => {loadScene(data.end)}}>{l.load_more}</button>\r\n                                    </div>\r\n                                {/each}\r\n                            {/if}\r\n                        </div>\r\n                    </div>\r\n                </center>\r\n            {:else if state.tabvalue == 1}\r\n                <div>\r\n                    <div class=\"row col-md-10 mx-auto my-5\">\r\n                        <div class=\"col-sm-7\">\r\n                            <div class=\"card card-body intro_image_view shadow-sm p-2 min_height_300\">\r\n                                <img \r\n                                    alt = {sceneName}\r\n                                    src = {curDomain + 'labs/insight/Images/' + sceneName +'/scene.png'}\r\n                                    class = \"min_height_300 w-100\"\r\n                                />\r\n                            </div>\t\t\t\t\t\t\t\r\n                        </div>\r\n                        <div class=\"col-sm-5 mt-3 mt-sm-0\">    \r\n                            <div class=\"form-group row mb-0\">\r\n                                <div class=\"input-group mb-3\">\r\n                                    <label for=\"select_Mode\" class=\"input-group-text\" data-bs-toggle=\"tooltip\" title={l.select_game_mode} htmlFor=\"select_Mode\" on:click=\"{(event) => { updateXmlValue(event,\"select_Mode\",\"\",\"triggerForm\")}}\"> Mode </label>\r\n                                    \r\n                                    <!-- svelte-ignore a11y-no-onchange -->\r\n                                    <select \r\n                                        class=\"form-select\" \r\n                                        id=\"select_Mode\"\r\n                                        bind:value={localmodeData}\r\n                                        on:change= {(event) => updateXmlValue(event, sceneTemp, \"\", \"updateMode\")} \r\n                                    >\r\n                                        <option value={0}>{l.test}</option>\r\n                                        <option value={1}>{l.learn}</option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"form-group row mb-0\">\r\n                                <div class=\"input-group mb-3\">\r\n                                    <label class=\"input-group-text\" for=\"begin_Button\" data-bs-toggle=\"tooltip\" title={l.start_button}>{l.name_text}</label>\r\n                                    <input \r\n                                        type=\"text\" \r\n                                        class=\"form-control\" \r\n                                        placeholder=\"{l.placeholder_text}\" \r\n                                        id= \"begin_Button\"\r\n                                        bind:value={began}\r\n                                        on:change= {(event) => updateXmlValue(event, 0, \"\", \"beganupdate\")}\r\n                                        aria-describedby=\"buttonHelpBlock\"\r\n                                    />\r\n                                </div>\r\n                                <div class=\"col-md-12\">\r\n                                    <small id=\"buttonHelpBlock\" class=\"form-text text-muted font14 buttonHelpBlock mb-2\">\r\n                                    {l.button_text}</small>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            {:else if state.tabvalue == 2}\r\n                <div class=\"col-md-10 mx-auto offset-3 mt-5\">\r\n                    <table class=\"w-100\">\r\n                        <tbody>\r\n                            {#each localcharacterData as data, index}\r\n                                <tr key={index}>\r\n                                    <td align=\"center\" class=\"char_image\">\r\n                                        <div class=\"text-center\">\r\n                                            <img width=\"145px\" height=\"145px\" alt={'Character '+(index + 1)} src={curDomain + 'labs/insight/Images/'+sceneName+'/chracter' + (index + 1) + '.png'}/>\r\n                                        </div>\r\n                                    </td>\r\n                                    <td class=\"p-3\">\r\n                                        <div class=\"form-check form-switch ms-3\">\r\n                                            <input class=\"form-check-input\" tabindex=\"0\" type=\"checkbox\" id={'char_visibl' + (index)}  on:change= {(event) => { updateXmlValue(event, index, \"\", \"visibleCharacter\")}}  value={data.visible} checked={(data.visible == 0) ? true : false} />\r\n                                            <label class=\"form-check-label mt-small\" data-bs-toggle=\"tooltip\" title={l.set_chr_visiblity} for={'char_visibl' + (index)}>Visibility</label>\r\n                                        </div>\r\n                                        <div class=\"form-group row mb-2\">\r\n                                            <div class=\"input-group\">\r\n                                                <label for={'character_name'+(index)} class=\"input-group-text\" data-bs-toggle=\"tooltip\" title={l.add_chr_nm} htmlFor={'character_name'+(index)}> Character Name </label>\r\n                                                \r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    class=\"form-control\" \r\n                                                    placeholder=\"Character Name\" \r\n                                                    id= {'character_name'+(index)}\r\n                                                    bind:value={data.name}\r\n                                                    disabled={data.visible == 0 ? (false) : (true)}\r\n                                                    on:change= {(event) => updateXmlValue(event, index, \"\", \"setCharacter\")}\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"form-group row mb-2\">\r\n                                            <div class=\"input-group\">\r\n                                                <label for={'char_voice'+(index)} class=\"input-group-text\" data-bs-toggle=\"tooltip\" title={l.chr_voice} htmlFor={'char_voice'+(index)}> {l.character_voice} </label>\r\n                                                {#if (state.sceneData.scene[defaultScene].characters[index].voice == 1 || state.sceneData.scene[defaultScene].characters[index].voice == 3 || state.sceneData.scene[defaultScene].characters[index].voice == 7 || state.sceneData.scene[defaultScene].characters[index].voice == 9)}\r\n                                                    <!-- svelte-ignore a11y-no-onchange -->\r\n                                                    <select \r\n                                                        class=\"form-select\" \r\n                                                        id={'char_voice' + index}\r\n                                                        bind:value={state.sceneData.scene[defaultScene].characters[index].voice}\r\n                                                        on:change= {(event) => updateXmlValue(event, index, \"\", \"voiceData2\")} \r\n                                                        disabled={data.visible == 0 ? (false) : (true)}\r\n                                                    >\r\n                                                        <option value={1}>{l.male_one}</option>\r\n                                                        <option value={3}>{l.male_two}</option>\r\n                                                        <option value={7}>{l.male_three}</option>\r\n                                                        <option value={9}>{l.male_four}</option>\r\n                                                    </select>\r\n                                                {:else}\r\n                                                    <!-- svelte-ignore a11y-no-onchange -->\r\n                                                    <select \r\n                                                        class=\"form-select\" \r\n                                                        id={'char_voice' + index}\r\n                                                        bind:value={state.sceneData.scene[defaultScene].characters[index].voice}\r\n                                                        on:change= {(event) => updateXmlValue(event, index, \"\", \"voiceData2\")} \r\n                                                        disabled={data.visible == 0 ? (false) : (true)}\r\n                                                    >\r\n                                                        <option value={0}>{l.female_one}</option>\r\n                                                        <option value={2}>{l.female_two}</option>\r\n                                                        <option value={4}>{l.female_three}</option>\r\n                                                        <option value={6}>{l.female_four}</option>\r\n                                                        <option value={8}>{l.female_five}</option>\r\n                                                        <option value={10}>{l.female_six}</option>\r\n                                                    </select>\r\n                                                {/if}\r\n                                            </div>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                            {/each}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            {:else if state.tabvalue == 3} \r\n                <div class=\"col-md-10 mx-auto offset-3 mt-5\">\r\n                    <table class=\"w-100\">\r\n                        <tbody>\r\n                            {#each state.sceneData.scene[defaultScene].assets as data, index}\r\n                                <tr key={index}>\r\n                                    <td align=\"center\" class=\"w-25\">\r\n                                        <div class=\"text-center\">\r\n                                            <img class=\"img-thumbnail\" width=\"145px\" height=\"145px\" alt={'Assets '+(index + 1)} src={curDomain + 'labs/insight/Images/'+sceneName+'/assets' + (index + 1) + '.png'}/>\r\n                                        </div>\r\n                                        <div class=\"text-center mt-2\">\r\n                                            <input type=\"text\" bind:value={data.asset} disabled=\"disabled\" class=\"form-control\" />\r\n                                        </div>\r\n                                    </td>\r\n                                    <td class=\"p-3\">\r\n                                        <div class=\"form-check form-switch ms-3\">\r\n                                            <input class=\"form-check-input\" tabindex=\"0\" type=\"checkbox\" id={'asset_visible' + (index)}  on:change= {(event) => { updateXmlValue(event, index, \"\", \"assetVisible\")}} value={data.visible} checked={localassetsData[index].visible == 0 ? (false) : (true)}/>\r\n                                            <label class=\"form-check-label mt-small\" data-bs-toggle=\"tooltip\" title={l.asset_visibility} for={'asset_visible' + (index)}>{l.visibility}</label>\r\n                                        </div>\r\n                                        <div class=\"form-group row mb-2\">\r\n                                            <div class=\"input-group\">\r\n                                                <label for={'asset_anim'+(index)} class=\"input-group-text\" data-bs-toggle=\"tooltip\" title={l.asset_animation} htmlFor={'asset_anim'+(index)}> {l.animation} </label>\r\n                                                <!-- svelte-ignore a11y-no-onchange -->\r\n                                                <select \r\n                                                    class=\"form-select\" \r\n                                                    id={'asset_anim' + index}\r\n                                                    bind:value={data.anim}\r\n                                                    on:change= {(event) => updateXmlValue(event, index, \"\", \"assetAnim\")} \r\n                                                    disabled={localassetsData[index].visible == 0 ? (true) : (false)}\r\n                                                >\r\n                                                    {#each state.sceneData.scene[defaultScene].anim as animation, key}\r\n                                                        <option value={key} key={key}>{animation.name}</option>\r\n                                                    {/each}\r\n                                                </select>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"form-group row mb-2\">\r\n                                            <div class=\"input-group\">\r\n                                                <label for={'asset_label'+(index)} class=\"input-group-text\" data-bs-toggle=\"tooltip\" title={l.tooltip_txt} htmlFor={'asset_label'+(index)}> {l.tooltip} </label>\r\n                                                <input \r\n                                                    type=\"text\" \r\n                                                    class=\"form-control\" \r\n                                                    placeholder=\"Tooltip Name\" \r\n                                                    id= {'asset_label' + (index)}\r\n                                                    bind:value={data.tooltip}\r\n                                                    disabled={localassetsData[index].visible == 0 ? (true) : (false)}\r\n                                                    on:change= {(event) => updateXmlValue(event, index, \"\", \"setTooltip\")}\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"form-group row mb-2\">\r\n                                            <div class=\"input-group\">\r\n                                                <label for={'asset_stepindex'+(index)} class=\"input-group-text\" data-bs-toggle=\"tooltip\" title={l.tooltip_txt} htmlFor={'asset_stepindex'+(index)}> {l.onclick_step} </label>\r\n                                                <input \r\n                                                    type=\"number\" \r\n                                                    class=\"form-control\"\r\n                                                    id= {'asset_stepindex' + (index)}\r\n                                                    min=\"1\"\r\n                                                    max={localstepData.length} \r\n                                                    bind:value={data.assets_click}\r\n                                                    disabled={localassetsData[index].visible == 0 ? (true) : (false)}\r\n                                                    on:change= {(event) => updateXmlValue(event, index, \"\", \"setAssetsClick\")}\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                            {/each}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            {:else if state.tabvalue == 5} \r\n                <div class=\"table_container col-md-10 mx-auto offset-2 mt-4\">\r\n                    {#if localscoreCategoryData.length > 0}\r\n                        <table class=\"w-100 table mb-2\" style=\"border: 1px solid #dee2e6!important;\">\r\n                            <tbody>\r\n                                {#each localscoreCategoryData as data, index}\r\n                                    <tr key={index}>\r\n                                        <td align=\"center\" class=\"tabcol border-0 ps-3\">\r\n                                            <div class=\"row\">\r\n                                                <div class=\"col-5 col-lg-9 col-sm-7\">\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        bind:value={data.name}\r\n                                                        on:change={(event) => { updateXmlValue(event, index,\"\",\"setCategoryName\")}}\r\n                                                        class = \"form-control\"\r\n                                                        id={\"main_mission\" + (index)}\r\n                                                        placeholder={\"Mission #\" + (index + 1) + \" title\"}\r\n                                                    />\r\n                                                </div>\r\n                                                <div class=\"col-7 col-sm-3 px-0\">\r\n                                                    <div class=\"input-group\">\r\n                                                        <label for=\"inputPassword\" data-bs-toggle=\"tooltip\" title={l.points_text} class=\"input-group-text\">{l.points}</label> \r\n                                                        <input type=\"number\" min=\"0\" bind:value={data.value} max=\"100\" class=\"cursor_not_allowed form-control px-0 text-center\" disabled={true}>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </td>\r\n                                        <td align=\"center\" class=\"border-0 float-end\">\r\n                                            <button type=\"button\" class=\"bg-white delete_button ms-auto text-white border-0 mt-1\" on:click={(event) => { triggerDelete(event, 'deleteCategory', index)}} tabindex=\"0\" role=\"button\" aria-pressed=\"false\">\r\n                                                <span data-bs-toggle=\"tooltip\" title={l.delete}  class=\"icomoon-remove-2 s4 pointer text-dark\"></span>\r\n                                            </button>\r\n                                        </td>\r\n                                    </tr>\r\n                                {/each}      \r\n                            </tbody>\r\n                        </table>\r\n                    {/if}\r\n                    <div class=\"row\">\r\n                        <div class=\"col-12\">\r\n                            <div class=\"add_step float-end mt-2\" on:click={(event) => {updateXmlValue(event, localscoreCategoryData.length ,\"\",\"addCategory\")}}>\r\n                                <button data-bs-toggle=\"tooltip\" title={l.new_mission} class=\"btn rounded-pill img-shadow border shadow-sm\">\r\n                                    <b>{l.add_mission}</b>\r\n                                    <span class=\"icomoon-plus-circle-2 s4 relative ms-1 float-end\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            {:else if state.tabvalue == 6} \r\n                <div>\r\n                    <div id=\"sortable\">\r\n                        {#if localstepData.length > 0}\r\n                            {#each localstepData as data, index}\r\n                                <div class=\"accordion p-2\" id={\"steps_accordian\" + index} >\r\n                                    <div class=\"accordion-item\">\r\n                                        <div class=\"accordion-header allowDraggable\" style=\"cursor: move;\" id={\"steps_heading\" + index}>\r\n                                            <button class=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#{\"steps_collapse\" + index}\" aria-expanded=\"false\" aria-controls=\"{\"steps_collapse\" + index}\">\r\n                                                <span>\r\n                                                    <span class=\"icomoon-new-24px-arrow-right-2 position-relative icon_setup s4\"></span>\r\n                                                    {'Step ' + (index + 1)}\r\n                                                </span>\r\n                                            </button>\r\n                                        </div>\r\n                                        <div id=\"{\"steps_collapse\" + index}\" class=\"accordion-collapse collapse\" aria-labelledby={\"steps_heading\" + index} data-bs-parent={\"#steps_accordian\" + index}>\r\n                                            <div class=\"accordion-body\">\r\n                                                <div class=\"row\">\r\n                                                    <input type=\"hidden\" class=\"step_swap\" on:click={(event) => { updateXmlValue(event, index, \"\",\"swapSteps\")}} />\r\n                                                    {#if data.allowChoices != 7}\r\n                                                        <div class=\"col-3 pt-1\">\r\n                                                            <div class=\"row mb-2 mx-0\">\r\n                                                                <label for={'select-character'+(index)} class=\"d-inline font18 px-0 text-truncate\" htmlFor={'select-character'+(index)}>{l.choose_character}</label>\r\n                                                            </div>\r\n                                                            <div class=\"row mx-0\">\r\n                                                                <div class=\"stmnt_img w-100 px-0\">\r\n                                                                    {#if localcharacterData[data.name].visible == 0}\r\n                                                                        <img style=\"width: 100%; height:100%;\" alt={'Character '+ ( data.name + 1) + '' + index} src={curDomain + 'labs/insight/Images/' + sceneName + '/chracter' + (data.name + 1) + '.png'}/>\r\n                                                                    {:else}\r\n                                                                        <img style=\"width: 100%; height:100%;\" alt={'Character '+ (data.name + 1)} src={curDomain + 'labs/insight/Images/character.png'}/>\r\n                                                                    {/if}\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div class=\"row mx-0\">\r\n                                                                {#if localcharacterData[data.name].visible == 0}\r\n                                                                    <div class=\"input-group input-group-sm mt-1 px-0\">\r\n                                                                        <!-- svelte-ignore a11y-no-onchange -->\r\n                                                                        <select \r\n                                                                            class=\"form-select\" \r\n                                                                            id={\"select-character\" + (index)}\r\n                                                                            bind:value={data.name}\r\n                                                                            on:change= {(event) => updateXmlValue(event, index, \"\", \"updateStepChracter\")} \r\n                                                                        >\r\n                                                                            {#each localcharacterData as character, keys}\r\n                                                                                {#if localcharacterData[keys].visible == 0}\r\n                                                                                    <option value={keys}>{character.name}</option>\r\n                                                                                {/if}\r\n                                                                            {/each}\r\n                                                                        </select>\r\n                                                                    </div>\r\n                                                                {:else}\r\n                                                                    <div class=\"input-group input-group-sm mt-1 px-0\">\r\n                                                                        <!-- svelte-ignore a11y-no-onchange -->\r\n                                                                        <select \r\n                                                                            class=\"form-select\" \r\n                                                                            id={\"select-character\" + (index)}\r\n                                                                            bind:value={data.name}\r\n                                                                            on:change= {(event) => updateXmlValue(event, index, \"\", \"updateStepChracter\")} \r\n                                                                        >\r\n                                                                            {#each localcharacterData as character, keys}\r\n                                                                                {#if localcharacterData[keys].visible == 0}\r\n                                                                                    <option value={keys}>{character.name}</option>\r\n                                                                                {/if}\r\n                                                                            {/each}\r\n                                                                            <option value={data.name} k={data.name}>{l.not_visible}</option>\r\n                                                                        </select>\r\n                                                                    </div>\r\n                                                                {/if}\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    {/if}\r\n                                                    <div class={(data.allowChoices != 7) ? \"col-9 pl-0\" :\"col-12\"}>\r\n                                                        <div class=\"row mx-0\">\r\n                                                            {#if data.allowChoices == 7} \r\n                                                                <div class=\"col-lg-2 col-3 form-group pl-0\">\r\n                                                                    <div class=\"float-start w-100\">\r\n                                                                        <div class=\"input-group input-group-sm\">\r\n                                                                            <label for=\"selectVoice\" data-bs-toggle=\"tooltip\" title={l.narrater_voice} class=\"input-group-text\">{l.voice}</label>\r\n                                                                            <!-- svelte-ignore a11y-no-onchange -->\r\n                                                                            <select \r\n                                                                                class=\"form-select\" \r\n                                                                                id=\"selectVoice\"\r\n                                                                                bind:value={data.voice}\r\n                                                                                on:change= {(event) => updateXmlValue(event, index, \"\", \"updateIntroVoice\")} \r\n                                                                            >\r\n                                                                                <option value={0}>{l.female}</option>\r\n                                                                                <option value={1}>{l.male}</option>\r\n                                                                            </select>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            {/if}\r\n                                                \r\n                                                            <div class=\"col-lg-4 col-6 form-group pl-0\">\r\n                                                                <div class=\"input-group input-group-sm\">\r\n                                                                    <label for={\"select-type\" + (index)} data-bs-toggle=\"tooltip\" title={l.type_of_step} class=\"d-md-block d-none input-group-text\">{l.conversion_type}</label>\r\n                                                                    <!-- svelte-ignore a11y-no-onchange -->\r\n                                                                    <select \r\n                                                                        class=\"form-select\" \r\n                                                                        id={\"select-type\" + (index)}\r\n                                                                        bind:value={data.allowChoices}\r\n                                                                        on:change= {(event) => updateXmlValue(event, index, \"\", \"updateChoiceType\")} \r\n                                                                    >\r\n                                                                        <option value={0}>{l.statement}</option>\r\n                                                                        <option value={1}>{l.choice}</option>\r\n                                                                        <option value={2}>{l.item}</option>\r\n                                                                        <option value={3}>{l.multichoice}</option>\r\n                                                                        <option value={7}>{l.alert}</option>\r\n                                                                    </select>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            {#if data.allowChoices <= 0}\r\n                                                                <div class=\"col-4 col-lg-3 col-md-4 pr-0\">\r\n                                                                    <div class=\"form-check form-switch mt-1\">\r\n                                                                        <input class=\"form-check-input\" tabindex=\"0\" type=\"checkbox\" data-bs-toggle=\"tooltip\" title={l.autocomplete_txt} id={'selectAuto' + (index)}  on:change= {(event) => { updateXmlValue(event, index, \"\", \"updateAuto\")}}  bind:value={data.auto} checked={data.auto == 0 ? false : true}/>\r\n                                                                        <label class=\"text-truncate form-check-label mt-small\" data-bs-toggle=\"tooltip\" title={l.autocomplete_txt} for={\"selectAuto\" + (index)}>{l.autocomplete}</label>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            {/if}\r\n                                                            <div class=\"{ (data.allowChoices > 0) ? 'col-1 ml-auto text-right px-0' : 'col-lg-5 col-2 px-0 text-right'}\">\r\n                                                                <button data-bs-toggle=\"tooltip\" title={l.delete} type=\"button\" class=\"bg-white delete_button mx-auto border-0 px-0\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\" on:click= {(event) => { triggerDelete(event, 'deleteStep', index) } }>\r\n                                                                    <span class=\"icomoon-remove-2 s4 pointer text-dark\"></span>\r\n                                                                </button>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div class=\"row mx-0\">\r\n                                                            <!-- Uploading in choice and multichoice-->\r\n                                                            {#if data.allowChoices == 1 || data.allowChoices == 3}\r\n                                                                <div class=\"col-4 px-0\">\r\n                                                                    <!-- svelte-ignore a11y-img-redundant-alt -->\r\n                                                                    <img \r\n                                                                        id={\"samplechoice_image\"+ index}\r\n                                                                        alt = \"Choice Question Image\"\r\n                                                                        src = {(data.image == \"\" || data.image == null || data.image == \"undefined\") ? (curDomain + 'labs/insight/Images/bl.jpg') : (data.image)}\r\n                                                                        class=\"img-thumbnail choiceimage rounded-0 w-100\"\r\n                                                                    />\r\n                                                                    <button type=\"button\" class=\"btn btn-dark rounded-0 w-100 text-truncate\"\r\n                                                                        data-bs-toggle=\"tooltip\"\r\n                                                                        title={l.image_size_txt}\r\n                                                                        on:click = {(event) => { updateXmlValue(event , index, \"\", \"trigerchoiceimage\")}}\r\n                                                                    >\r\n                                                                        {l.file_elem}\r\n                                                                    </button>\r\n                                                                </div>\r\n                                                                <input class=\"h\" accept=\"image/png\" type=\"file\" id={\"choiceimg\" + index} on:change={(event) => onChoiceImageSelect(event, index)}/> \r\n                                                                <input\r\n                                                                    type=\"hidden\"\r\n                                                                    bind:value={data.image}\r\n                                                                    id={\"choice_question_image\" + (index)}\r\n                                                                    class=\"form-control w-50 choice_image_upld\"\r\n                                                                    on:click = {(event) => { updateXmlValue(event , index, \"\", \"setImageSrc\")}}\r\n                                                                    placeholder={l.image_link}\r\n                                                                />\r\n                                                            {/if}\r\n                                                            <div class={ data.allowChoices == 7 ? \"float-start col px-0\" : \"border-dark float-start ml-0 pl-2 px-0\"} class:col-8 = {data.allowChoices == 1 || data.allowChoices == 3}>\r\n                                                                <div class={ data.allowChoices == 7 ? \"border-dark\" : \"\" } >\r\n                                                                    <textarea\r\n                                                                        class=\"commu_textarea w-100\"\r\n                                                                        value={removeTags(data.message)}\r\n                                                                        id={\"statementTxt\" + index}\r\n                                                                        on:change={(event) => {updateXmlValue(event, index, \"\", \"setStepStatement\")}}\r\n                                                                        placeholder=\"Conversation text\"\r\n                                                                    ></textarea>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                                <!-- Item id, mission , score -->\r\n                                                {#if (data.allowChoices == 2 || data.allowChoices == 4 || data.allowChoices == 5) }\r\n                                                    <div class=\"col-12 mt-2 px-0\">\r\n                                                        <div class=\"row\">\r\n                                                            <div class=\"col-3\">\r\n                                                                <div class=\"input-group\">\r\n                                                                    <label\r\n                                                                        for={\"itemTxt\" + index}\r\n                                                                        class=\"input-group-text\"\r\n                                                                        data-bs-toggle=\"tooltip\"\r\n                                                                        title={l.guid_value}\r\n                                                                    >\r\n                                                                        {(data.allowChoices == 5 || data.allowChoices == 4) ? 'Value' : 'Item Id'}\r\n                                                                    </label>\r\n                                                                    <input\r\n                                                                        type=\"text\"\r\n                                                                        bind:value={data.guids}\r\n                                                                        on:change={ (event) => { updateXmlValue(event, index, \"\", \"setGuids\") }}\r\n                                                                        placeholder=\"Enter Value\"\r\n                                                                        class=\"form-control\"\r\n                                                                        id={\"itemTxt\" + index}\r\n                                                                    />\r\n                                                                    <div\r\n                                                                        class=\"add_item_button border btn p-1\"\r\n                                                                        tabindex=\"0\"\r\n                                                                        on:click={ (event) => {updateXmlValue( event, index, \"\", \"addItem\")}}\r\n                                                                    >\r\n                                                                        <span class=\"align-middle text-dark pointer icomoon-new-24px-add-circle-1 s4\"></span>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div class=\"col-3\">\r\n                                                                <div class=\"input-group\">\r\n                                                                    <label\r\n                                                                        for={\"selectMission\" + index}\r\n                                                                        class=\"input-group-text\"\r\n                                                                        data-bs-toggle=\"tooltip\"\r\n                                                                        title={l.mission_name}\r\n                                                                    >\r\n                                                                        {l.mission}\r\n                                                                    </label>\r\n                                                                    <!-- svelte-ignore a11y-no-onchange -->\r\n                                                                    <select \r\n                                                                        class=\"form-select\" \r\n                                                                        id={\"selectMission\" + (index)}\r\n                                                                        bind:value={data.choicesCategory}\r\n                                                                        on:change= {(event) => updateXmlValue(event, index, \"\", \"setStepCategory\")} \r\n                                                                    >\r\n                                                                        {#each localscoreCategoryData as category, keys}\r\n                                                                                <option value={keys}>{category.name}</option>\r\n                                                                        {/each}\r\n                                                                    </select>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div class=\"col-3\">\r\n                                                                <div class=\"input-group\">\r\n                                                                    <label\r\n                                                                        for={\"selectScore\" + index}\r\n                                                                        class=\"input-group-text\"\r\n                                                                        data-bs-toggle=\"tooltip\"\r\n                                                                        title={l.score_value}\r\n                                                                    >\r\n                                                                        {l.score}\r\n                                                                    </label>\r\n                                                                    <input\r\n                                                                        type=\"number\"\r\n                                                                        min=\"0\"\r\n                                                                        max=\"100\"\r\n                                                                        bind:value={data.choicesScore}\r\n                                                                        on:change={ (event) => { updateXmlValue(event, index, \"\", \"setStepCategoryValue\") }}\r\n                                                                        id={\"selectScore\" + index}\r\n                                                                        class=\"form-control\"\r\n                                                                    />\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                {/if}\r\n\r\n                                                <!-- Speech checkbox-->\r\n                                                {#if data.allowChoices <= 0}\r\n                                                    <div class=\"col-12 mt-2 px-0\">\r\n                                                        <div class=\"row\">\r\n                                                            <div class=\"col-3\">\r\n                                                                <div class=\"form-check form-switch ms-3 mt-2\">\r\n                                                                    <input class=\"form-check-input\" tabindex=\"0\" data-bs-toggle=\"tooltip\" title={l.speech_input} type=\"checkbox\" id={'selectSpeech' + (index)}  on:change= {(event) => { updateXmlValue(event, index, \"\", \"updateSpeech\")}}  bind:value={data.speech} checked={data.speech == 0 ? (false) : (true)}/>\r\n                                                                    <label class=\"form-check-label mt-small\" data-bs-toggle=\"tooltip\" title={l.speech_txt} for={\"selectSpeech\" + (index)}>{l.speech}</label>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                {/if}\r\n\r\n                                                <!-- Branching Conditions -->\r\n                                                {#if data.allowChoices > 4 && data.allowChoices != 7 && data.allowChoices != 8}\r\n                                                    <div class=\"col-12 mt-2 px-0\">\r\n                                                        <div class=\"form-floating\">\r\n                                                            <input type=\"text\" class=\"form-control\" id=\"branching_condition\" placeholder=\"Enter conditions here\" bind:value={data.condition} on:change = {(event) => {updateXmlValue(event, index , \"\", \"setStepCondition\")}}>\r\n                                                            <label for=\"branching_condition\">{l.branch_condition}</label>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                {/if}\r\n\r\n                                                <!-- Button Name & Animation -->\r\n                                                {#if data.allowChoices == 8}\r\n                                                    <div class=\"col-12 mt-2 px-0\">\r\n                                                        <div class=\"row\">\r\n                                                            <div class=\"col-6\">\r\n                                                                <div class=\"form-floating\">\r\n                                                                    <input type=\"text\" class=\"form-control\" id=\"button_name\" placeholder={l.enter_btn_name} bind:value={data.btn} on:change = {(event) => {updateXmlValue(event, index , \"\", \"setStepBTN\")}}>\r\n                                                                    <label for=\"button_name\">{l.btn_name}</label>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div class=\"col-6\">\r\n                                                                <div class=\"form-floating\">\r\n                                                                    <!-- svelte-ignore a11y-no-onchange -->\r\n                                                                    <select \r\n                                                                        class=\"form-select\" \r\n                                                                        id=\"animation\" \r\n                                                                        data-bs-toggle=\"tooltip\"\r\n                                                                        title={l.animation}\r\n                                                                        bind:value = {data.anim}\r\n                                                                        on:change = {(event) => {updateXmlValue(event, index , \"\", \"setStepanim\")}}\r\n                                                                    >\r\n                                                                        {#each state.sceneData.scene[defaultScene].anim as animation , key}\r\n                                                                            <option value={key} key={key}>{animation.name}</option>\r\n                                                                        {:else}\r\n                                                                            <option value=\"\" key=\"0\" selected disabled>{l.no_anim_avail}</option>\r\n                                                                        {/each}\r\n                                                                    </select>\r\n                                                                    <label for=\"animation\">{l.animation}</label>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                {/if}\r\n\r\n                                                <!--Choice accordian-->\r\n                                                {#if (data.allowChoices == 1 || data.allowChoices == 3 || data.allowChoices == 6)}\r\n                                                    {#each data.choices as choices, key}\r\n                                                        <div class=\"accordion py-2\" id={\"choices_accordian\" + index + \"_\" + key} >\r\n                                                            <div class=\"accordion-item\">\r\n                                                                <div class=\"accordion-header\" id={\"choices_heading\" + index + \"_\" + key}>\r\n                                                                    <button class=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#{\"choices_collapse\" + index + \"_\" + key}\" aria-expanded=\"false\" aria-controls=\"{\"choices_collapse\" + index + \"_\" + key}\">\r\n                                                                        {'Choice ' + (key + 1)}\r\n                                                                    </button>\r\n                                                                </div>\r\n                                                                <div id=\"{\"choices_collapse\" + index + \"_\" + key}\" class=\"accordion-collapse collapse\" aria-labelledby={\"choices_heading\" + index + \"_\" + key} data-bs-parent={\"#choices_accordian\" + index + \"_\" + key}>\r\n                                                                    <div class=\"row\">\r\n                                                                        <div class=\"col-12\">\r\n                                                                            <div class=\"row p-2\">\r\n                                                                                <div class=\"col-6\">\r\n                                                                                    <div class=\"form-floating\">\r\n                                                                                        <input type=\"text\" class=\"form-control\" id=\"textUpdate\" data-bs-toggle=\"tooltip\" placeholder={l.enter_choice_text} title={l.choice_text} bind:value={choices.text} on:change = {(event) => {updateXmlValue(event, key, index , \"setChoiceText\")}}>\r\n                                                                                        <label for=\"textUpdate\">{l.text}</label>\r\n                                                                                    </div>\r\n                                                                                </div>\r\n                                                                                <div class=\"col-6\">\r\n                                                                                    <div class=\"form-floating\">\r\n                                                                                        <input type=\"text\" class=\"form-control\" id={'updatefeedback' + index} placeholder={l.enter_choice_feedback} data-bs-toggle=\"tooltip\" title={l.feedback_text} bind:value={choices.feedback} on:change = {(event) => {updateXmlValue(event, key, index , \"setChoiceFeedback\")}}>\r\n                                                                                        <label for={'updatefeedback' + index}>Feedback</label>\r\n                                                                                    </div>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                        <div class=\"col-12\">\r\n                                                                            <div class=\"row p-2\">\r\n                                                                                <div class=\"col-6\">\r\n                                                                                    <div class=\"form-floating\">\r\n\r\n                                                                                        {#if (localcharacterChoice[data.name].visible == 0)}\r\n                                                                                            <!-- svelte-ignore a11y-no-onchange -->\r\n                                                                                            <select \r\n                                                                                                class=\"form-select\" \r\n                                                                                                id={'feedback_character' + index} \r\n                                                                                                data-bs-toggle=\"tooltip\"\r\n                                                                                                title= {l.fb_char_name}\r\n                                                                                                bind:value = {choices.feedback_charact}\r\n                                                                                                on:change = {(event) => {updateXmlValue(event, key, index, \"updateFeedbackChracter\")}}\r\n                                                                                            >\r\n                                                                                                {#each localcharacterChoice as character , character_key}\r\n                                                                                                    {#if character.visible == 0}\r\n                                                                                                        <option value={character_key} key={character_key}>{character.name}</option>\r\n                                                                                                    {/if}\r\n                                                                                                {/each}\r\n                                                                                            </select>\r\n                                                                                        {:else}\r\n                                                                                            <!-- svelte-ignore a11y-no-onchange -->\r\n                                                                                            <select \r\n                                                                                                class=\"form-select\" \r\n                                                                                                id={'feedback_character' + index} \r\n                                                                                                data-bs-toggle=\"tooltip\"\r\n                                                                                                title= {l.fb_char_name}\r\n                                                                                                bind:value = {data.name}\r\n                                                                                                on:change = {(event) => {updateXmlValue(event, key, index, \"updateFeedbackChracter\")}}\r\n                                                                                            >\r\n                                                                                                {#each localcharacterChoice as character , character_key}\r\n                                                                                                    {#if character.visible == 0}\r\n                                                                                                        <option value={character_key} key={character_key}>{character.name}</option>\r\n                                                                                                    {/if}\r\n                                                                                                {/each}\r\n                                                                                                <option value={data.name} k={data.name}>{l.not_visible}</option>\r\n                                                                                            </select>\r\n                                                                                        {/if}\r\n                                                                                        <label for={'feedback_character' + index}>{l.fb_char}</label>\r\n                                                                                    </div>\r\n                                                                                </div>\r\n                                                                                <div class=\"col-6\">\r\n                                                                                    <div class=\"form-floating\">\r\n                                                                                        <!-- svelte-ignore a11y-no-onchange -->\r\n                                                                                        <select \r\n                                                                                            class=\"form-select\" \r\n                                                                                            id={'selectMission' + key} \r\n                                                                                            data-bs-toggle=\"tooltip\"\r\n                                                                                            title= \"Mission Name\"\r\n                                                                                            bind:value = {choices.choicesCategory}\r\n                                                                                            on:change = {(event) => {updateXmlValue(event, key, index, \"setChoiceCategory\")}}\r\n                                                                                        >\r\n                                                                                            {#each localscoreCategoryData as category , category_key}\r\n                                                                                                <option value={category_key} key={category_key}>{category.name}</option>\r\n                                                                                            {/each}\r\n                                                                                        </select>\r\n                                                                                        <label for={'selectMission' + key}>{l.mission}</label>\r\n                                                                                    </div>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                        <div class=\"col-12\">\r\n                                                                            <div class=\"row p-2\">\r\n                                                                                {#if data.allowChoices == 3}\r\n                                                                                    <div class=\"col-3\">\r\n                                                                                        <div class=\"form-floating\">\r\n                                                                                            <!-- svelte-ignore a11y-no-onchange -->\r\n                                                                                            <select \r\n                                                                                                class=\"form-select\" \r\n                                                                                                id={'selectCorrect' + key} \r\n                                                                                                data-bs-toggle=\"tooltip\"\r\n                                                                                                title= {l.select_choics}\r\n                                                                                                bind:value = {choices.correct}\r\n                                                                                                on:change = {(event) => {updateXmlValue(event, key, index, \"setChoiceCorrect\")}}\r\n                                                                                            >\r\n                                                                                                <option value={0}>{l.false}</option>\r\n                                                                                                <option value={1}>{l.true}</option>\r\n                                                                                                <option value={2}>{l.none}</option>\r\n                                                                                            </select>\r\n                                                                                            <label for={'selectCorrect' + key}>{l.correct}</label>\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n                                                                                    <div class=\"col-3\">\r\n                                                                                        <div class=\"form-floating\">\r\n                                                                                            <input type=\"number\" \r\n                                                                                                class=\"form-control\" \r\n                                                                                                id={'selectScoreChoice' + key} \r\n                                                                                                min=\"0\" \r\n                                                                                                max=\"100\" \r\n                                                                                                placeholder={l.score_value} \r\n                                                                                                data-bs-toggle=\"tooltip\"\r\n                                                                                                title={l.score_value} \r\n                                                                                                bind:value={choices.choicesScore} \r\n                                                                                                on:change = {(event) => {updateXmlValue(event, key, index , \"setChoiceCategoryValue\")}}\r\n                                                                                            >\r\n                                                                                            <label for={'selectScoreChoice' + key}>Score</label>\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n                                                                                {:else if data.allowChoices == 1}\r\n                                                                                    <div class=\"col-3\">\r\n                                                                                        <div class=\"form-floating\">\r\n                                                                                            <!-- svelte-ignore a11y-no-onchange -->\r\n                                                                                            <select \r\n                                                                                                class=\"form-select\" \r\n                                                                                                id={'selectCorrect' + key} \r\n                                                                                                data-bs-toggle=\"tooltip\"\r\n                                                                                                title= \"Select true or false to indicate if the choice correct or not.\"\r\n                                                                                                bind:value = {choices.correct}\r\n                                                                                                defaultValue={choices.correct}\r\n                                                                                                on:change = {(event) => {updateXmlValue(event, key, index, \"setChoiceCorrectR\")}}\r\n                                                                                            >\r\n                                                                                                <option value={0}>{l.false}</option>\r\n                                                                                                <option value={1}>{l.true}</option>\r\n                                                                                            </select>\r\n                                                                                            <label for={'selectCorrect' + key}>{l.correct}</label>\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n                                                                                    <div class=\"col-3\">\r\n                                                                                        <div class=\"form-floating\">\r\n                                                                                            <input type=\"number\" \r\n                                                                                                class=\"form-control\" \r\n                                                                                                id={'selectScoreChoice' + key} \r\n                                                                                                min=\"0\" \r\n                                                                                                max=\"100\" \r\n                                                                                                placeholder={l.score_value} \r\n                                                                                                data-bs-toggle=\"tooltip\"\r\n                                                                                                title={l.score_value} \r\n                                                                                                bind:value={choices.choicesScore} \r\n                                                                                                on:change = {(event) => {updateXmlValue(event, key, index , \"setChoiceCategoryValue\")}}\r\n                                                                                            >\r\n                                                                                            <label for={'selectScoreChoice' + key}>{l.score}</label>\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n                                                                                    <div class=\"col-3\">\r\n                                                                                        <div class=\"form-floating\">\r\n                                                                                            <input type=\"number\" \r\n                                                                                                class=\"form-control\" \r\n                                                                                                id={'selectChoicestepIndex' + key} \r\n                                                                                                min=\"1\" \r\n                                                                                                max={localstepData.length}\r\n                                                                                                data-bs-toggle=\"tooltip\"\r\n                                                                                                title={l.step_index_txt}\r\n                                                                                                bind:value={choices.stepIndex} \r\n                                                                                                on:change = {(event) => {updateXmlValue(event, key, index , \"setChoiceStepIndex\")}}\r\n                                                                                            >\r\n                                                                                            <label for={'selectChoicestepIndex' + key}>{l.step_index}</label>\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n                                                                                {/if}\r\n                                                                                <div class=\"{(data.allowChoices == 1) ? 'col-3' : 'col-6'}\">\r\n                                                                                    <button data-bs-toggle=\"tooltip\" title={l.delete} type=\"button\" class=\"float-end bg-white delete_button ms-auto text-white border-0 mt-1\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\" on:click={(event) => {updateXmlValue(event, key, index, \"deleteChoice\")}}>\r\n                                                                                        <span class=\"icomoon-remove-2 s4 pointer text-dark\"></span>\r\n                                                                                    </button>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    {/each}\r\n\r\n                                                    <!--Add Choices buttons-->\r\n                                                    <div class=\"col-12\">\r\n                                                        <div class=\"row\">\r\n                                                            <div class=\"col-12 px-0 mt-2\">\r\n                                                                <div class=\"add_choices float-start\" on:click={(event) => {updateXmlValue(event, index ,\"\",\"addChoice\")}}>\r\n                                                                    <button data-bs-toggle=\"tooltip\" title={l.new_mission} class=\"btn rounded-pill img-shadow border shadow-sm\">\r\n                                                                        <b>{l.add_choice}</b>\r\n                                                                        <span class=\"icomoon-plus-circle-2 s4 relative ms-1 float-end\"></span>\r\n                                                                    </button>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                {/if}\r\n\r\n                                                <!--Level and insert note-->\r\n                                                <div class=\"col-12 mt-3 px-0\">\r\n                                                    <div class=\"row\">\r\n                                                        <div class=\"col-6\">\r\n                                                            <div class=\"input-group\">\r\n                                                                <label class=\"input-group-text\" for={\"level_text\" + index}>{l.level_text}</label>\r\n                                                                <input type=\"text\" class=\"form-control\" id={\"level_text\" + index} placeholder={l.level_placeholder} bind:value={data.level_text} on:change = {(event) => {updateXmlValue(event, index , \"\", \"labelupdate\")}}>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div class=\"col-6\">\r\n                                                            <div class=\"input-group\">\r\n                                                                <label class=\"input-group-text\" for={\"important_note\" + index}>{l.insert_note}</label>\r\n                                                                <input type=\"text\" class=\"form-control\" id={\"important_note\" + index} placeholder={l.note_placeholder} bind:value={data.important_node} on:change = {(event) => {updateXmlValue(event, index , \"\", \"updateNote\")}}>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            {/each}\r\n                        {/if}\r\n                    </div>\r\n                    <div class=\"add_step text-center mt-3\">\r\n                        <button data-bs-toggle=\"tooltip\" title={l.new_step} on:click={(event) => {updateXmlValue(event, localstepData.length ,\"\",\"addStep\")}} class=\"btn  rounded-pill img-shadow border shadow-sm\">\r\n                            <b>Add Step</b>\r\n                            <span class=\"icomoon-plus-circle-2 s4 relative ms-1 float-end\"></span>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            {:else if state.tabvalue == 7} \r\n                <div class=\"mx-auto py-2 row\">\r\n                    <div class=\"row\">\r\n                        <div class=\"relative text-center mt-2\">\r\n                            <button on:click={(event) => {updateXmlValue(event, sceneTemp, \"\", \"addtab\")}} class=\"btn bg-white rounded-pill img-shadow mb-2 border shadow-sm\">\r\n                                <b>{l.add_anim}</b>\r\n                                <span class=\"icomoon-plus-circle-2 s4 relative ms-1 float-end\"></span>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"table-responsive\">\r\n                        <table class=\"table w-100\">\r\n                            {#if localtabData.length > 0}\r\n                                {#each localtabData as data, index}\r\n                                    <tr key={index}>\r\n                                        <td>\r\n                                            <div class=\"text-center\">({index + 1})</div>\r\n                                        </td>\r\n                                        <td>\r\n                                            <div class=\"form-group row mb-2\">\r\n                                                <div class=\"input-group\">\r\n                                                    <label for={'anim_btnName'+(index)} class=\"input-group-text\" title={l.btn_name} data-bs-toggle=\"tooltip\" htmlFor={'anim_btnName'+(index)}> {l.btn_name} </label>\r\n                                                    <input \r\n                                                        type=\"text\" \r\n                                                        class=\"form-control\" \r\n                                                        placeholder={l.enter_btn_name}\r\n                                                        id= {'anim_btnName' + (index)}\r\n                                                        bind:value={data.title}\r\n                                                        on:change= {(event) => updateXmlValue(event, index, \"\", \"setTabTitle\")}\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"form-group row mb-2\">\r\n                                                <div class=\"input-group\">\r\n                                                    <label for={'anim_play'+(index)} class=\"input-group-text\" data-bs-toggle=\"tooltip\" title={l.animation_play} htmlFor={'anim_play'+(index)}> {l.animation_play} </label>\r\n                                                    <!-- svelte-ignore a11y-no-onchange -->\r\n                                                    <select \r\n                                                        class=\"form-select\" \r\n                                                        id={'anim_play' + index}\r\n                                                        bind:value={data.name}\r\n                                                        on:change= {(event) => updateXmlValue(event, index, \"\", \"setTabName\")} \r\n                                                    >\r\n                                                        {#each state.sceneData.scene[defaultScene].anim as animation, key}\r\n                                                            <option value={key} key={key}>{animation.name}</option>\r\n                                                        {/each}\r\n                                                    </select>\r\n                                                </div>\r\n                                            </div>\r\n                                        </td>\r\n                                        <td>\r\n                                            <div class=\"form-group row mb-2\">\r\n                                                <div class=\"input-group\">\r\n                                                    <label for={'anim_dilog'+(index)} class=\"input-group-text\" data-bs-toggle=\"tooltip\" title={l.dialog} htmlFor={'anim_dilog'+(index)}> {l.dialog} </label>\r\n                                                    <input \r\n                                                        type=\"text\" \r\n                                                        class=\"form-control\" \r\n                                                        placeholder={l.dialog} \r\n                                                        id= {'anim_dilog' + (index)}\r\n                                                        bind:value={data.dialog}\r\n                                                        on:change= {(event) => updateXmlValue(event, index, \"\", \"setTabDialog\")}\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"form-group row mb-2\">\r\n                                                <div class=\"input-group\">\r\n                                                    <label for={'anim_stepindex'+(index)} class=\"input-group-text\" data-bs-toggle=\"tooltip\" title={l.step_index} htmlFor={'anim_stepindex'+(index)}> {l.step_index} </label>\r\n                                                    <input \r\n                                                        type=\"number\" \r\n                                                        class=\"form-control\" \r\n                                                        id= {'anim_stepindex' + (index)}\r\n                                                        min=\"1\" \r\n                                                        max={localstepData.length}\r\n                                                        bind:value={data.guid}\r\n                                                        on:change= {(event) => updateXmlValue(event, index, \"\", \"setTabGuid\")}\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                        </td>\r\n                                        <td align=\"center\">\r\n                                            <button on:click={(event) => {updateXmlValue(event, index, \"\", \"deleteTab\")}} data-bs-toggle=\"tooltip\" title={l.delete} type=\"button\" class=\"bg-white delete_button ms-auto text-white border-0 mt-1\" tabindex=\"0\" role=\"button\" aria-pressed=\"false\">\r\n                                                <span class=\"icomoon-remove-2 s4 pointer text-dark\"></span>\r\n                                            </button>\r\n                                        </td>\r\n                                    </tr>\r\n                                {/each}\r\n                            {/if}\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            {:else if state.tabvalue == 8} \r\n                <div class=\"mx-auto pt-2 row\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-6 m-auto\">\r\n                            <img \r\n                                alt = {sceneName}\r\n                                id = \"bgResult\"\r\n                                src = {(BGsrc && BGsrc.trim() != '') ? BGsrc : (curDomain + 'labs/insight/Images/bl.jpg')}\r\n                                class=\"img-thumbnail w-100\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row mt-2\">\r\n                        <div class=\"col-4 col-lg-4 col-sm-6 m-auto\">\r\n                            <input class=\"h\" accept=\"image/png\" type=\"file\" id={\"choiceimg\" + sceneTemp} on:change={(e) => onChoiceImageSelect(e, sceneTemp)}/> \r\n                            <input\r\n                                type=\"hidden\"\r\n                                bind:value={BGsrc}\r\n                                id=\"result_img\"\r\n                                class=\"choice_image_upld\"\r\n                                on:click = {(event) => { updateXmlValue(event, sceneTemp, \"\", \"BGupdate\")}}\r\n                                placeholder=\"Image Link\"\r\n                                aria-describedby=\"result_screen_img\"\r\n                            />\r\n                            <button type=\"button\" class=\"btn btn-dark w-100\"\r\n                                data-bs-toggle=\"tooltip\"\r\n                                title={l.image_size_txt}\r\n                                on:click= {(event) => { updateXmlValue(event, sceneTemp, \"\", \"trigerchoiceimage\")}}\r\n                            >\r\n                                {l.result_bg}\r\n                            </button>\r\n                            <small id=\"result_screen_img\" class=\"form-text text-center text-muted\">\r\n                                {l.result_info}\r\n                            </small>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row mt-2\">\r\n                        <div class=\"col-6 m-auto\">\r\n                            <div class=\"input-group\">\r\n                                <label class=\"input-group-text\" for='result_title' data-bs-toggle=\"tooltip\" title={l.enter_result_title}>{l.result_title}</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    class = \"form-control\"\r\n                                    placeholder = {l.title}\r\n                                    id='result_title'\r\n                                    bind:value={resultTitle}\r\n                                    on:change={ (event) => {updateXmlValue(event, sceneTemp, \"\", \"titleUpdate\")}}\r\n                                />\r\n                            </div>\r\n                            <small id=\"result_screen_img\" class=\"form-text text-muted text-center font14\">{l.result_btn_info}</small>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            {/if}\r\n        </div>\r\n    {/if}\r\n    \r\n</div>\r\n<style>\r\n    .scene_image {\r\n        width: 32%;\r\n        margin: 5px 0;\r\n        padding: 5px;\r\n    }\r\n\r\n    .choiceimage {\r\n        height: 225px;\r\n    }\r\n\r\n    .image_view {\r\n        height: 70%;\r\n        min-height: 100px;\r\n    }\r\n\r\n    .choose_btn {\r\n        padding: 2px 20px;\r\n    }\r\n\r\n    .stmnt_img {\r\n        height: 228px;\r\n        border: 1px solid;\r\n        margin: 0 auto;\r\n    }\r\n\r\n    .commu_textarea {\r\n        padding: 10px;\r\n        height: 261px;\r\n        max-height: 261px;\r\n        overflow-y: scroll;\r\n        font-size: 14px !important;\r\n    }\r\n\r\n    .min_height_300 {\r\n        min-height: 300px;\r\n    }\r\n\r\n    .icon_setup {\r\n        top: 3px;\r\n        right: 10px;\r\n    }\r\n\r\n    .tabbutton:hover {\r\n        box-shadow: 0 0 0 .2rem rgba(135,135,135,.5)!important;\r\n    }\r\n</style>"],"names":[],"mappings":"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"}