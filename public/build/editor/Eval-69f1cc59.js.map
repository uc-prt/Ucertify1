{"version":3,"file":"Eval-69f1cc59.js","sources":["../../../clsSMEval/Eval.svelte"],"sourcesContent":["<script>\r\n    /**\r\n     *  File Name   : Eval.svelte\r\n     *  Description : Container for EvalPro Module\r\n     *  Author      : Pradeep Yadav\r\n     *  Version     : 1.2\r\n     *  Package     : svelte_items/svelte\r\n     *  Created     : 30 Feb 2021\r\n     *  Updated By  : Prabhat Kumar <prabhat.kumar@ucertify.com>\r\n     *  Updated Date: 12-May-2021\r\n     */\r\n    import { onMount, beforeUpdate, tick } from 'svelte';\r\n    import { Button, Dialog, Snackbar } from 'svelte-mui/src';\r\n    import {tag_player} from '../helper/helperFunctions';\r\n    import l from '../src/libs/editorLib/language';\r\n    import { writable } from 'svelte/store';\r\n    import { AH } from '../helper/HelperAI.svelte';\r\n    import Loader from '../helper/Loader.svelte';\r\n    import '../src/libs/codemirror.min.css';\r\n    import '../src/libs/monokai.css';\r\n    import '../src/libs/simplescrollbars.css';\r\n\r\n    export let toggleMode;\r\n    export let xml;\r\n    export let getChildXml = () => {};\r\n    export let setInlineEditor;\r\n    export let editorState;\r\n    let location_origin = (location.origin).replace('localhost', 'localhost:3000');\r\n    let evalpro_url = location_origin + '/layout/themes/bootstrap4/svelte_items/evalPro/index.php';\r\n    let all_databases = {\r\n            'mssql': [\"MSSQL\"], \r\n            'sql': [\"740DB\", \"C170PRE\", \"C995HSTK\", \"C995PRE\", \"DBFUND\", \"GSA1\", \"c995\", \"myDBs\", \"ucDB\", \"RECRUIT\"], \r\n            'psql': [\"gsa1\", \"mydbs\", \"postgresdb\", \"ucdb\", 'postgres_db', \"ucdb_db\", \"sandbox\"],\r\n        };\r\n    let lang_type = ([\"c\", \"c#\", \"c++\", \"java\", \"javascript\", \"mssql\", \"node.js\", \"php\", \"psql\", \"python\", \"r\", \"ruby\", \"sql\"]).sort();\r\n    let message = '';\r\n    let isPreview = \"\";\r\n    let aXml = \"\";\r\n    let language = \"\";\r\n    let windowHtml = \"\";\r\n    let showPre = parseInt(findAttribute(xml, \"showpre\", \"SMXML\"));\r\n    let showPost = parseInt(findAttribute(xml, \"showpost\", \"SMXML\"));\r\n    let showEditor = parseInt(findAttribute(xml, \"showeditor\", \"SMXML\"));\r\n    let qxml = \"\";\r\n    let xmlArr = [];\r\n    let defaultStartXml = '<SMXML type=\"24\" name=\"evalpro\" language=\"php\">';\r\n    let currentDB = 'myDBs';\r\n    let lastTestCaseHtml = false;\r\n    let editor;\r\n    let preEditor;\r\n    let postEditor;\r\n    let marker = [];\r\n    let preData = \"\";\r\n    let postData = \"\";\r\n    let langArr = [];\r\n    let state = {};\r\n    window.QXML = xml;\r\n    let hdd = writable({\r\n        open: false,\r\n        xml: '',\r\n        uxml: '',\r\n        module: '',\r\n        toggle: false,\r\n        toggleMode: false,\r\n        snackback: false,\r\n        lang_type: 'php',\r\n        xmlArr: [],\r\n        remediationToggle: false,\r\n        qxml: '',\r\n        titleData: \"\",\r\n        stemData: \"\",\r\n        remediationData: \"\",\r\n        perspective: \"Right\",\r\n        partial_match: \"1,1,1\",\r\n        ignore_special_char: \"0,0,0\",\r\n        case_insensitive: \"0,0,0\",\r\n        preShow: showPre || 0,\r\n        postShow: showPost || 0,\r\n        editorShow: showEditor || 2,\r\n        enableLines: 0,\r\n        databases: [],\r\n        output: \"\",\r\n        database_modal_open: false,\r\n        database: \"myDBs\",\r\n        preBlockShow: 0,\r\n        postBlockShow: 0,\r\n        is_graph: 0,\r\n        ignore_error: 0,\r\n        ignore_formatting: 0,\r\n        ignore_reset_db: 0,\r\n        is_pre_tag : 0,\r\n    })\r\n\r\n    /**\r\n     * To unsubscribe the store.\r\n     */\r\n    const unsubscribe = hdd.subscribe((items)=> {\r\n        state = items;\r\n    });\r\n\r\n    $: if (xml != state.xml) state.xml = xml;\r\n\r\n    /**\r\n     * Function call before render. Do all the necessory configuration before rendering.\r\n    */\r\n    onMount(()=> {\r\n        let smxml = xml.match(/<smxml(.*?)>/gim);\r\n        let type = smxml.toString().match(/type=\"(.*?)\"|type='(.*?)'/gim);\r\n        type = type[0].replace(/type=|\"/gim, '');\r\n        state.module = type;\r\n    \r\n        AH.select(AH.prevElm(\"#authoringLoadComponent\", \"br\"), 'remove');\r\n        let caseSensitive = xml.match(/case_sensitive='(.*?)'/gm);\r\n        let specialChar = xml.match(/special_char='(.*?)'/gm);\r\n        let partialMatch = xml.match(/partial_match='(.*?)'/gm);\r\n        if (caseSensitive && specialChar && partialMatch) {\r\n            state.ignore_special_char = specialChar[0].split(\"=\")[1].replace(/[\"']/g, \"\");\r\n            state.case_insensitive = caseSensitive[0].split(\"=\")[1].replace(/[\"']/g, \"\");\r\n            state.partial_match = partialMatch[0].split(\"=\")[1].replace(/[\"']/g, \"\");\r\n        }\r\n        langArr = xml.match(/<SMXML[\\s\\S]*?<\\/SMXML>/gim);\r\n        if (langArr.length == 1) {\r\n            language = langArr.toString().match(/language=\"(.*?)\"/gim);\r\n            language = language.toString().replace(/language=|\"/gi, '');\r\n            xmlArr[language] = xml;\r\n            state.lang_type = language;\r\n            state.xmlArr = xmlArr;\r\n        } else {\r\n            for (let i = 0; i < langArr.length; i++) {\r\n                language = langArr[i].match(/language=\"(.*?)\"/gim);\r\n                language = language.toString().replace(/language=|\"/gi, '');\r\n                xmlArr[language] = langArr[i];\r\n            }\r\n            state.xmlArr = xmlArr;\r\n        }\r\n        \r\n        getChildXml(xmlArr[state.lang_type]); //important\r\n        AH.select('#preview', 'hide');\r\n        state.xml = xml;\r\n        setDefaultXML(state.xml);\r\n        setTestCase()\r\n        if (typeof(CodeMirror) == \"function\") {\r\n            renderCodeMirror();\r\n        } else {\r\n            AH.ajax({\r\n                type: \"GET\",\r\n                url: itemUrl + \"src/libs/codemirror.js\",\r\n                dataType: \"script\",\r\n            }).then((data)=> {\r\n                AH.addScript(data, \"\", {target: \"body\"});\r\n                setTimeout(renderCodeMirror, 500);\r\n            })\r\n        }\r\n        \r\n        let delBtns = AH.selectAll(\".caseDelBtn\");\r\n        delBtns.forEach((event) => {\r\n            event.removeEventListener(\"click\", deleteCase);\r\n            event.addEventListener(\"click\", deleteCase);\r\n        });\r\n        AH.listen(document, 'click', '#answerCheck', ()=> {\r\n            remediationMode();\r\n        });\r\n        AH.bind(\"#enable-line\", \"keyup\", () => {\r\n            state.xml = generateXml();\r\n            getChildXml(state.xml);\r\n        });\r\n        AH.selectAll(\".MuiIconButton-label-122\", 'css', {display: \"inline !important\"});\r\n    })\r\n\r\n    /**\r\n     * Function call before update the dom. If anything change this will be called before render.\r\n    */\r\n    beforeUpdate(async ()=> {\r\n        if (toggleMode != state.toggleMode) {\r\n            state.toggleMode = toggleMode;\r\n            qxml = generateXml(true);\r\n            AH.select(\"#output\", 'html', \"\");\r\n            if (state.toggleMode == true) {\r\n                //Test mode on\r\n                renderPlayer();\r\n                AH.select('#headerTitle', 'html', l.preview);\r\n                AH.enableBsAll('[data-bs-toggle=\"tooltip\"]', 'Tooltip', {container: 'body'});\r\n                state.qxml = qxml;\r\n                state.titleData  = AH.select('#title').innerHTML;\r\n                state.stemData = AH.select('#stem').innerHTML;\r\n                state.remediationData = AH.select('#remediation').innerHTML;\r\n                await tick();\r\n                AH.insert(AH.select(AH.empty('#title'), 'hide'), '<div id=\"tilteShow\">' + state.titleData + '</div>', 'afterend');\r\n                AH.insert(AH.select(AH.empty('#stem'),'hide'), '<div id=\"stemShow\">' + get_ucsyntax(state.stemData) + '</div>', 'afterend');\r\n                AH.insert(AH.select(AH.empty('#remediation'),'hide'), '<div id=\"remediationShow\">' + get_ucsyntax(state.remediationData) + '</div>', 'afterend');\r\n                AH.selectAll('#externalInputs,#addTestCase', 'hide');\r\n                AH.selectAll(\".action_block\", 'removeClass', 'd-flex');\r\n                AH.selectAll(\".action_block, .language_select_button, .database_select_button, .pre-div\", 'hide');\r\n                AH.selectAll(\".selected_language\", 'removeClass', 'hidden');\r\n                // hide the pre and post block in case of preview\r\n                addPreBlock(0);\r\n                addPostBlock(0);\r\n                (state.stemData.match(/<uc:syntax/gm) || state.remediationData.match(/<uc:syntax/gm)) ? prettyPrint(): '';\r\n                isPreview = 1;\r\n                disableLine();\r\n                showPre = parseInt(findAttribute(xml, \"showpre\", \"SMXML\"));\r\n                showPost = parseInt(findAttribute(xml, \"showpost\", \"SMXML\"));\r\n                showEditor = parseInt(findAttribute(xml, \"showeditor\", \"SMXML\"));\r\n                if (showPre < 2) {\r\n                    preEditor.setOption(\"readOnly\", true);\r\n                    AH.select(\".pre-div .CodeMirror-scroll\").className = \"CodeMirror-scroll bg-light\"\r\n                } else {\r\n                    preEditor.setOption(\"readOnly\", false);\r\n                    AH.select(\".pre-div .CodeMirror-scroll\").className = \"CodeMirror-scroll\"\r\n                }\r\n\r\n                if (showPost < 2) {\r\n                    postEditor.setOption(\"readOnly\", true);\r\n                    AH.select(\".pre-div .CodeMirror-scroll\").className = \"CodeMirror-scroll bg-light\"\r\n                    // $(\".pre-div .CodeMirror-scroll\")[1].className = \"CodeMirror-scroll bg-light\"\r\n                } else {\r\n                    postEditor.setOption(\"readOnly\", false);\r\n                    AH.select(\".pre-div .CodeMirror-scroll\").className = \"CodeMirror-scroll\"\r\n                    // $(\".pre-div .CodeMirror-scroll\")[1].className = \"CodeMirror-scroll\"\r\n                }\r\n\r\n                if (showEditor < 2) {\r\n                    editor.setOption(\"readOnly\", true);\r\n                    AH.select(\".replEditor .CodeMirror-scroll\").className = \"CodeMirror-scroll bg-light\"\r\n                } else {\r\n                    editor.setOption(\"readOnly\", false);\r\n                    AH.select(\".replEditor .CodeMirror-scroll\").className = \"CodeMirror-scroll\"\r\n                }\r\n                AH.select(\".replEditor\", 'css', {\r\n                    \"minHeight\": \"125px\",\r\n                    \"height\": \"551px\",\r\n                    \"display\": \"block\",\r\n                });\r\n            } else { //Authoring Mode.\r\n                AH.select('#headerTitle', 'html', l.authoring);\r\n                AH.find('#authoringArea', 'form', {action: 'remove'});\r\n                AH.insert('#authoringArea', windowHtml, 'beforeend');\r\n                AH.find(document, '#tilteShow, #stemShow, #remediationShow, smxml', {action: 'remove'});\r\n                AH.select('#title', 'html', state.titleData);\r\n                AH.select('#stem', 'html', state.stemData);\r\n                AH.select('#remediation', 'html', state.remediationData);\r\n                AH.selectAll('#title,#stem,#remediation,#externalInputs,#addTestCase', 'show');\r\n                AH.selectAll(\".action_block\", 'addClass', 'd-flex')\r\n                AH.selectAll('.action_block', 'show');\r\n                AH.selectAll(\".language_select_button,.database_select_button\", 'show');\r\n                AH.selectAll(\".selected_language\", 'addClass', 'hidden');\r\n                unRenderPlayer();\r\n                isPreview = 0;\r\n                (state.module == \"24\") ? AH.select('#selectLanguage', 'show') : '';\r\n                if (editor) { //re-rendering codeMirror\r\n                    editor.toTextArea();\r\n                    preEditor.toTextArea();\r\n                    postEditor.toTextArea();\r\n                    let privXML = stringBetween(xml, \"editor\");\r\n                    renderCodeMirror();\r\n                    editor.setValue(privXML.trim());\r\n                }\r\n                setInlineEditor(\"#stem\");\r\n                setInlineEditor(\"#remediation\");\r\n            }\r\n        } \r\n        showHideInputBlock(state.lang_type);\r\n        if (state.toggleMode == false) {\r\n            // Update the pre, editor, post block \r\n            adjustEditorBlockUI();\r\n        }\r\n    })\r\n\r\n    /**\r\n     * Function to toggle the DB. If the lang is other than sql, psql and mssql then it will hide the database option.\r\n     * @param val : Boolean value to show and hide the database option.\r\n     */\r\n    function toggleDB(val) {\r\n        editorState.db_changed = val;\r\n    }\r\n\r\n    /**\r\n     * Function to add the pre code block.\r\n     * @param isPreBlockShow : Boolean value to show and hide the pre block.\r\n     */\r\n    function addPreBlock(isPreBlockShow) {\r\n        state.preBlockShow = (isPreBlockShow > -1) ? isPreBlockShow : !state.preBlockShow;\r\n        AH.selectAll(\".pre-div\", 'css', {\r\n            \"minHeight\": \"90px\",\r\n            \"height\": \"100px\",\r\n            \"display\": \"block\"\r\n        });\r\n        // Refresh the code mirror in case of show the preEditor area\r\n        if (!state.preBlockShow || isPreBlockShow) {\r\n            preEditor.setSize('100%', '100%');\r\n            var show = setInterval(function() {\r\n                preEditor.refresh();\r\n            }, 10);\r\n            setTimeout(()=> {\r\n                clearInterval(show);\r\n            }, 100);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Function to add the post code block.\r\n     * @param isPostBlockShow : Boolean value to show and hide the post block.\r\n     */\r\n    function addPostBlock(isPostBlockShow) {\r\n        state.postBlockShow = (isPostBlockShow > -1) ? isPostBlockShow : !state.postBlockShow;\r\n        AH.selectAll(\".post-div\", 'css', {\r\n            \"minHeight\": \"90px\",\r\n            \"height\": \"100px\",\r\n            \"display\": \"block\"\r\n        });\r\n        // Refresh the code mirror in case of show the preEditor area.\r\n        if (!state.postBlockShow || isPostBlockShow) {\r\n            postEditor.setSize('100%', '100%');\r\n            var show = setInterval(function() {\r\n                postEditor.refresh();\r\n            }, 10);\r\n            setTimeout(()=> {\r\n                clearInterval(show);\r\n            }, 100);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Change to open the language dialog.\r\n     */\r\n    function handleLanguageModalOpen() {\r\n        state.open = !state.open;\r\n    }\r\n\r\n    /**\r\n     * Function to show and hide the user input block.\r\n     * @param lang : If the language is psql, sql or mssql then no need to show it.\r\n     */\r\n    function showHideInputBlock(lang) {\r\n        if (lang == \"sql\" || lang == \"psql\" || lang == 'mssql') {\r\n            AH.select(AH.parent(\"#input\"),'hide');\r\n            AH.select(\"#output\", 'css', {height: '551px'});\r\n        } else {\r\n            AH.select(AH.parent(\"#input\"), 'show');\r\n            AH.select(\"#output\", 'css', {height: '425px'});\r\n        }\r\n        \r\n    }\r\n\r\n    /**\r\n     * Change to language change\r\n     * @param lang : Language from dropdown.\r\n     */\r\n    function handleLanguageSelection(lang) {\r\n        state.open = !state.open;\r\n        state.databases = all_databases[lang];\r\n\r\n        //start @sneh:added because the symbole like ++ were executed not been treated as string.\r\n        RegExp.escape = function(symbol) {\r\n            return symbol.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\r\n        };\r\n\r\n        let term_lang = new RegExp(RegExp.escape(state.lang_type), \"i\");\r\n        showHideInputBlock(lang);\r\n        if (state.xmlArr[lang]) {\r\n            state.xml = state.xmlArr[lang];\r\n            state.lang_type = lang;\r\n            editor.setOption(\"mode\", \"text/x-\" + term_lang);\r\n            windowHtml = state.xmlArr[lang].replace(/language=\"[\\s\\S]*?\" +/g, 'language=\"' + lang + '\"');\r\n            getChildXml(windowHtml);\r\n            parseXML(windowHtml);\r\n            setDefaultXML();\r\n            setTestCase();\r\n            AH.select(\"#output\", 'html', \"\");\r\n        } else {\r\n            let xml_group = Object.keys(state.xmlArr);\r\n            let newXML = state.xmlArr[xml_group[xml_group.length - 1]].replace(/language=\"[\\s\\S]*?\" +/i, 'language=\"' + lang + '\" ');\r\n            state.xml = newXML;\r\n            state.lang_type = lang;\r\n            \r\n            editor.setOption(\"mode\", \"text/x-\" + state.lang_type);\r\n            preEditor.setOption(\"mode\", \"text/x-\" + state.lang_type);\r\n            postEditor.setOption(\"mode\", \"text/x-\" + state.lang_type);\r\n            parseXML(newXML);\r\n            setDefaultXML();\r\n            setTestCase();\r\n            windowHtml = newXML;\r\n            getChildXml(windowHtml);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Function to show and hide the database dialog box.\r\n     */\r\n    function handleDatabaseModalOpen() {\r\n        state.database_modal_open = !state.database_modal_open;\r\n    }\r\n    \r\n    /**\r\n     * Function to handle the database selection.\r\n     * @param database : Database selected from dropdown.\r\n     */\r\n    function handleDatabaseItem(database) {\r\n        state.database_modal_open = !state.database_modal_open;\r\n        state.database = database;\r\n        currentDB = database;\r\n        setDefaultXML();\r\n    }\r\n\r\n    /**\r\n     * Function to adjust the Editor Block.\r\n     */\r\n    function adjustEditorBlockUI() {\r\n        let preBlockHeight = 0;\r\n        let postBlockHeight = 0;\r\n        if (preData && preData.trim().length) {\r\n            preBlockHeight = 141;\r\n            AH.selectAll(\".pre-div\", 'css', {\r\n                \"minHeight\": \"80px\",\r\n                \"height\": preBlockHeight + \"px\",\r\n                \"display\": \"block\"\r\n            });\r\n        } \r\n        if (postData && postData.trim().length) {\r\n            postBlockHeight = 141;\r\n            AH.selectAll(\".post-div\", 'css', {\r\n                \"minHeight\": \"80px\",\r\n                \"height\": postBlockHeight + \"px\",\r\n                \"display\": \"block\",\r\n            });\r\n        }\r\n        let editorBlockHeight = 427 - (preBlockHeight + postBlockHeight);\r\n        AH.selectAll(\".replEditor\", 'css', {\r\n            \"minHeight\": \"60px\",\r\n            \"height\": editorBlockHeight + \"px\",\r\n            \"display\": \"block\",\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Function to convert any string first character to uppercase.\r\n     * @param str : Any string.\r\n     */\r\n    function toTitleCase(str) {\r\n        return str.charAt(0).toUpperCase() + str.slice(1);\r\n    }\r\n    \r\n    /**\r\n     * Function to show the output block.\r\n     */\r\n    function showOutputData() {\r\n        let raw_btn_val = AH.select(\"#raw_btn\").value;\r\n        if (raw_btn_val == \"raw\") {\r\n            AH.select('#output').innerHTML = '<textarea class=\"w-100 border-0\" style=\"height:480px;\">' + state.output + '</textarea>';\r\n            return 1; \r\n        }\r\n\r\n        if (state.lang_type == 'sql' || state.lang_type == 'mssql' || state.lang_type == 'psql' || state.lang_type == 'c++') {\r\n            AH.select('#output').innerHTML = '<pre>' + state.output + '</pre>';\r\n        } else {\r\n            AH.select('#output').innerHTML = state.output;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Function to handle the enable disable the line.\r\n     */\r\n    function disableLine() {\r\n        let mode = {},\r\n            previousCode,\r\n            $usedLine,\r\n            //lineEnableNo,\r\n            language,\r\n            disableline;\r\n\r\n        try {\r\n            previousCode = editor.getValue();\r\n            $usedLine = editor.lineCount();\r\n            //lineEnableNo = enableline;\r\n            language = state.lang_type;\r\n            disableline = AH.select(\"#enable-line\").value;\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n        if (typeof mode.review == \"undefined\") {\r\n            mode.review = 0;\r\n        }\r\n\r\n        if ((mode.test == 1 || mode.review || 1) && parseInt(disableline)) {\r\n            let $lineEnable = disableline;\r\n            if ($lineEnable) {\r\n                $lineEnable = $lineEnable.split(\",\");\r\n                $lineEnable.sort(function(a, b) {\r\n                    return a - b\r\n                });\r\n                let $line = [];\r\n                let $readOnly = [];\r\n                for (let j = 0; j < $lineEnable.length; j++) {\r\n                    if (!$line[j]) {\r\n                        $line[j] = [];\r\n                    }\r\n\r\n                    if (j == 0) {\r\n                        $line[j][0] = j;\r\n                        $line[j][1] = $lineEnable[j];\r\n                    } else {\r\n                        $line[j][0] = $line[j - 1][1];\r\n                        $line[j][1] = $lineEnable[j];\r\n                    }\r\n                }\r\n\r\n                let $i = 0;\r\n                for ($i = 0; $i < $lineEnable.length; $i++) {\r\n                    for (let $k = $line[$i][0]; $k <= $line[$i][1] - 2; $k++) {\r\n                        $k = parseInt($k);\r\n                        $readOnly.push($k);\r\n                        editor.addLineClass($k, 'wrap', 'bg-light');\r\n                    }\r\n\r\n                    marker.push(editor.markText({\r\n                        line: $line[$i][0],\r\n                        ch: 0\r\n                    }, {\r\n                        line: $line[$i][1] - 2\r\n                    }, {\r\n                        inclusiveRight: true,\r\n                        inclusiveLeft: true,\r\n                        readOnly: true\r\n                    }));\r\n                }\r\n\r\n                for (let $l = $line[$i - 1][1]; $l < $usedLine; $l++) {\r\n                    $l = parseInt($l);\r\n                    $readOnly.push($l);\r\n                    editor.addLineClass($l, 'wrap', 'bg-light');\r\n                }\r\n                // hide all bottom codes after enable line\r\n                if (language == 'python' || disableline == 1) {\r\n                    editor.markText({\r\n                        line: $line[$i - 1][1],\r\n                        ch: 0\r\n                    }, {\r\n                        line: $usedLine\r\n                    }, {\r\n                        inclusiveRight: true,\r\n                        inclusiveLeft: true,\r\n                        collapsed: true\r\n                    });\r\n                    editor.markText({\r\n                        line: $line[$i - 1][1],\r\n                        ch: 0\r\n                    }, {\r\n                        line: $line[$i - 1][1] + $usedLine\r\n                    }, {\r\n                        inclusiveRight: true,\r\n                        inclusiveLeft: true,\r\n                        readOnly: true\r\n                    });\r\n\r\n                }\r\n\r\n                if (language != 'python') {\r\n                    editor.markText({\r\n                        line: parseInt($line[$i - 1][1]),\r\n                        ch: 0\r\n                    }, {\r\n                        line: $usedLine\r\n                    }, {\r\n                        inclusiveRight: true,\r\n                        inclusiveLeft: true,\r\n                        collapsed: true\r\n                    });\r\n\r\n                    editor.markText({\r\n                        line: $line[$i - 1][1],\r\n                        ch: 0\r\n                    }, {\r\n                        line: $line[$i - 1][1] + $usedLine\r\n                    }, {\r\n                        inclusiveRight: true,\r\n                        inclusiveLeft: true,\r\n                        readOnly: true\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Function to render the code mirror.\r\n     */\r\n    function renderCodeMirror() {\r\n        createEditor();\r\n        setDefaultXML();\r\n        getChildXml(generateXml());\r\n        \r\n        if (document.getElementById(\"aXml\")) {\r\n            let xmlEditor = CodeMirror.fromTextArea(document.getElementById(\"aXml\"), {\r\n                lineNumbers: false,\r\n                mode: \"application/xml\",\r\n                autoCloseBrackets: true,\r\n                lineWrapping: true,\r\n                matchBrackets: true\r\n            });\r\n        }\r\n\r\n        editor.setOption(\"extraKeys\", { //Changing Tabs into 4 spaces \r\n            Tab: function(command) {\r\n                let spaces = Array(command.getOption(\"indentUnit\") + 1).join(\" \");\r\n                command.replaceSelection(spaces);\r\n            },\r\n            F11: function(command) {\r\n                command.setOption(\"fullScreen\", !command.getOption(\"fullScreen\"));\r\n            },\r\n            Esc: function(command) {\r\n                if (command.getOption(\"fullScreen\")) command.setOption(\"fullScreen\", false);\r\n            }\r\n        });\r\n        AH.bind(\".CodeMirror-linenumber\", 'click', function(event) {\r\n            \r\n            if (AH.prevElm(event.target, \".dot\")) {\r\n                AH.prevElm(event.target, \".dot\").remove();\r\n            } else {\r\n                AH.insert(event.target, '<div class=\"dot\" style=\"position:absolute; z-index: 9999;width: 7px; height: 7px; border-radius: 50%; top: 8px; background-color: red;\"></div>', 'beforebegin');\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Function to reset the database when reset button clicked.\r\n     */\r\n    function resetDB() {\r\n        AH.select(\"#evalProRunCode\", 'attr', {disabled: \"disabled\"});\r\n        AH.select(\"#output\").innerHTML = ('<div class=\"EvalbgBlue\"><div class=\"Evalloader\"><span>{</span><span>}</span></div></div>');\r\n        AH.ajax({\r\n            url: themeUrl + \"svelte_items/evalPro/index.php\",\r\n            type: 'POST',\r\n            data: {\r\n                'ajax': 1,\r\n                'in_editor': 0,\r\n                'user_guid': window.user_guid,\r\n                'db_name': currentDB,\r\n                'language': findAttribute(xml, 'language'),\r\n                'resetDB': state.lang_type == 'mssql' ? 2 : 1\r\n            }\r\n        }).then((data)=> {\r\n            AH.select('#output', 'html', \"Database reset complete!\");\r\n            AH.select(\"#evalProRunCode\", 'removeAttr', \"disabled\");\r\n        }).catch((rqst, err)=> {\r\n            AH.select(\"#output\", 'html',  \"Database reset complete!\");\r\n            AH.select(\"#evalProRunCode\", 'removeAttr', \"disabled\");\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Function to create the editor.\r\n     */\r\n    function createEditor() {\r\n        let params_config = {\r\n            lineNumbers: true,\r\n            mode: 'text/x-' + state.lang_type,\r\n            styleActiveLine: true,\r\n            autoCloseBrackets: true,\r\n            lineWrapping: true,\r\n            scrollbarStyle: \"simple\",\r\n            matchBrackets: true,\r\n            tabSize: 2,\r\n            gutters: [\"CodeMirror-linenumbers\", \"breakpoints\"]\r\n        };\r\n        preEditor = CodeMirror.fromTextArea(document.getElementById(\"pre-editor\"), params_config);\r\n        editor = CodeMirror.fromTextArea(document.getElementById(\"repl-editor\"), params_config);\r\n        postEditor = CodeMirror.fromTextArea(document.getElementById(\"post-editor\"), params_config);\r\n        parseXML();\r\n        editor.on(\"change\", function(event, line) {\r\n            if (!isPreview) {\r\n                let xml = generateXml(true);\r\n                getChildXml(xml);\r\n            } else {\r\n                saveEvalProAnswer();\r\n            }\r\n            checkLine(line);\r\n        });\r\n        preEditor.on(\"change\", function() {\r\n            if (!isPreview) {\r\n                let xml = generateXml(true);\r\n                getChildXml(xml);\r\n            } else {\r\n                saveEvalProAnswer();\r\n            }\r\n        });\r\n        postEditor.on(\"change\", function() {\r\n            if (!isPreview) {\r\n                let xml = generateXml(true);\r\n                getChildXml(xml);\r\n            } else {\r\n                saveEvalProAnswer();\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Function to check the answer when check answer button clicked.\r\n     */\r\n    function remediationMode() {\r\n        state.remediationToggle = true;\r\n        answerCheckEvalpro();\r\n    }\r\n\r\n    /**\r\n     * Function to check the line for marker.\r\n     * @param line : Line number.\r\n     */\r\n    function checkLine(line) {\r\n        marker.forEach((marker) => {\r\n            marker.clear();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Function to check the evalpro answer when check answer button clicked.\r\n     */\r\n    function answerCheckEvalpro() {\r\n        setDefaultXML('answer_check');\r\n        let uxml = generateXml(true);\r\n        AH.ajax({\r\n            url: evalpro_url, \r\n            data: {\r\n                \"uxml\": uxml,\r\n                \"ajax\": 1,\r\n                'in_editor': 1,\r\n                'user_guid': window.user_guid\r\n            }\r\n        }).then((response)=> {\r\n            response = JSON.parse(response);\r\n            if (response['ajaxRes'] == 1) {\r\n                AH.select('#remediationModel', 'html', response['html']);\r\n                message = \"Passed\";\r\n\r\n                if (response['answer'] == \"0\") {\r\n                    message = \"Failed\";\r\n                }\r\n\r\n                state.snackback = true;\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Function to get the string between two string.\r\n     * @param data : Any string data.\r\n     * @param str_1 : First start string.\r\n     * @param str_2 : Second end string.\r\n     */\r\n    function stringBetween(data, str_1, str_2) {\r\n        let regEx = new RegExp(\"<\" + str_1 + \">([\\\\s\\\\S]*?)</\" + str_1 + \">\", \"gm\");\r\n        if (str_2) {\r\n            regEx = new RegExp(str_1 + \"([\\\\s\\\\S]*?)\" + str_2, \"gm\");\r\n        }\r\n\r\n        let matchedStr = regEx.exec(data);\r\n\r\n        if (matchedStr) {\r\n            return matchedStr[1];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Function to get the attribute value from xml.\r\n     * @param XML : XML.\r\n     * @param attr : Attribute name.\r\n     * @param tag : Tag name.\r\n     */\r\n    function findAttribute(XML, attr, tag = \"\") {\r\n        let regEx = new RegExp(\"<\" + tag + \".*?\" + attr + \"=\\\"(\\\\w+)\\\".*?>\", \"gm\");\r\n        let matchedStr = regEx.exec(XML);\r\n        if (matchedStr) {\r\n            return matchedStr[1];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Function to unRenderPlayer.\r\n     */\r\n    function unRenderPlayer() {\r\n        AH.empty('#authoringDiv player');\r\n        AH.find('#authoringDiv', 'player', {action: 'removeClass', actionData: 'hidecontent'});\r\n        AH.selectAll('#editor img').forEach((_elm)=> {\r\n            if (!_elm.getAttribute('header-logo') && !_elm.getAttribute('src').match(/\\/\\/s3.amazonaws.com\\/jigyaasa_content_static/gm)) {\r\n                _elm.setAttribute('src', _elm.getAttribute('src'));\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Function to render the player.\r\n     */\r\n    function renderPlayer() {\r\n        AH.empty('#authoringDiv player');\r\n        tag_player(AH.select('#authoringDiv'));\r\n        AH.find('#authoringDiv', 'player', {action: 'addClass', actionData: 'hidecontent'});\r\n        AH.selectAll('#editor img').forEach((_elm)=> {\r\n            if (!_elm.getAttribute('header-logo') && !_elm.getAttribute('src').match(/\\/\\/s3.amazonaws.com\\/jigyaasa_content_static/gm)) {\r\n                _elm.setAttribute('src', '//s3.amazonaws.com/jigyaasa_content_static/' + _elm.getAttribute('src'));\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Function to check the output of the code when run button clicked.\r\n     * @param event : Event\r\n     * @param raw : Raw (not in use need to delete this)\r\n     */\r\n    function runCode(event, raw = false) {\r\n        AH.select(\"#output\", 'html', '<div class=\"EvalbgBlue\"><div class=\"Evalloader\"><span>{</span><span>}</span></div></div>');\r\n        event.target.disabled = true;\r\n        let code = preEditor.getValue();\r\n        code += \"\\n\" + editor.getValue();\r\n        if (state.lang_type != 'sql' || state.lang_type != 'mssql' || state.lang_type != 'psql') {\r\n            code += \"\\n\";\r\n            code += postEditor.getValue();\r\n        }\r\n        AH.ajax({\r\n            type: \"POST\",\r\n            url: evalpro_url,\r\n            data: {\r\n                code: code,\r\n                repltype: state.lang_type,\r\n                stdin: AH.select(\"#sampleInput\").value,\r\n                'run_code': 1,\r\n                'user_guid': window.user_guid,\r\n                'db_name': currentDB ? currentDB : \"myDBs\",\r\n                'is_graph': state.is_graph,\r\n                'ignore_error': state.ignore_error,\r\n                'ignore_formatting' : state.ignore_formatting,\r\n                'ignore_reset_db' : state.ignore_reset_db,\r\n                'is_pre_tag' : state.is_pre_tag\r\n            },\r\n            dataType: 'json',\r\n        }).then((res)=> {\r\n            res = typeof res != \"object\" ? JSON.parse(res) : res;\r\n            AH.select('#output', 'css', {\r\n                \"color\": \"black\",\r\n                \"background\": \"transparent\"\r\n            });\r\n            event.target.disabled = false;\r\n            if (res.status_message == \"Successful\") {\r\n                if (res.output) {\r\n                    state.output = res.output;\r\n                    let is_raw_data = AH.select(\"#raw_btn\").value;\r\n                    if (is_raw_data == \"raw\") {\r\n                        let oup = res.output;\r\n                        AH.select('#output', 'html', '<textarea style=\"height: 480px;\" class=\"w-100 border-0\">' + oup + '</textarea>');\r\n                        return 1;\r\n                    }\r\n\r\n                    if (state.lang_type == 'sql' || state.lang_type == 'mssql' || state.lang_type == 'psql' || state.lang_type == 'c++' || state.is_pre_tag == 1) {\r\n                        let oup = res.output;\r\n                        AH.select('#output', 'html', '<pre>' + oup + '</pre>');\r\n                    } else {\r\n                        if ((res.output).includes(\"image_data:\")) {\r\n                            let image_url = (res.output).split(\"image_data:\");\r\n                            AH.select(\"#output\", 'html', '<img src=\"data:image/jpg;base64, ' + image_url[1] + '\" />');\r\n                        } else if (state.lang_type == \"r\" || state.is_graph) {\r\n                            AH.select(\"#output\", 'html', \"<pre>\"+ res.output + \"</pre>\");\r\n                        } else {\r\n                            AH.select('#output', 'html', res.output);\r\n                        }\r\n                    }\r\n\r\n                    if (isPreview && (state.lang_type == 'sql' || state.lang_type == 'mssql' || state.lang_type == 'psql')) {\r\n                        let lang_name = state.lang_type;\r\n                        let uXML = AH.select(\"#special_module_user_xml\").value;\r\n                        let id_date = new Date;\r\n                        uXML = uXML.replace(\"</SMXML>\", '<backup id=\"' + lang_name + id_date.getTime() + '\">' + code.trim() + '</backup></SMXML>');\r\n                        if (/\\<output\\>/g.test(uXML)) {\r\n                            uXML = uXML.replace(/\\<output\\>[\\s\\S]*?\\<\\/output\\>/g, '<output>' + AH.select('#output').innerHTML + '</output>');\r\n                        } else {\r\n                            uXML = uXML.replace('</enableline>', '</enableline><output>' + AH.select('#output').innerHTML + '</output>');\r\n                        }\r\n\r\n                        AH.select(\"#special_module_user_xml\").val(uXML);\r\n                    }\r\n                } else {\r\n                    AH.select('#output', 'html', \"Your code didn't print anything.\");\r\n                }\r\n            } else {\r\n                // We need to focus on this for error handling and formating the message\r\n                AH.select('#output', 'html', \"<pre class='compilerPre'>\"+parseLineNumber(res.stderr)+\"</pre>\");\r\n                AH.select('#output', 'css', {\r\n                    \"color\": \"#EB3941\",\r\n                    \"background\": \"#FFF0F0\"\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Function to parse the line number.\r\n     * @param errorMsg : Error msg get after code run.\r\n     */\r\n    function parseLineNumber(errorMsg=\"\") {\r\n        let section = {\r\n            pre: (preEditor.getValue() != \"\" ) ? preEditor.lineCount() : 0,\r\n            editor: (editor.getValue() != \"\") ? editor.lineCount() : 0,\r\n            post: (postEditor.getValue() != \"\") ? postEditor.lineCount() : 0,\r\n        };\r\n        let showpre = state.preShow;\r\n        let showpost = state.postShow;\r\n        let showeditor = state.editorShow;\r\n        switch(state.lang_type) {\r\n            case 'sql':\r\n                let line = errorMsg.split('at line');\r\n                if (line[1]) {\r\n                    let lineNo = (line[1].trim()).substring(0, 2);\r\n                    lineNo = lineNo.replace(\":\", \"\");\r\n                    if ((!showpre && !showeditor && !showpost && lineNo > section.pre && lineNo <= (section.pre + section.editor))\r\n                        || (showpre && lineNo <= section.pre)\r\n                        || (showpost && lineNo >= (section.pre + section.editor))\r\n                        || (showeditor && lineNo > section.pre && lineNo <= (section.pre + section.editor))\r\n                        || (showpre && showeditor && showpost) \r\n                        )  {\r\n                        lineNo = getSectionLine(+(lineNo), section);\r\n                        if(isNaN(lineNo)) {\r\n                            errorMsg = `${line[0]}${line[1].substr(2, line[1].length)}`;\r\n                        } else {\r\n                            errorMsg = `${line[0]}: ${lineNo} ${line[1].substr(2, line[1].length)}`;\r\n                        }\r\n                    } else {\r\n                        errorMsg = \"Unable to execute test cases, there are issues with your code. Please fix.\";\r\n                    }\r\n                }\r\n                break;\r\n            case 'java': {\r\n                let line = errorMsg.split('Solution.java:');\r\n                if (line[1]) {\r\n                    let lineNo = line[1].substr(0,2);\r\n                    lineNo = getSectionLine(lineNo, section);\r\n                    lineNo = isNaN(lineNo) ? lineNo.replace(\":\", \"\") : lineNo;\r\n                    if ((!showpre && !showeditor && !showpost && lineNo > section.pre && lineNo <= (section.pre + section.editor))\r\n                        || (showpre && lineNo <= section.pre)\r\n                        || (showpost && lineNo >= (section.pre + section.editor))\r\n                        || (showeditor && lineNo > section.pre && lineNo <= (section.pre + section.editor))\r\n                        || (showpre && showeditor && showpost) \r\n                        ) {\r\n                        errorMsg =  errorMsg.replace(/ Line \\d*/, ` Line ${lineNo}`);\r\n                    } else {\r\n                        errorMsg = \"Unable to execute test cases, there are issues with your code. Please fix.\";\r\n                    }\r\n                }\r\n            }\r\n            break;\r\n            case 'python' : {\r\n                // In case of exception error <module> tag is coming so remove this from code\r\n                let is_module = errorMsg.indexOf(\"<module>\");\r\n                let is_multiple_line = errorMsg.indexOf(\"line \", is_module);\r\n                if (is_module > -1 && is_multiple_line > -1) {\r\n                    errorMsg = errorMsg.substring(is_module + (\"<module>\".length));\r\n                }\r\n                let line = errorMsg.split('line');\r\n                if (line[1]) {\r\n                    line[1] = line[1].trim();\r\n                    let lineNo = line[1].substr(0, 2);\r\n                    lineNo = lineNo.replace(/,/g, '');\r\n                    if ((!showpre && !showeditor && !showpost && lineNo > section.pre && lineNo <= (section.pre + section.editor))\r\n                        || (showpre && lineNo <= section.pre)\r\n                        || (showpost && lineNo >= (section.pre + section.editor))\r\n                        || (showeditor && lineNo > section.pre && lineNo <= (section.pre + section.editor))\r\n                        || (showpre && showeditor && showpost) \r\n                        )  {\r\n                        lineNo = getSectionLine(lineNo, section);\r\n                        errorMsg =  errorMsg.replace(/ line \\d*/, ` line ${lineNo}`);\r\n                    } else {\r\n                        errorMsg = \"Unable to execute test cases, there are issues with your code. Please fix.\";\r\n                    }\r\n                } \r\n            }\r\n            break;\r\n            case 'php': {\r\n                let line = errorMsg.split('in /home/ucertify');\r\n                if(line[1]) {\r\n                    let lineNo = (line[1].split(\"line\"));\r\n                    lineNo = getSectionLine(+lineNo[1], section);\r\n                    if (errorMsg.indexOf(\"unexpected end of file\") > -1) {\r\n                        errorMsg = errorMsg.split(\"on line\");\r\n                        errorMsg = errorMsg[0];\r\n                    } else if ((!showpre && !showeditor && !showpost && lineNo > section.pre && lineNo <= (section.pre + section.editor))\r\n                        || (showpre && lineNo <= section.pre)\r\n                        || (showpost && lineNo >= (section.pre + section.editor))\r\n                        || (showeditor && lineNo > section.pre && lineNo <= (section.pre + section.editor))\r\n                        || (showpre && showeditor && showpost) \r\n                        )  {\r\n                        errorMsg = line[0] + \"on line \" + lineNo;\r\n                    } else {\r\n                        errorMsg = \"Unable to execute test cases, there are issues with your code. Please fix.\";\r\n                    }\r\n                }\r\n            }\r\n            break;\r\n\r\n        }\r\n        return errorMsg;\r\n    }\r\n    \r\n    /**\r\n     * Function to get the selection line.\r\n     * @param lineNo : Line number of the error.\r\n     * @param section : Pre, Post or Editor section.\r\n     */\r\n    function getSectionLine(lineNo, section) {\r\n        if (lineNo <= section.pre) {\r\n            //No need here.\r\n        } else if (lineNo <= (section.pre + section.editor)) {\r\n            lineNo = lineNo - section.pre;\r\n            console.warn({section:'editor',lineNo});\r\n        } else if (lineNo <= (section.pre + section.editor + section.post)) {\r\n            lineNo = lineNo - (section.pre + section.editor);\r\n        }\r\n\r\n        return lineNo;\r\n    }\r\n    \r\n    /**\r\n     * Function to parse the XML.\r\n     * @param xml : XML.\r\n     */\r\n    function parseXML(xml) {\r\n        xml = xml ? xml : window.QXML;\r\n        currentDB = findAttribute(xml, \"db_name\", \"SMXML\") ? findAttribute(xml, \"db_name\", \"SMXML\") : \"myDBs\";\r\n        state.database = currentDB;\r\n        if (findAttribute(xml, \"language\") == 'sql' || findAttribute(xml, \"language\") == 'mssql' || findAttribute(xml, \"language\") == 'psql') {\r\n            window.onbeforeunload = function(event) {\r\n                resetDB();\r\n            };\r\n        }\r\n        let editorData = stringBetween(xml, \"editor\");\r\n        editor.setValue(editorData ? editorData.trim() : \"\");\r\n\r\n        preData = stringBetween(xml, \"pre\");\r\n        preEditor.setValue(preData ? preData.trim() : \"\");\r\n        \r\n\r\n        postData = stringBetween(xml, \"post\");\r\n        postEditor.setValue(postData ? postData.trim() : \"\");\r\n        showPre = parseInt(findAttribute(xml, \"showpre\", \"SMXML\"));\r\n        showPost = parseInt(findAttribute(xml, \"showpost\", \"SMXML\"));\r\n        // Need to verify the content guid for the showeditor is not 2\r\n        showEditor = 2; //parseInt(findAttribute(xml, \"showeditor\", \"SMXML\"));\r\n        let is_graph = findAttribute(xml, \"is_graph\", \"SMXML\") ? parseInt(findAttribute(xml, \"is_graph\", \"SMXML\")) : 0;\r\n        let ignore_error = findAttribute(xml, \"ignore_error\", \"SMXML\") ? parseInt(findAttribute(xml, \"ignore_error\", \"SMXML\")) : 0;\r\n        let ignore_formatting = findAttribute(xml, \"ignore_formatting\", \"SMXML\") ? parseInt(findAttribute(xml, \"ignore_formatting\", \"SMXML\")) : 0;\r\n        let ignore_reset_db = findAttribute(xml, \"ignore_reset_db\", \"SMXML\") ? parseInt(findAttribute(xml, \"ignore_reset_db\", \"SMXML\")) : 0;\r\n        let is_pre_tag   = findAttribute(xml, \"is_pre_tag\", \"SMXML\") ? parseInt(findAttribute(xml, \"is_pre_tag\", \"SMXML\")) : 0;\r\n        state.preShow = showPre ? showPre : 0;\r\n        state.postShow = showPost ? showPost : 0;\r\n        state.editorShow = showEditor ? showEditor : 0;\r\n        state.is_graph = is_graph;\r\n        state.ignore_error = ignore_error;\r\n        state.ignore_formatting = ignore_formatting;\r\n        state.ignore_reset_db  = ignore_reset_db;\r\n        state.is_pre_tag    = is_pre_tag;\r\n        state.enableLines = stringBetween(xml, \"enableline\");\r\n        AH.select(\"#enable-line\", 'value', state.enableLines || 0);\r\n\r\n        if ((state.lang_type == \"sql\" || state.lang_type == \"psql\") && currentDB == \"myDBs\") {\r\n            toggleDB(false);\r\n        } else {\r\n            toggleDB(true);\r\n        }\r\n        \r\n        if (preData && (preData.trim()).length) {\r\n            addPreBlock(1);\r\n        } \r\n        if (postData && (postData.trim()).length) {\r\n            addPostBlock(1);\r\n        }\r\n        return editorData;\r\n    }\r\n\r\n    /**\r\n     * Function to set Default XML.\r\n     * @param type : from where this is being called.\r\n     */\r\n    function setDefaultXML(type) {\r\n        let preAttr = ' showpre=\"' + state.preShow + '\"';\r\n        let postAttr = 'showpost=\"' + state.postShow + '\"';\r\n        let editorAttr = 'showeditor=\"' + state.editorShow + '\"';\r\n        let currDB = document.querySelector(\"#select_db\");\r\n        if (currDB && currDB.value != currentDB) {\r\n            toggleDB(true);\r\n            currentDB = currDB.value ? currDB.value : currentDB;\r\n        }\r\n        let showDb = '';\r\n        if (state.lang_type == 'sql' || state.lang_type == 'psql' || state.lang_type == 'mssql') {\r\n            showDb = 'db_name=\"' + currentDB + '\"';\r\n            state.databases = all_databases[state.lang_type];\r\n        }\r\n        defaultStartXml = \"<SMXML type=\\\"\" + state.module + \"\\\" name=\\\"evalpro\\\" case_sensitive=\\'\" + state.case_insensitive + \"\\' special_char=\\'\" + state.ignore_special_char +\"\\' partial_match=\\'\" + state.partial_match + \"\\' language=\\\"\" + state.lang_type + \"\\\"\" + preAttr + \" \" + postAttr + \" \" + editorAttr + \" \" + showDb + \" is_graph=\\\"\" + state.is_graph +  \"\\\" ignore_error=\\\"\" + state.ignore_error +  \"\\\" ignore_formatting=\\\"\" + state.ignore_formatting +   \"\\\" ignore_reset_db=\\\"\" + state.ignore_reset_db +  \"\\\" is_pre_tag=\\\"\" + state.is_pre_tag + \"\\\">\";\r\n        if (editor && type != \"answer_check\") {\r\n            generateXml();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Function to generate the xml after any update.\r\n     * @param isFormatted : Is formated or not.\r\n     */\r\n    function generateXml(isFormatted) {\r\n        aXml = \"\";\r\n        aXml = defaultStartXml + getCodeXml() + testCasesXml() + enableLineXml() + \"</SMXML>\";\r\n        if (isFormatted) {\r\n            return aXml;\r\n        }\r\n        getChildXml(aXml);\r\n        return aXml;\r\n    }\r\n\r\n    /**\r\n     * Function to save the evalpro answer.\r\n     */\r\n    function saveEvalProAnswer() {\r\n        let uXml = generateXml(1);\r\n        AH.select(\"#special_module_user_xml\", 'value', uXml);\r\n    }\r\n\r\n    /**\r\n     * Function to get the code xml.\r\n     */\r\n    function getCodeXml() {\r\n        let codeXml = \"\";\r\n        let pre_code = preEditor ? preEditor.getValue() : \"\";\r\n        let post_code = postEditor ? postEditor.getValue() : \"\";\r\n        if (editor) {\r\n            codeXml = editor.getValue();\r\n        }\r\n        return \"<pre>\" + pre_code + \"\\n</pre><editor>\" + codeXml + \"</editor><post>\\n\" + post_code + \"</post>\";\r\n    }\r\n\r\n    /**\r\n     * Function to set the testcases.\r\n     */\r\n    function setTestCase() {\r\n        let testMatch = stringBetween(state.xml, \"testcases\");\r\n        let testcaseString = testMatch.replace(/<\\/case>(\\n)*(\\s)*<case>/g, \";\").replace(/<\\/case>|<case>/g, \"\");\r\n        AH.select(\"#id1\", 'value', testcaseString);\r\n        let sample = stringBetween(state.xml, \"case\");\r\n        if (sample) {\r\n            sample = sample.replace(/\\|.*/g, \"\");\r\n            let inpValue = (/\\{|\\[|\\(/g).test(sample) ? sample.replace(/\\|.+/g, \"\") : sample.replace(/\\|.+/g, \"\").replace(/\\,/g, \"\\n\");\r\n            if (inpValue.indexOf('__sep__')) {\r\n                inpValue = inpValue.replace(/__sep__/g, \"\\n\");\r\n            }\r\n            AH.select(\"#sampleInput\", 'value', inpValue);\r\n            let caseStacks = testcaseString.split(\";\");\r\n            AH.select(\"#caseContainer\", 'html', \"\");\r\n            caseStacks.forEach((event, item) => {\r\n                let caseArr = event.split(\"|\");\r\n                addMore(caseArr[0], caseArr[1], item);\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Function to cancel the testcase modal.\r\n     */\r\n    function cancelTestCase() {\r\n        if (lastTestCaseHtml) {\r\n            AH.select('#caseContainer', 'html', lastTestCaseHtml);\r\n            bindBtns();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Function to open the testcase modal.\r\n     */\r\n    function onOpenTestCase() {\r\n        lastTestCaseHtml = document.getElementById('caseContainer').innerHTML;\r\n    }\r\n\r\n    /**\r\n     * Function to bind the buttons.\r\n     */\r\n    function bindBtns() {\r\n        let delBtns = document.querySelectorAll(\".caseDelBtn\");\r\n        delBtns.forEach((event) => {\r\n            event.removeEventListener(\"click\", deleteCase);\r\n            event.addEventListener(\"click\", deleteCase);\r\n        });\r\n        let part_match = document.querySelectorAll(\".partial_match .case_insensitive .ignore_special_char\");\r\n        part_match.forEach((event, index) => {\r\n            event.removeEventListener(\"click\", setDefaultXML);\r\n            event.addEventListener(\"click\", setDefaultXML);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Function to add more testcase when + button clicked from Add Testcase modal.\r\n     * @param inp : Input.\r\n     * @param oup : Output.\r\n     * @param i : optional parameter.\r\n     */\r\n    function addMore(inp = \"\", oup = \"\", i) {\r\n        let caseStack = document.createElement(\"div\"),\r\n        isSql = state.lang_type == \"sql\" || state.lang_type == \"psql\" ? \"h-imp\" : \"\";\r\n        caseStack.className = 'caseStack m-sm';\r\n        inp = (typeof inp == 'object') ? \"\" : inp;\r\n        let index = AH.select(\"#caseContainer\").children.length;\r\n        let case_insensitive = state.case_insensitive;\r\n        case_insensitive = case_insensitive.split(\",\");\r\n        let case_insensitive_checked = case_insensitive[i] == 1 ? 'checked=\"checked\"' : '';\r\n\r\n        let ignore_special_char = state.ignore_special_char;\r\n        ignore_special_char = ignore_special_char.split(\",\");\r\n        let ignore_special_char_checked = ignore_special_char[i] == 1 ? 'checked=\"checked\"' : '';\r\n\r\n        let partial_match = state.partial_match;\r\n        partial_match = partial_match.split(\",\");\r\n        let partial_match_checked = partial_match[i] == 1 ? 'checked=\"checked\"' : '';\r\n\r\n        caseStack.innerHTML = `<div class=\"w-100 p-3 mt-2 mb-2\" style=\"background: #f1f1f1\"><div class=\"w-100\"><h5 class=\"float-left p-1\" style=\"width: 90%\"><lable class=\"bage mr-4 test_case_label\">${l.testcase + (index + 1)}</lable><label class=\"container_eval mr-4\">${l.case_insensitive}<input class=\"case_insensitive\" type=\"checkbox\" value=\"${state.case_insensitive}\" ${case_insensitive_checked}><span class=\"checkmark_eval\"></span></label><label class=\"container_eval mr-4\">${l.ignore_special_char}<input class=\"ignore_special_char\" type=\"checkbox\" value=\"${state.ignore_special_char}\" ${ignore_special_char_checked}><span class=\"checkmark_eval\"></span></label><label class=\"container_eval\">${l.partial_match}<input class=\"partial_match\" type=\"checkbox\" value=\"${state.partial_match}\" ${partial_match_checked}><span class=\"checkmark_eval\"></span></label></h5><span tabIndex=\"0\" class=\"float-right p-2 icomoon-new-24px-delete-1 s5 pointer caseDelBtn\"></span></div><textarea class=\"form-control d-inline-block mr-md ${isSql}\" style=\"width: 48%;height: 100px;\" placeholder=\"${l.input_seperated_comma}\">${inp}</textarea>\r\n            <textarea class=\"form-control d-inline-block ml-md\" style=\"height: 100px;width:${(state.lang_type == \"sql\" || state.lang_type == \"psql\" || state.lang_type == \"mssql\" ? \"98%\" : \"48%\")}\" placeholder=\"${l.output}\">${oup}</textarea></div>`;\r\n        document.querySelector(\"#caseContainer\").appendChild(caseStack);\r\n        bindBtns();\r\n    }\r\n\r\n    /**\r\n     * Function to check the case insensitive.\r\n     */\r\n    function checkCaseInsensitive() {\r\n        let caseInsensitive = [];\r\n        let nodes = document.querySelectorAll(\".case_insensitive\");\r\n        for (let points of nodes) {\r\n            caseInsensitive.push(points.checked ? 1 : 0);\r\n        }\r\n\r\n        return caseInsensitive.join(\",\");\r\n    }\r\n\r\n    /**\r\n     * Function to check the special characters.\r\n     */\r\n    function checkSpecialChar() {\r\n        let specialChar = [];\r\n        let node = document.querySelectorAll(\".ignore_special_char\");\r\n        for (let point of node) {\r\n            specialChar.push(point.checked ? 1 : 0);\r\n        }\r\n\r\n        return specialChar.join(\",\");\r\n    }\r\n\r\n    /**\r\n     * Function to check the partial match.\r\n     */\r\n    function checkMatchPartial() {\r\n        let matchPartial = [];\r\n        let match_node = document.querySelectorAll(\".partial_match\");\r\n        for (let child of match_node) {\r\n            matchPartial.push(child.checked ? 1 : 0);\r\n        }\r\n\r\n        return matchPartial.join(\",\");\r\n    }\r\n\r\n    /**\r\n     * Function to get the value of is_graph, ignore_error, ignore_formatting, is_pre_tag\r\n    */\r\n    function getSettings() {\r\n        let is_graph = AH.select('.is_graph').checked ? 1 : 0;\r\n        let ignore_error = AH.select('.ignore_error').checked ? 1: 0;\r\n        let ignore_formatting = AH.select('.ignore_formatting').checked ? 1: 0;\r\n        let ignore_reset_db  = AH.select('.ignore_reset_db').checked ? 1 : 0;\r\n        let is_pre_tag = AH.select('.is_pre_tag').checked ? 1 : 0;\r\n        return { is_graph: is_graph, ignore_error: ignore_error, ignore_formatting: ignore_formatting, ignore_reset_db: ignore_reset_db, is_pre_tag: is_pre_tag };\r\n    }\r\n    /**\r\n     * Function to delete the testcases.\r\n     * @param event : Event parameter.\r\n     */\r\n    function deleteCase(event) {\r\n        if (AH.select(\"#caseContainer\").children.length == 1) {\r\n            AH.alert(\"you can not delete default node\");\r\n        } else {\r\n            let getParent = event.target.parentElement;\r\n            getParent = getParent.parentElement;\r\n            getParent = getParent.parentElement;\r\n            getParent.remove();\r\n            let counter = 1;\r\n            AH.selectAll(\".test_case_label\").forEach((_elm)=> {\r\n                _elm.textContent = (l.testcase + (counter++));\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Function to add the testcases.\r\n     */\r\n    function addTestCase() {\r\n        let tempXml = xml;\r\n        let case_match_insensitive = checkCaseInsensitive();\r\n        let casematch_specail_char = checkSpecialChar();\r\n        let partialmatch = checkMatchPartial();\r\n        let settings     = getSettings(); \r\n        state.case_insensitive = case_match_insensitive;\r\n        state.ignore_special_char = casematch_specail_char;\r\n        state.partial_match = partialmatch;\r\n        state.is_graph = settings.is_graph;\r\n        state.ignore_error = settings.ignore_error;\r\n        state.ignore_formatting = settings.ignore_formatting;\r\n        state.ignore_reset_db  = settings.ignore_reset_db;\r\n        state.is_pre_tag = settings.is_pre_tag;\r\n        tempXml = tempXml.replace(/case_sensitive='[\\s\\S]*?' +/g, \"case_sensitive='\" + case_match_insensitive + \"' \");\r\n        tempXml = tempXml.replace(/special_char='[\\s\\S]*?' +/g, \"special_char='\" + casematch_specail_char + \"' \");\r\n        tempXml = tempXml.replace(/partial_match='[\\s\\S]*?' +/g, \"partial_match='\" + partialmatch + \"' \");\r\n        tempXml = tempXml.replace(/is_graph=\"[\\s\\S]*?\"/g, 'is_graph=\"' + settings.is_graph + '\"');\r\n        tempXml = tempXml.replace(/ignore_error=\"[\\s\\S]*?\"/g, 'ignore_error=\"' + settings.ignore_error + '\"');\r\n        tempXml = tempXml.replace(/ignore_formatting=\"[\\s\\S]*?\"/g, 'ignore_formatting=\"' + settings.ignore_formatting + '\"');\r\n        tempXml = tempXml.replace(/ignore_reset_db=\"[\\s\\S]*?\"/g, 'ignore_reset_db=\"' + settings.ignore_reset_db + '\"');\r\n        tempXml = tempXml.replace(/is_pre_tag=\"[\\s\\S]*?\"/g, 'is_pre_tag=\"' + settings.is_pre_tag + '\"');\r\n        let caseStacks = AH.selectAll(\".caseStack\");\r\n        let caseArr = [];\r\n        caseStacks.forEach((e) => {\r\n            let inp = e.children[0].children[1].value;\r\n            let oup = e.children[0].children[2].value;\r\n            caseArr.push(inp + \"|\" + oup + \";\");\r\n        });\r\n        AH.select(\"#id1\", 'value', (caseArr.join(\"\")).replace(/;$/gm, \"\") );\r\n        let testCasesValue = document.querySelector(\"#id1\").value;\r\n        testCasesValue = \"<case>\" + testCasesValue.replace(/;/g, \"</case><case>\") + \"</case>\";\r\n        getChildXml(tempXml.replace(/<testcases>[\\s\\S]*?<\\/testcases>/g, \"<testcases>\" + testCasesValue + \"</testcases>\"));\r\n    }\r\n\r\n    /**\r\n     * Function to add the testcase in xml.\r\n     */\r\n    function testCasesXml() {\r\n        let testCasesXml = stringBetween(xml, \"testcases\");\r\n        return (testCasesXml ? (\"<testcases>\" + testCasesXml + \"</testcases>\") : \"\");\r\n    }\r\n\r\n    /**\r\n     * Function to add the enable line number in xml.\r\n     */\r\n    function enableLineXml() {\r\n        let enabledLine = AH.select(\"#enable-line\").value ? AH.select(\"#enable-line\").value : 0;\r\n        return (\"<enableline>\" + enabledLine + \"</enableline>\");\r\n    }\r\n\r\n    /**\r\n     * Function to handle the shortcut.\r\n     * @param event : Event parameter.\r\n     */\r\n    function onkeyTouch(event) {\r\n        //Added for ADA\r\n        if ((event.ctrlKey) && (event.shiftKey) && (event.keyCode == 13)) {\r\n            AH.select(\".evalProRunCode\").focus();\r\n            AH.select(\".evalProRunCode\").click();\r\n        } else if ((event.ctrlKey) && (event.shiftKey) && (event.keyCode == 32)) { \r\n            //ctrl+shift+space key\r\n            AH.select(\"#editor-footer\").focus();\r\n            AH.select(\"#editor-footer\").click();\r\n        }\r\n    }\r\n</script>\r\n<div tabIndex={l.zero} id=\"authoringArea\">\r\n    <div style=\"height: auto;\">\r\n        <div class=\"container\">\r\n            <div class=\"row\">\r\n                <div class=\"clearboth w-100\" style=\"padding-top: {10}px;\">\r\n                    <div id=\"editor-top\" style=\"width: 60%; min-height: 546px;\" class=\"float-left\">\r\n                        <div class=\"full-editor\" style=\"min-height: inherit;\">\r\n                            <div \r\n                                class=\"card card-default\" \r\n                                id=\"resizeable-editor\" \r\n                                style=\"margin:0; border-radius: 4px 4px 0 0; border-bottom: 0;\"\r\n                            >\r\n                                <div class=\"card-header editor-heading pt-md\" style=\"height:44px;\">\r\n                                    <div class=\"float-left\" style=\"margin: -9px -14px 0 -17px\">\r\n                                        <button \r\n                                            type=\"button\" \r\n                                            tabIndex={l.zero} \r\n                                            class=\"btn btn-md btn-light mr px-2 pt-1 language_select_button font14\" \r\n                                            on:click={handleLanguageModalOpen}\r\n                                        > \r\n                                            {(state.lang_type) == \"php\" ? \"PHP\" : toTitleCase((state.lang_type))}\r\n                                            <span class=\"icomoon-arrow-down-2 font20 position-relative\" style=\"top: 3px;\"></span>\r\n                                        </button>\r\n                                        {#if (state.lang_type=='sql' || state.lang_type=='mssql' || state.lang_type == \"psql\")}\r\n                                            <button \r\n                                                type=\"button\" \r\n                                                tabIndex={l.zero} \r\n                                                class=\"btn btn-md btn-light mr px-2 pt-1 database_select_button font14\" \r\n                                                on:click={handleDatabaseModalOpen}\r\n                                            > \r\n                                                {state.database}\r\n                                                <span class=\"icomoon-arrow-down-2 position-relative\" style=\"font-size: 20px;top:3px;\"></span>\r\n                                            </button>\r\n                                        {/if}\r\n                                        <span class=\"d-inline-block pt-2 pl-2 selected_language  h-imp font14\">\r\n                                            {(state.lang_type) == \"php\" ? \"PHP\" : toTitleCase((state.lang_type))}\r\n                                        </span>\r\n                                    </div>\r\n                                    <div class=\"float-right\" style=\"margin: -9px -14px 0 4px;\">\r\n                                        <button \r\n                                            type=\"button\" \r\n                                            tabIndex={l.zero} \r\n                                            class=\"btn btn-md btn-light mr px-2 font14\" \r\n                                            id=\"addTestCase\" \r\n                                            name=\"addTestCase\" \r\n                                            on:click={onOpenTestCase} \r\n                                            data-bs-toggle=\"modal\" \r\n                                            data-bs-target=\"#testcaseActivator\"\r\n                                        >\r\n                                            {l.add_testcase}\r\n                                        </button>\r\n                                        {#if (state.lang_type =='sql' || state.lang_type == 'mssql' || state.lang_type == \"psql\")} \r\n                                            <button type=\"button\" on:click={resetDB} class=\"btn btn-light mr px-2 font14\">{l.resetDB}</button>\r\n                                        {/if}\r\n                                        <button \r\n                                            type=\"button\" \r\n                                            tabIndex={l.zero} \r\n                                            class=\"evalProRunCode btn btn-light px-2 font14\" \r\n                                            on:click={runCode} \r\n                                            href=\"#output\" \r\n                                            id=\"evalProRunCode\" \r\n                                            name=\"submitcode\"\r\n                                        >\r\n                                            <i class=\"fa fa-play\"></i> \r\n                                            {(l.run).toUpperCase()}\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                                \r\n                                <div \r\n                                    class=\"card-body\" \r\n                                    id=\"code-editor\" \r\n                                    style=\"overflow: none; border-bottom: 1px solid #dddddd; padding: 0px; min-height: 483px; height: 488px;\">\r\n                                    <div class=\"card-header editor-heading py-1 pr-2 d-flex align-items-center justify-content-between action_block font14\">\r\n                                        <span>Pre</span>\r\n                                        <button \r\n                                            type=\"button\" \r\n                                            tabIndex={l.zero} \r\n                                            id=\"pre_editor_add_button\" \r\n                                            class=\"btn btn-sm btn-light px-2 pull-right font14\" \r\n                                            style=\"background-color: #fff\" \r\n                                            on:click={() => addPreBlock(-1)} \r\n                                        >\r\n                                            {state.preBlockShow ? \"Hide\" : \"Show\"}\r\n                                        </button>\r\n                                    </div>\r\n                                    <div class=\"{state.preBlockShow ? '' : 'h-imp'} pre-div\">\r\n                                        <textarea id='pre-editor' class=\"h\" placeholder={l.pre_code} name=\"pre-editor\"></textarea>    \r\n                                    </div>\r\n                                    <div style=\"height: 44px;\"class=\"card-header editor-heading pr-2 d-flex align-items-center justify-content-between action_block font14\">\r\n                                        <span class=\"d-inline span4\">Editor</span>\r\n                                        <div class=\"pull-right\">\r\n                                            <label tabIndex={l.zero} class=\"d-inline-block\" for=\"enable-line\">{l.enableline}:</label>\r\n                                            <input \r\n                                                type=\"text\" \r\n                                                placeholder={l.separate_by_quote} \r\n                                                class=\"form-control d-inline-block pt-1\" \r\n                                                style=\"margin-left: 10px; width: 125px\" \r\n                                                id=\"enable-line\" \r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"replEditor\">\r\n                                        <textarea id='repl-editor' class=\"h\" placeholder={l.write_function_here} name=\"repl-editor\"></textarea>   \r\n                                    </div>\r\n                                    <div class=\"card-header editor-heading py-1 pr-2 d-flex align-items-center justify-content-between action_block font14\">\r\n                                        <span>Post</span>\r\n                                        <button \r\n                                            type=\"button\" \r\n                                            id=\"post_editor_add_button\" \r\n                                            class=\"btn btn-sm btn-light px-2 pull-right font14\" \r\n                                            style=\"background-color: #fff\" \r\n                                            on:click={() => addPostBlock(-1)}\r\n                                        >\r\n                                            {state.postBlockShow ? \"Hide\" : \"Show\"}\r\n                                        </button>\r\n                                    </div>\r\n                                    <div class=\"post-div {state.postBlockShow ? '' : 'h-imp'}\" >\r\n                                        <textarea id='post-editor' class=\"h\" placeholder={l.postcode} name=\"post-editor\"></textarea> \r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div id=\"editor-footer\" class=\"float-right\" style=\"width: 39.5%; min-height: 120px; height: 585px\">\r\n                        <div>\r\n                            <div class=\"card card-default m-b\">\r\n                                <div class=\"card-header font14\" style=\"height:44px\">\r\n                                    {l.input}\r\n                                </div>\r\n                                <div id=\"input\" class=\"card-body p-0\">\r\n                                    <textarea \r\n                                        name=\"sampleInput\" \r\n                                        class=\"sampleInput\" \r\n                                        id=\"sampleInput\" \r\n                                        placeholder={l.seperate_by_enter_key} \r\n                                        style=\"margin: 0px; width: 100%; height: 80px; padding: 10px; resize: none; outline: none; border: 0px\"\r\n                                    ></textarea>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"card card-default\" style=\"margin-bottom: 0px\">   \r\n                                <div class=\"card-header pr-0 pt-1\" style=\"height: 44px;\">\r\n                                    <span class=\"pt-2 d-inline-block font14\" tabIndex={l.zero}>{l.output}</span>  \r\n                                    {#if !isPreview} \r\n                                        <select \r\n                                            id=\"raw_btn\" \r\n                                            class=\"form-select secure-icon d-inline-block mr-2 pull-right font14\" \r\n                                            name=\"raw_btn\" \r\n                                            style=\"height: 34px; width: 90px;\"\r\n                                            on:change={showOutputData}\r\n                                            on:blur={showOutputData}\r\n                                        >\r\n                                            <option value=\"html\" selected=\"selected\">HTML</option>\r\n                                            <option value=\"raw\">RAW</option>\r\n                                        </select>\r\n                                    {/if}\r\n                                </div>\r\n                                <div \r\n                                    id=\"output\" \r\n                                    tabIndex={l.zero} \r\n                                    class=\"test card-body output\" \r\n                                    style=\"resize: vertical; overflow: auto; padding: 10px; height: 342px; min-height: 342px\"\r\n                                >\r\n                                    <span></span>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"card card-default\" id=\"test_card\" style=\"display: none;\">\r\n                                <div class=\"card-header\" style=\"height: 44px;\">\r\n                                    <a data-bs-toggle=\"tab\" id=\"testcase-tab\" class=\"inputOutput font14\" href=\"#testcase\">{l.testcases}</a>\r\n                                </div>\r\n                                <div id=\"testcase\" class=\"card-body in\" style=\"resize: none; overflow: auto; padding: 10px; height: 180px\">\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        {#if (state.lang_type=='sql' || state.lang_type=='mssql' || state.lang_type == \"psql\")}\r\n            <Dialog class=\"remove_right_margin\" bind:visible={state.database_modal_open} width={225} aria-labelledby=\"simple-dialog-title\" style=\"background-color:#fff; border-radius: 5px;\">\r\n                <h4 class=\"mt-0 font21\">\r\n                    <div class=\"d-flex justify-content-between\">\r\n                        <div>Select Database</div>\r\n                        <span class=\"position-relative\" style=\"left: -16px; top: -10px; font-size: 20px; cursor: pointer;\" on:click = {handleDatabaseModalOpen}>X</span>\r\n                    </div>\r\n                </h4>\r\n                <div style=\"height: 500px; overflow-y: auto; padding-right: 18px;\">\r\n                    {#each state.databases as database} \r\n                        <div class=\"dropdown-item evalpro_dropdown\" tabindex=\"0\" on:click={handleDatabaseItem.bind(this, database)} key={database} style=\"height: 50px; line-height: 45px; cursor: pointer; padding-left: 20px;\">\r\n                            {database}\r\n                        </div>\r\n                    {/each}\r\n                </div>\r\n            </Dialog>\r\n        {/if}\r\n        <Dialog class=\"remove_right_margin\" bind:visible={state.open} width={225} style=\"background-color:#fff; border-radius: 5px;\">\r\n            <h4 class=\"mt-0 font21\">\r\n                <div class=\"d-flex justify-content-between\">\r\n                    <div>Select Language</div>\r\n                    <span class=\"position-relative\" style=\"left: -16px; top: -10px; font-size: 20px; cursor: pointer;\" on:click = {handleLanguageModalOpen}>X</span>\r\n                </div>\r\n            </h4>\r\n            <div style=\"height: 500px; overflow-y: auto; padding-right: 18px;\">\r\n                {#each lang_type as lang}\r\n                    <div class=\"dropdown-item evalpro_dropdown\" tabindex=\"0\" on:click={handleLanguageSelection.bind(this, lang)} key={lang} style=\"height:60px; cursor: pointer; padding-left: 20px\">\r\n                        <div class=\"text-center d-inline-block\" style=\"height: 50px; width: 50px; background: #ccc;border-radius: 50%;\">\r\n                            <img style=\"border-radius: 50%;height:50px;\" src={window.itemUrl + \"images/\" + (lang == \"c#\" ? \"csharp\" : lang ) + \"_lang.png\"} alt=\"Language\"/>\r\n                        </div>\r\n                        <div class=\"pl-1 d-inline-block\" style=\"padding: 15px;\">{lang.charAt(0).toUpperCase() + lang.slice(1)}</div>\r\n                    </div>\r\n                {/each}\r\n            </div>\r\n        </Dialog>\r\n        <div class=\"modal fade\" id=\"testcaseActivator\" tabIndex={l.minus_1} role=\"dialog\" aria-labelledby=\"testcaseActivatorLabel\">\r\n            <div class=\"modal-dialog modal-lg\" role=\"document\">\r\n                <div class=\"modal-content\">\r\n                    <div class=\"modal-header\">\r\n                        <input class=\"form-control testCaseInput h-imp\" type=\"text\" id=\"id1\" />\r\n                        <h4>{l.add_testcase}</h4>\r\n                        <button type=\"button\" class=\"close\" data-bs-dismiss=\"modal\" aria-label=\"Close\">\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                        </button>\r\n                    </div>\r\n                    <div class=\"modal-body overflow-auto mt-0 pt-0\" style=\"max-height:440px;\">\r\n                        <div id=\"setting\" class=\"setting\">\r\n                            <h5 class=\"float-left p-1\" style=\"width: 100%;padding: 18px !important;background: #f1f1f1;display: flex;justify-content: space-between;\">\r\n                                <lable class=\"mt-1\">{l.setting}: </lable>\r\n                                <label class=\"container_eval mr-4\">{l.is_graph}\r\n                                    <input class=\"is_graph\" type=\"checkbox\" value=\"{state.is_graph}\" data-attr=\"{state.is_graph}\" checked={state.is_graph}>\r\n                                    <span class=\"checkmark_eval\"></span>\r\n                                </label>\r\n                                <label class=\"container_eval mr-4\">{l.ignore_error}\r\n                                    <input class=\"ignore_error\" type=\"checkbox\" value=\"{state.ignore_error}\" checked={state.ignore_error}>\r\n                                    <span class=\"checkmark_eval\"></span>\r\n                                </label>\r\n                                <label class=\"container_eval\">{l.ignore_formatting}\r\n                                    <input class=\"ignore_formatting\" type=\"checkbox\" value=\"{state.ignore_formatting}\" checked={state.ignore_formatting}>\r\n                                    <span class=\"checkmark_eval\"></span>\r\n                                </label>\r\n                                <label class=\"container_eval\">{l.ignore_reset_db}\r\n                                    <input class=\"ignore_reset_db\" type=\"checkbox\" value=\"{state.ignore_reset_db}\" checked={state.ignore_reset_db}>\r\n                                    <span class=\"checkmark_eval\"></span>\r\n                                </label>\r\n                                <label class=\"container_eval\">{l.pre_tag}\r\n                                    <input class=\"is_pre_tag\" type=\"checkbox\" value=\"{state.is_pre_tag}\" checked={state.is_pre_tag}>\r\n                                    <span class=\"checkmark_eval\"></span>\r\n                                </label>\r\n                            </h5>\r\n                        </div>\r\n                        <div id=\"caseContainer\" class=\"float-right mt-sm overflow-auto\" style=\"width: 100%\">\r\n                            <div class=\"caseStack m-sm\">\r\n                                <h5 class=\"float-left\" style=\"width: auto\">\r\n                                    <span tabIndex={l.zero}>{l.select_case_match}</span>                           \r\n                                    <select\r\n                                        value={state.testcase_sensitive}\r\n                                        on:change={setDefaultXML}\r\n                                        on:blur={setDefaultXML}\r\n                                        style=\"margin: 2px 24px\"\r\n                                        class=\"v-bottom form-select\"\r\n                                        id=\"testcase_sensitive\" \r\n                                    >                               \r\n                                        <option value=\"0\">{l.case_insensitive}</option>\r\n                                        <option value=\"1\">{l.partial_matching}</option>\r\n                                        <option value=\"2\">{l.special_char}</option>\r\n                                    </select>\r\n                                </h5>\r\n                                <textarea style=\"height: 100px;\" class={state.lang_type == \"sql\" || state.lang_type == \"psql\" ? \"form-control width-md1 d-inline-block mr-md h-imp\" : \"form-control width-md1 d-inline-block mr-md\"} placeholder=\"Input seperated by ','\"></textarea>\r\n                                <textarea style=\"height; 100px;\" class={'form-control '+(state.lang_type == \"sql\" || state.lang_type == \"psql\" ? \"span9\" : \"width-md1\")+' d-inline-block ml-md'} placeholder=\"Output\"></textarea>\r\n                                <span tabIndex=\"0\" class=\"float-right icomoon-new-24px-delete-1 s5 pointer caseDelBtn\"></span>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"d-inline-flex pull-right\" style=\"width: 50px;\">\r\n                            <Button \r\n                                color=\"primary\" \r\n                                unelevated=\"true\"\r\n                                on:click={addMore} \r\n                                aria-label=\"Add\" \r\n                                style=\"height: 40px; width: 40px; border-radius: 50%\"\r\n                            >\r\n                                <spna class=\"icomoon-plus\"></spna>\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"modal-footer\">\r\n                        <button type=\"button\" on:click={addTestCase} class=\"btn btn-light addTestCase\" data-bs-dismiss=\"modal\">{l.submit}</button>\r\n                        <button type=\"button\" class=\"btn btn-light\" on:click={cancelTestCase} data-bs-dismiss=\"modal\">{l.cancel}</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <textarea id=\"special_module_user_xml\" class=\"h\"></textarea>\r\n    <Dialog bind:visible={state.remediationToggle} width={960} class=\"dialog bg-white\">\r\n        <div style=\"text-align: left;\">\r\n            <div class=\"font20\">{l.remediation}</div>\r\n        </div>\r\n        <div id=\"remediationModel\">\r\n            <center class=\"mt-xl\">\r\n                <Loader size = {60} thickness = {3} />\r\n                <h4>{l.calculate_answer}<br/>{l.please_wait}</h4>\r\n            </center>\r\n        </div>\r\n        <Snackbar\r\n            bind:visible={state.snackback} \r\n            bg=\"#333\" \r\n            bottom={true}  \r\n            timeout={3000} \r\n            style=\"position:fixed; bottom:50px\"\r\n        >\r\n            {message}\r\n        </Snackbar>\r\n        <div slot=\"footer\" class=\"svelteFooter\">\r\n            <Button\r\n                raised={true}\r\n                on:click = {()=>{ state.remediationToggle = false}}\r\n                class=\"bg-light\"\r\n            >\r\n                {l.cancel}\r\n            </Button>\r\n        </div>\r\n    </Dialog>\r\n    <input type=\"hidden\" id=\"ansModeAnswer\" value=\"\" />\r\n</div>\r\n<svelte:window on:keyup={onkeyTouch}  />"],"names":[],"mappings":"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"}