{"version":3,"file":"HotspotToken-fd54a1cf.js","sources":["../../../clsSMHotspot/HotspotToken.svelte"],"sourcesContent":["<script>\n    import { beforeUpdate, onMount } from \"svelte\";\n    import { writable } from \"svelte/store\";\n    import { AH, JSONToXML, XMLToJSON } from \"../helper/HelperAI.svelte\";\n    import l from '../src/libs/editorLib/language';\n    export let xml;\n    export let isReview;\n    export let editorState;\n    export let getChildXml;\n\n    let state = {};\n    let hdd = writable({\n        xml: \"\",\n        cdata: \"\",\n        viewToken: \"\",\n        viewTemplate: \"\",\n        correctAns: [],\n        itemLayout: [],\n        activeToken: \"\",\n        confirmDialog: false\n    });\n    const unsub = hdd.subscribe((items)=> {\n        state = items;\n    })\n    // calls whenever there is change in state or props \n    beforeUpdate(()=> {\n        // check if there is change in xml\n        if (xml != state.xml) {\n            state.xml = xml;\n            // for refreshing the module with new xml\n            loadModule(xml);\n        }\n    })\n\n    // called just after rendering\n    onMount(()=> {\n        // check the conditions if it is IE\n        // if (isIE) {\n        //     AH.listen(document, \"keyup\", \".hotspot-token .token\", (_this, event)=> {\n        //         // binding the enter key in case of ada\n        //         if (event.which == 13) {\n        //             AH.trigger(_this, 'click');\n        //         }\n        //     });\n        // }\n        \n        // storing and updating the xml\n        getChildXml(xml+\" \");\n        // for showing the Enter text tab by default \n        toggleTemplateToken(\"none\", \"block\");\n\n        // for showing the text into the editable area of the Enter text\n        AH.selectAll('.text_area', 'value', state.cdata.trim().replace(/[ ]+/gm, ' '));\n\n        // function for showing warning for the unneccessary space\n        AH.bind(\".text_area\", \"keydown\", (event)=> {\n            let key_pressed = event;\n            var element_name = document.querySelector('.text_area');\n            // getting start pos\n            var startPos = element_name.selectionStart;\n            // getting end pos\n            var endPos = element_name.selectionEnd;\n            if (endPos == startPos) {\n                // if space key is pressed\n                if (key_pressed.which == 32) {\n                    if ((AH.select('.text_area').value.charAt(startPos - 1) == \" \") || (AH.select('.text_area').value.charAt(startPos) == \" \")) {\n                        AH.alert(l.space_warning);\n                        key_pressed.preventDefault();\n                    }\n                }\n            }\n        });\n    });\n\n    // parse the xml and load the module accordingly\n    function loadModule(loadXml) {\n        // Here xml is converted into the json and pass into the parseXMLAuthoring for xml parsing\n        loadXml = XMLToJSON(loadXml);\n        parseXMLAuthoring(loadXml);\n    }\n\n    // parsing the xml for authoring\n    async function parseXMLAuthoring(MYXML) {\n        // getting the correct ans sepereted by , in array format\n        state.correctAns = (MYXML.smxml.div._correctAns.trim()) ? MYXML.smxml.div._correctAns.split(\",\") : [];\n        state.cdata = MYXML.smxml.div.__cdata;\n        state.activeToken = MYXML.smxml.div._type;\n        // switching the module on the basis of the type used\n        switch(MYXML.smxml.div._type) {\n            case \"w\" :\n                // in case of word\n                parseWord(state.cdata);\n                break;\n            case \"s\" :\n                // in case of sentence\n                parseSentance(state.cdata);\n                break;\n            case \"p\" :\n                // in case of paragraph\n                parseParagraph(state.cdata);\n                break;\n            default :\n                console.warn(\"No type found to parse\");\n            break;\n        }\n    }\n\n    // parsing the word\n    function parseWord(str) {\n        // replace the newline with \" #newline# \"\n        str = str.replace(/\\n/g, \" #newline# \");\n        //Split the string with space and remove array which contain null value\n        let word = str.split(\" \").map( (item)=> { return item.trim() } ).filter( (arr)=> { return arr != \"\" });\n        let tempWord = [];\n\n        /* split punctuation mark in word and store in the tempWord array */\n        word.map((data, i)=> {\n            let special_symbol = data.match(/[.,]/g);\n            if (special_symbol) {\n                let splitText = data.split(special_symbol[0]);\n                tempWord.push(splitText[0]);\n                tempWord.push(special_symbol[0]);\n                if (splitText[1].trim()) {\n                    tempWord.push(splitText[1]);\n                }\n            } else {\n                tempWord.push(data)\n            }\n        });\n        /*end*/\n        let wordArray = [];\n        // store id, value and selected in wordArray\n        // Here id is unique id of that element , value stores the element value and selected stores wether it is selected or not\n        tempWord.map((data, i)=> {\n            wordArray.push({\n                id: \"ID\"+i,\n                value: data,\n                selected: getSelected(i)\n            });\n        });\n        \n        state.itemLayout = wordArray;\n    }\n\n    // parsing the sentence\n    function parseSentance(str) {\n        //Split the string with fullstop and remove array which contain null value\n        let sentance = str.split(\".\").map( (item)=> { return item.trim() } ).filter( (arr)=> { return arr != \"\" });\n        let sentanceArray = [];\n\n        // store id, value and selected in sentanceArray\n        // Here id is unique id of that element , value stores the element value and selected stores wether it is selected or not\n        sentance.map((data, i)=> {\n            sentanceArray.push({\n                id: \"ID\"+i,\n                value: data+\".\",\n                selected: getSelected(i)\n            });\n        });\n        state.itemLayout = sentanceArray;\n    }\n\n    // parsing the paragraph\n    function parseParagraph(str) {\n        //Split the string with paragraph and remove array which contain null value\n        let paragraph = str.split(\"\\n\").map( (item)=> { return item.trim() } ).filter( (arr)=> { return arr != \"\" });\n        let paragraphArray = [];\n\n        // store id, value and selected in paragraphArray\n        // Here id is unique id of that element , value stores the element value and selected stores wether it is selected or not\n        paragraph.map((data, i)=> {\n            paragraphArray.push({\n                id: \"ID\"+i,\n                value: data,\n                selected: getSelected(i)\n            });\n        });\n        state.itemLayout = paragraphArray;\n    }\n\n    // update the cdata whenever there is chamge in textarea\n    function updateCdata(e) {\n        // convert the XML into JSON using XMLToJSON func and stored in xml\n        let xml = XMLToJSON(state.xml);\n        // clear the correctAns \n        xml.smxml.div._correctAns = \"\";\n        // updtae the cdata\n        xml.smxml.div.__cdata = e.target.value;\n        // stores and update the xml \n        getChildXml(JSONToXML(xml));\n    }\n\n    // calls whenever tab is changed\n    function toggleTemplateToken(viewToken, viewTemplate) {\n        state.viewToken = viewToken;\n        state.viewTemplate = viewTemplate;\n    }\n\n    // return true if that particular position was selected\n    function getSelected(pos) {\n        return (AH.findInArray(\"ID\" + pos, state.correctAns) ? true: false);\n    }\n\n    // for changing the mode word, sentence, paragraph\n    function setTemplateType(type) {\n        // convert the XML into JSON using XMLToJSON func and stored in xml\n        let xml = XMLToJSON(state.xml);\n        // update the type w,p,s \n        xml.smxml.div._type = type;\n        // clear the correctAns \n        xml.smxml.div._correctAns = \"\";\n        // stores and update the xml \n        getChildXml(JSONToXML(xml));\n    }\n\n    // for setting the correct answer which is selected\n    function setSelected(pos) {\n        state.itemLayout[pos].selected = !state.itemLayout[pos].selected;\n        setCorrectAnswer(pos,state.itemLayout[pos].selected);\n    }\n\n    // set the correct answer\n    function setCorrectAnswer(id, selected) {\n        if (selected == true) {\n            // if token is selected then push it in correctAns\n            state.correctAns.push(\"ID\"+id);\n        } else if (selected == false) {\n            let deleteValue = state.correctAns.indexOf(\"ID\"+id);\n            if (deleteValue > -1) {\n                // if token is deselected then delete that element from the correctAns\n                state.correctAns.splice(deleteValue,1);\n            } \n        }\n        // join the correctAns with , sepereted and stored in crt\n        let crt = state.correctAns.filter( function(arr) { return arr != \"\" }).join();\n        // update the correctAns attribute in the xml\n        updateCorrect(crt);\n    }\n\n    // update correct answer\n    function updateCorrect(correct) {\n        // convert the XML into JSON using XMLToJSON func and stored in xml\n        let xml = XMLToJSON(state.xml);\n        // updating the correctAns\n        xml.smxml.div._correctAns = correct;\n        // stores and update the xml \n        getChildXml(JSONToXML(xml));\n    }\n\n    // whenever clear button is clicked\n    function clearToken() {\n        // convert the XML into JSON using XMLToJSON func and stored in xml\n        let xml = XMLToJSON(state.xml);\n        // updating the correctAns\n        xml.smxml.div._correctAns = \"\";\n        // stores and update the xml \n        getChildXml(JSONToXML(xml));\n    }\n</script>\n\n<div class=\"hotspot-token p-2 border\">\n    <div class=\"row ml-sm2\">\n        <div class=\"btn-group amazonpaybutton mb-2 mr-4\" role=\"group\">\n            <button \n                type=\"button\"\n                class={(state.viewTemplate == \"block\")? \"btn btn-light active\" : \"btn btn-light \"} \n                on:click={toggleTemplateToken.bind(this, \"none\", \"block\")}\n            >\n                {l.edit_template}\n            </button>\n            <button \n                type=\"button\"\n                class={(state.viewToken == \"block\")?\"btn btn-light active\":\"btn btn-light\"}  \n                on:click={toggleTemplateToken.bind(this, \"block\", \"none\")}\n            >\n                {l.edit_token}\n            </button>\n        </div>\n        <div style=\"display: {state.viewToken}\">\n            <div class=\"btn-group border-0 bg-none\">\n                <button \n                    type=\"button\" \n                    class={(state.activeToken == \"w\") ? \"btn btn-light active\" : \"btn btn-light\"} \n                    on:click={setTemplateType.bind(this, \"w\")}\n                >\n                    {l.word}\n                </button>\n                <button \n                    type=\"button\" \n                    class={(state.activeToken == \"s\") ? \"btn btn-light active\" : \"btn btn-light\"} \n                    on:click={setTemplateType.bind(this, \"s\")}\n                >\n                    {l.sentance}\n                </button>\n                <button \n                    type=\"button\"\n                    class={(state.activeToken == \"p\") ? \"btn btn-light active\" : \"btn btn-light\"} \n                    on:click={setTemplateType.bind(this, \"p\")}\n                >\n                    {l.paragraph}\n                </button>\n            </div>\n            <button type=\"button\" class=\"btn btn-outline-primary ml-2\" on:click={clearToken.bind(this)}>{l.clear}</button>\n        </div>\n    </div>\n    <textarea \n        style=\"display: {state.viewTemplate}\" \n        on:change={updateCdata.bind(this)} \n        rows=\"10\" \n        cols=\"65\"\n        class=\"text_area p-2 mt-3 fwidth\"\n    ></textarea>\n    <div style=\"display: {state.viewToken}\" class=\"mt-3 light-cyan-bg border\">\n        <div class=\"d-inline-block px-1 py-2 word_break\">\n        {#if state.itemLayout}\n            {#each state.itemLayout as data, i }\n                {#if data.value == \",\" || data.value == \".\"}\n                    <div class=\"float-start position-relative done_percent_bar\" style=\"width: 2px\">\n                        <span \n                            class=\"position-absolute float-start top5\"\n                            style=\"left: -3px\"\n                        >\n                            {data.value}\n                        </span>\n                    </div>\n                {:else if data.value == \"#newline#\" }\n                    <br/>\n                {:else}\n                    <div\n                        data-id={\"ID\"+i}\n                        on:click={setSelected.bind(this, i)}\n                        data-selected={data.selected}\n                        tabIndex=\"0\"\n                        class=\"token float-start mx-1 mb-1 p-1 border border-secondary pointer text-left {data.selected ? 'token_selected' : 'token bg-white'}\"\n                        style=\"user-select: none;border-radius: 3px; font: 14px;\"\n                    >\n                        {data.value}\n                    </div>\n                {/if}\n            {/each}\n        {/if}\n        </div>\n    </div>\n    <div style=\"display: {state.viewToken}\">\n        <div class=\"pl-2 pt-2 font-weight-bold\">{state.correctAns.length} {l.no_of_token}</div>\n    </div>\n    <div class=\"text-danger pl-2 pt-2\" style=\"font: 13px;\">\n        <span class=\"font-weight-bolder\">* {l.note_label}</span>\n        <span>{l.token_message}</span>\n    </div>\n</div>\n<style>\n    .token_selected {\n        background-color: #64bb63;\n        color: #fff;\n    }\n</style>"],"names":["l"],"mappings":"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"}