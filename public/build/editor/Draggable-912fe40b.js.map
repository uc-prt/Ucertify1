{"version":3,"file":"Draggable-912fe40b.js","sources":["../../../clsSMDragNDrop/libs/plugins/Draggable.js"],"sourcesContent":["\"use strict\";\r\n//window.isDraggableAdded = (window.isDraggableAdded) ? window.isDraggableAdded : false;\r\n//window.isDraggable = (window.isDraggable) ? window.isDraggable :false;\r\n\r\nexport default class Draggable {\r\n    /* \r\n        DragNDrop class fire following events \r\n            onDragStart(event, element) // when dragging is just started\r\n            onDrag(event, ui) // when element is dragging\r\n            onDrop(source, target) // when element is dropped\r\n            onRemove(source, target) // whene drop element is removed\r\n            onOver(element) // when draggable is over the doppable area\r\n            onOut(element) // when draggble leave the droppable area\r\n            isRevert() // when element is started dragging but not droppped at proper place\r\n            changeContainment(element) // if defined set the return element as container\r\n\r\n        Dragging:\r\n            onDragStart(event, element) // when dragging is just started\r\n            onDrag(event, ui)  // when element is dragging\r\n            onDragStop(event, position , ui) // when element is dropped\r\n            changeContainment(element) // if defined set the return element as container\r\n\r\n\r\n    */\r\n    constructor(container, drag, drop, draglist) {\r\n        if (typeof (container) == 'object') {\r\n            this.container = container.containment;\r\n            this.drag =  container.classes;\r\n            this.ignore = container.ignore;\r\n            this.initDraggable();\r\n        } else {\r\n            this.drag = drag;\r\n            this.drop = drop;\r\n            this.container = container;\r\n            this.initDnd();\r\n        }\r\n        this.lastPosition = [0, 0];\r\n        window.draglist = draglist;\r\n        this.isStart = false;\r\n        this.isMoving = false;\r\n        this.node = null;\r\n        this.target = null;\r\n        this.prenode = null;\r\n    }\r\n\r\n    checkPosition(event, node) {\r\n        let boundry = document.querySelector(this.container).getBoundingClientRect()\r\n        let x = event.clientX - boundry.left;\r\n        let y = event.clientY - boundry.top;\r\n        let dimension = {\r\n            width : node.offsetWidth / 2,\r\n            height: node.offsetHeight / 2,\r\n        }\r\n        if (x < dimension.width) {\r\n            x = dimension.width;\r\n        } else if (x > (boundry.width -  dimension.width) ) {\r\n            x = (boundry.width -  dimension.width);\r\n        } \r\n\r\n        if (y < dimension.height) {\r\n            y = dimension.height;\r\n        } else if (y > (boundry.height -  dimension.height)) {\r\n            y = (boundry.height -  dimension.height);\r\n        }\r\n\r\n        if (x < 0) {\r\n            x = dimension.width + 10;\r\n        } \r\n        if (y < 0) {\r\n            y = dimension.height + 10;\r\n        }\r\n\r\n        return [x, y];\r\n    };\r\n\r\n    binddndEvents(drag, drop) {\r\n        if (drag) {\r\n            AI.listen('body', 'mousedown', drag, (current, event) => {\r\n                if (this.changeContainment) {\r\n                    this.container = this.changeContainment(current);\r\n                }\r\n                if (!(current.classList.contains('uc_drag_disable') || current.classList.contains('lab_disable') )) {\r\n                    if (drop) {\r\n                        AI.selectAll(drop).forEach(element => {\r\n                            if (element.getAttribute('droping') == '2') {\r\n                                element.style.zIndex = 5;\r\n                            } else {\r\n                                element.style.zIndex = 2;\r\n                            }\r\n                        })\r\n                    }\r\n\r\n                    this.prenode = current;\r\n                    this.isStart = false;\r\n                    this.node = null;\r\n\r\n                    if (this.onDragStart) {\r\n                        let clone_node = this.onDragStart(event, this.prenode);\r\n                        clone_node.style.zIndex= 100;\r\n                        this.node = clone_node;\r\n                        this.lastPosition = this.checkPosition(event, this.prenode)\r\n                        clone_node.style.top = this.lastPosition[1] + this.prenode.offsetHeight / 2 + 'px';\r\n                        clone_node.style.left = this.lastPosition[0]  - this.prenode.offsetWidth / 2 + 'px';\r\n                        document.querySelector(this.container).appendChild(clone_node);\r\n                        this.isStart = true;\r\n                    }\r\n                }\r\n            });\r\n\r\n            AI.listen('body', 'dragstart', drag, (current, event) => {\r\n                event.preventDefault();\r\n            });\r\n\r\n            AI.listenAll('body', 'mousemove', (event) => {\r\n                if (this.isStart && this.node) {\r\n                    this.isMoving = true;\r\n                    this.lastPosition = this.checkPosition(event, this.node)\r\n                    this.node.style.top = this.lastPosition[1] + this.node.offsetHeight / 2 + 'px';\r\n                    this.node.style.left = this.lastPosition[0]  - this.node.offsetWidth / 2 + 'px';\r\n                    this.onDrag && this.onDrag(event, {node: this.node, top: (this.lastPosition[1] + this.node.offsetHeight / 2), left : (this.lastPosition[0]  - this.node.offsetWidth / 2 )})\r\n                }\r\n            });\r\n\r\n            AI.listenAll('body', 'mouseup', () => {\r\n                if (this.isStart && this.node && this.isMoving) {\r\n                    this.isMoving = false;\r\n                    this.isStart = false;\r\n                    if (this.target) {\r\n                        if (this.target.getAttribute('droping') == '1' && this.prenode.getAttribute('droping') == '2') {\r\n                            this.onDropChange(this.prenode, this.target, window.draglist[this.prenode.id][0]);\r\n                            this.saveDetail(window.draglist[this.prenode.id][0], this.target);\r\n                            delete window.draglist[this.prenode.id];\r\n                        } else if (this.target.getAttribute('droping') == '2' && this.prenode.getAttribute('droping') == '2') {\r\n                            this.onDropInterchange(this.prenode, this.target, window.draglist[this.prenode.id][0], window.draglist[this.target.id][0]);\r\n                            let clone_draglist = Object.assign({}, window.draglist);\r\n                            this.saveDetail(clone_draglist[this.prenode.id][0], this.target);\r\n                            this.saveDetail(clone_draglist[this.target.id][0], this.prenode);\r\n                        } else if (this.target.getAttribute('droping') == '2' && this.prenode.getAttribute('draging') == '1') {\r\n                            this.onDragInterchange(this.prenode, this.target, window.draglist[this.target.id][0]);\r\n                            this.saveDetail(this.prenode, this.target)\r\n                        } else if (this.prenode.id != this.target.id) { //  if data is drop from source to target\r\n                            this.saveDetail(this.prenode, this.target)\r\n                            this.onDrop(this.prenode, this.target)\r\n                        } else if (this.prenode.id == this.target.id) { // if both the drop and drag are same target\r\n                            this.target.classList.remove('drop-hover');\r\n                            this.target.style.opacity = '';\r\n                        }\r\n                    } else if (this.node.getAttribute('draging') == '2') { // when element is remove from target -> source \r\n                        let target =  window.draglist[this.prenode.id];\r\n                        this.onRemove(this.prenode, target[0])\r\n                        delete window.draglist[this.prenode.id];\r\n                    } else {\r\n                        this.isRevert && this.isRevert();\r\n                    }\r\n\r\n                    this.node.remove();\r\n                } else if (!this.isMoving && this.node) {\r\n                    this.node.remove();\r\n                }\r\n        \r\n                if (drop) {\r\n                    AI.selectAll(drop).forEach(element => {\r\n                        element.style.zIndex = '';\r\n                        // element.style.position = '';\r\n                    });\r\n                }\r\n        \r\n                this.node = null;\r\n                this.target = null;\r\n                this.prenode = null;\r\n            });\r\n        }\r\n        if (drop) {\r\n            AI.listen('body', 'mousemove', drop, (current) => {\r\n                if (this.isStart && this.node && this.isMoving) {\r\n                    this.target = current;\r\n                    this.target.classList.add('drop-hover');\r\n                    this.target.style.opacity = '0.7';\r\n                    this.onOver && this.onOver(current);\r\n                }\r\n            });\r\n            \r\n            AI.listen('body', 'mouseover', drop, (current) => {\r\n                this.target = current;\r\n                this.target.classList.add('drop-hover');\r\n            });\r\n\r\n            AI.listen('body','mouseout', drop, () => {\r\n                if (this.isStart && this.node && this.isMoving && this.target) {\r\n                    this.onOut && this.onOut(this.target);\r\n                    this.target.style.opacity = '1';\r\n                    this.target = null;\r\n                } \r\n                if (this.target != null || this.target != undefined) {\r\n                    this.target.classList.remove('drop-hover');\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    bindDraggable(drag) {\r\n        AI.listen('body', 'mousedown', drag, (current, event) => {\r\n            if (this.changeContainment) {\r\n                this.container = this.changeContainment(current);\r\n            }\r\n\r\n            if (this.ignore && Array.isArray(this.ignore) && event.target) {\r\n                let revert = false;\r\n                for (let index = 0; index < this.ignore.length; index++) {\r\n                    if (event.target.closest(this.ignore[index]) || event.target.classList.contains(this.ignore[index])) {\r\n                        revert = true;\r\n                        break;\r\n                    }\r\n                }\r\n                if (revert) {\r\n                    return false;\r\n                }\r\n            }\r\n            this.isStart = true;\r\n            this.node = current;\r\n            this.lastPosition = this.checkPosition(event, current)\r\n            current.style.top = this.lastPosition[1] - current.offsetHeight / 2 + 'px';\r\n            current.style.left = this.lastPosition[0]  - current.offsetWidth / 2 + 'px';\r\n            this.onDragStart && this.onDragStart(event, current);\r\n        });\r\n\r\n        AI.listen('body', 'dragstart', drag, (current, event) => {\r\n            event.preventDefault();\r\n        });\r\n\r\n        AI.listenAll('body', 'mousemove', (event) => {\r\n            if (this.isStart && this.node) {\r\n                this.isMoving = true;\r\n                this.lastPosition = this.checkPosition(event, this.node)\r\n                this.node.style.top = this.lastPosition[1] - this.node.offsetHeight / 2 + 'px';\r\n                this.node.style.left = this.lastPosition[0]  - this.node.offsetWidth / 2 + 'px';\r\n                this.node.style.zIndex = 100;\r\n                this.onDrag && this.onDrag(event, {top: (this.lastPosition[1] - this.node.offsetHeight / 2), left : (this.lastPosition[0]  - this.node.offsetWidth / 2 )})\r\n            }\r\n        });\r\n\r\n        AI.listenAll('body', 'mouseup', (event) => {\r\n            if (this.isStart && this.node && this.isMoving) {\r\n                this.isMoving = false;\r\n                this.isStart = false;\r\n                this.lastPosition = this.checkPosition(event, this.node)\r\n                this.node.style.top = this.lastPosition[1] - this.node.offsetHeight / 2 + 'px';\r\n                this.node.style.left = this.lastPosition[0]  - this.node.offsetWidth / 2 + 'px';\r\n                this.node.style.zIndex = 'auto';\r\n                this.onDragStop && this.onDragStop(event, {top: (this.lastPosition[1] - this.node.offsetHeight / 2), left : (this.lastPosition[0]  - this.node.offsetWidth / 2 )}, this.node)\r\n            }\r\n            this.node = null;\r\n        });\r\n    }\r\n\r\n    initDnd() {\r\n        if (!window.isDraggableAdded) {\r\n            this.binddndEvents(this.drag, this.drop);\r\n            window.isDraggableAdded = true;\r\n        }\r\n    };\r\n\r\n    initDraggable() {\r\n        if (!window.isDraggable) {\r\n            this.bindDraggable(this.drag);\r\n            window.isDraggable = true;\r\n        }\r\n    };\r\n\r\n    saveDetail(source, target) {\r\n        window.draglist[target.id] = [source, target];\r\n        window.draglist = window.draglist;\r\n    };\r\n\r\n    onDrop(source, target) {\r\n        let copied = source.cloneNode(true);\r\n        target.style.backgroundColor = copied.getAttribute('data-bgcolor');\r\n        target.setAttribute('draging', 2);\r\n        target.setAttribute('droping', 2); \r\n    \r\n        // for disabling the dragable\r\n        if (! (source.getAttribute(\"data-multi_drag\") == \"1\") ) {\r\n            source.classList.add('uc_drag_disable');\r\n            source.style.setProperty(\"cursor\", \"no-drop\", \"important\");\r\n            source.style.setProperty(\"opacity\", \"0.5\", \"important\");\r\n        }\r\n    \r\n        target.classList.remove('drop-hover');\r\n        target.style.opacity = '1';\r\n        AI.find(target, 'p').innerText = AI.find(copied, 'p').innerText;\r\n    } \r\n    \r\n    onRemove(source, target) {\r\n    \r\n        source.removeAttribute('draging');\r\n        source.style.backgroundColor = source.getAttribute('data-bgcolor');\r\n        source.setAttribute('droping', 1);\r\n    \r\n        // for disabling the dragable\r\n        if (target) {\r\n            target.classList.remove('uc_drag_disable');\r\n            target.style.cursor = '';\r\n            target.style.opacity = '';\r\n        }\r\n    \r\n        source.classList.remove('drop-hover');\r\n        source.style.opacity = '1';\r\n        AI.find(source, 'p').innerText = source.getAttribute('data-caption');\r\n    } \r\n    \r\n    onDropChange(source, target, originalSource) {\r\n        this.onDrop(originalSource, target);\r\n        this.onRemove(source);\r\n    }\r\n    \r\n    onDropInterchange(source, target, originalSource, originalTarget) {\r\n        this.onDrop(originalSource, target);\r\n        this.onDrop(originalTarget, source);\r\n    }\r\n    \r\n    onDragInterchange(source, target, originalSource) {\r\n        this.onRemove(target, originalSource);\r\n        this.onDrop(source, target);\r\n    }\r\n}\r\n\r\n"],"names":["Draggable","[object Object]","container","drag","drop","draglist","this","containment","classes","ignore","initDraggable","initDnd","lastPosition","window","isStart","isMoving","node","target","prenode","event","boundry","document","querySelector","getBoundingClientRect","x","clientX","left","y","clientY","top","dimension","width","offsetWidth","height","offsetHeight","AI","listen","current","changeContainment","classList","contains","selectAll","forEach","element","getAttribute","style","zIndex","onDragStart","clone_node","checkPosition","appendChild","preventDefault","listenAll","onDrag","onDropChange","id","saveDetail","onDropInterchange","clone_draglist","Object","assign","onDragInterchange","onDrop","remove","opacity","onRemove","isRevert","add","onOver","onOut","undefined","Array","isArray","revert","index","length","closest","onDragStop","isDraggableAdded","binddndEvents","isDraggable","bindDraggable","source","copied","cloneNode","backgroundColor","setAttribute","setProperty","find","innerText","removeAttribute","cursor","originalSource","originalTarget"],"mappings":"AAIe,MAAMA,EAoBjBC,YAAYC,EAAWC,EAAMC,EAAMC,GACL,oBACtBC,KAAKJ,UAAYA,EAAUK,YAC3BD,KAAKH,KAAQD,EAAUM,QACvBF,KAAKG,OAASP,EAAUO,OACxBH,KAAKI,kBAELJ,KAAKH,KAAOA,EACZG,KAAKF,KAAOA,EACZE,KAAKJ,UAAYA,EACjBI,KAAKK,WAETL,KAAKM,aAAe,CAAC,EAAG,GACxBC,OAAOR,SAAWA,EAClBC,KAAKQ,SAAU,EACfR,KAAKS,UAAW,EAChBT,KAAKU,KAAO,KACZV,KAAKW,OAAS,KACdX,KAAKY,QAAU,KAGnBjB,cAAckB,EAAOH,GACjB,IAAII,EAAUC,SAASC,cAAchB,KAAKJ,WAAWqB,wBACjDC,EAAIL,EAAMM,QAAUL,EAAQM,KAC5BC,EAAIR,EAAMS,QAAUR,EAAQS,IAC5BC,EAAY,CACZC,MAAQf,EAAKgB,YAAc,EAC3BC,OAAQjB,EAAKkB,aAAe,GAqBhC,OAnBIV,EAAIM,EAAUC,MACdP,EAAIM,EAAUC,MACPP,EAAKJ,EAAQW,MAASD,EAAUC,QACvCP,EAAKJ,EAAQW,MAASD,EAAUC,OAGhCJ,EAAIG,EAAUG,OACdN,EAAIG,EAAUG,OACPN,EAAKP,EAAQa,OAAUH,EAAUG,SACxCN,EAAKP,EAAQa,OAAUH,EAAUG,QAGjCT,EAAI,IACJA,EAAIM,EAAUC,MAAQ,IAEtBJ,EAAI,IACJA,EAAIG,EAAUG,OAAS,IAGpB,CAACT,EAAGG,GAGf1B,cAAcE,EAAMC,GACZD,IACAgC,GAAGC,OAAO,OAAQ,YAAajC,GAAM,CAACkC,EAASlB,KAI3C,GAHIb,KAAKgC,oBACLhC,KAAKJ,UAAYI,KAAKgC,kBAAkBD,KAEtCA,EAAQE,UAAUC,SAAS,qBAAsBH,EAAQE,UAAUC,SAAS,iBAC1EpC,GACA+B,GAAGM,UAAUrC,GAAMsC,SAAQC,IACgB,KAAnCA,EAAQC,aAAa,WACrBD,EAAQE,MAAMC,OAAS,EAEvBH,EAAQE,MAAMC,OAAS,KAKnCxC,KAAKY,QAAUmB,EACf/B,KAAKQ,SAAU,EACfR,KAAKU,KAAO,KAERV,KAAKyC,aAAa,CAClB,IAAIC,EAAa1C,KAAKyC,YAAY5B,EAAOb,KAAKY,SAC9C8B,EAAWH,MAAMC,OAAQ,IACzBxC,KAAKU,KAAOgC,EACZ1C,KAAKM,aAAeN,KAAK2C,cAAc9B,EAAOb,KAAKY,SACnD8B,EAAWH,MAAMhB,IAAMvB,KAAKM,aAAa,GAAKN,KAAKY,QAAQgB,aAAe,EAAI,KAC9Ec,EAAWH,MAAMnB,KAAOpB,KAAKM,aAAa,GAAMN,KAAKY,QAAQc,YAAc,EAAI,KAC/EX,SAASC,cAAchB,KAAKJ,WAAWgD,YAAYF,GACnD1C,KAAKQ,SAAU,MAK3BqB,GAAGC,OAAO,OAAQ,YAAajC,GAAM,CAACkC,EAASlB,KAC3CA,EAAMgC,oBAGVhB,GAAGiB,UAAU,OAAQ,aAAcjC,IAC3Bb,KAAKQ,SAAWR,KAAKU,OACrBV,KAAKS,UAAW,EAChBT,KAAKM,aAAeN,KAAK2C,cAAc9B,EAAOb,KAAKU,MACnDV,KAAKU,KAAK6B,MAAMhB,IAAMvB,KAAKM,aAAa,GAAKN,KAAKU,KAAKkB,aAAe,EAAI,KAC1E5B,KAAKU,KAAK6B,MAAMnB,KAAOpB,KAAKM,aAAa,GAAMN,KAAKU,KAAKgB,YAAc,EAAI,KAC3E1B,KAAK+C,QAAU/C,KAAK+C,OAAOlC,EAAO,CAACH,KAAMV,KAAKU,KAAMa,IAAMvB,KAAKM,aAAa,GAAKN,KAAKU,KAAKkB,aAAe,EAAIR,KAAQpB,KAAKM,aAAa,GAAMN,KAAKU,KAAKgB,YAAc,QAI9KG,GAAGiB,UAAU,OAAQ,WAAW,KAC5B,GAAI9C,KAAKQ,SAAWR,KAAKU,MAAQV,KAAKS,SAAU,CAG5C,GAFAT,KAAKS,UAAW,EAChBT,KAAKQ,SAAU,EACXR,KAAKW,OACL,GAA2C,KAAvCX,KAAKW,OAAO2B,aAAa,YAA6D,KAAxCtC,KAAKY,QAAQ0B,aAAa,WACxEtC,KAAKgD,aAAahD,KAAKY,QAASZ,KAAKW,OAAQJ,OAAOR,SAASC,KAAKY,QAAQqC,IAAI,IAC9EjD,KAAKkD,WAAW3C,OAAOR,SAASC,KAAKY,QAAQqC,IAAI,GAAIjD,KAAKW,eACnDJ,OAAOR,SAASC,KAAKY,QAAQqC,SACjC,GAA2C,KAAvCjD,KAAKW,OAAO2B,aAAa,YAA6D,KAAxCtC,KAAKY,QAAQ0B,aAAa,WAAmB,CAClGtC,KAAKmD,kBAAkBnD,KAAKY,QAASZ,KAAKW,OAAQJ,OAAOR,SAASC,KAAKY,QAAQqC,IAAI,GAAI1C,OAAOR,SAASC,KAAKW,OAAOsC,IAAI,IACvH,IAAIG,EAAiBC,OAAOC,OAAO,GAAI/C,OAAOR,UAC9CC,KAAKkD,WAAWE,EAAepD,KAAKY,QAAQqC,IAAI,GAAIjD,KAAKW,QACzDX,KAAKkD,WAAWE,EAAepD,KAAKW,OAAOsC,IAAI,GAAIjD,KAAKY,aACV,KAAvCZ,KAAKW,OAAO2B,aAAa,YAA6D,KAAxCtC,KAAKY,QAAQ0B,aAAa,YAC/EtC,KAAKuD,kBAAkBvD,KAAKY,QAASZ,KAAKW,OAAQJ,OAAOR,SAASC,KAAKW,OAAOsC,IAAI,IAClFjD,KAAKkD,WAAWlD,KAAKY,QAASZ,KAAKW,SAC5BX,KAAKY,QAAQqC,IAAMjD,KAAKW,OAAOsC,IACtCjD,KAAKkD,WAAWlD,KAAKY,QAASZ,KAAKW,QACnCX,KAAKwD,OAAOxD,KAAKY,QAASZ,KAAKW,SACxBX,KAAKY,QAAQqC,IAAMjD,KAAKW,OAAOsC,KACtCjD,KAAKW,OAAOsB,UAAUwB,OAAO,cAC7BzD,KAAKW,OAAO4B,MAAMmB,QAAU,SAE7B,GAAyC,KAArC1D,KAAKU,KAAK4B,aAAa,WAAmB,CACjD,IAAI3B,EAAUJ,OAAOR,SAASC,KAAKY,QAAQqC,IAC3CjD,KAAK2D,SAAS3D,KAAKY,QAASD,EAAO,WAC5BJ,OAAOR,SAASC,KAAKY,QAAQqC,SAEpCjD,KAAK4D,UAAY5D,KAAK4D,WAG1B5D,KAAKU,KAAK+C,cACFzD,KAAKS,UAAYT,KAAKU,MAC9BV,KAAKU,KAAK+C,SAGV3D,GACA+B,GAAGM,UAAUrC,GAAMsC,SAAQC,IACvBA,EAAQE,MAAMC,OAAS,MAK/BxC,KAAKU,KAAO,KACZV,KAAKW,OAAS,KACdX,KAAKY,QAAU,SAGnBd,IACA+B,GAAGC,OAAO,OAAQ,YAAahC,GAAOiC,IAC9B/B,KAAKQ,SAAWR,KAAKU,MAAQV,KAAKS,WAClCT,KAAKW,OAASoB,EACd/B,KAAKW,OAAOsB,UAAU4B,IAAI,cAC1B7D,KAAKW,OAAO4B,MAAMmB,QAAU,MAC5B1D,KAAK8D,QAAU9D,KAAK8D,OAAO/B,OAInCF,GAAGC,OAAO,OAAQ,YAAahC,GAAOiC,IAClC/B,KAAKW,OAASoB,EACd/B,KAAKW,OAAOsB,UAAU4B,IAAI,iBAG9BhC,GAAGC,OAAO,OAAO,WAAYhC,GAAM,KAC3BE,KAAKQ,SAAWR,KAAKU,MAAQV,KAAKS,UAAYT,KAAKW,SACnDX,KAAK+D,OAAS/D,KAAK+D,MAAM/D,KAAKW,QAC9BX,KAAKW,OAAO4B,MAAMmB,QAAU,IAC5B1D,KAAKW,OAAS,MAEC,MAAfX,KAAKW,QAAiCqD,MAAfhE,KAAKW,QAC5BX,KAAKW,OAAOsB,UAAUwB,OAAO,kBAM7C9D,cAAcE,GACVgC,GAAGC,OAAO,OAAQ,YAAajC,GAAM,CAACkC,EAASlB,KAK3C,GAJIb,KAAKgC,oBACLhC,KAAKJ,UAAYI,KAAKgC,kBAAkBD,IAGxC/B,KAAKG,QAAU8D,MAAMC,QAAQlE,KAAKG,SAAWU,EAAMF,OAAQ,CAC3D,IAAIwD,GAAS,EACb,IAAK,IAAIC,EAAQ,EAAGA,EAAQpE,KAAKG,OAAOkE,OAAQD,IAC5C,GAAIvD,EAAMF,OAAO2D,QAAQtE,KAAKG,OAAOiE,KAAWvD,EAAMF,OAAOsB,UAAUC,SAASlC,KAAKG,OAAOiE,IAAS,CACjGD,GAAS,EACT,MAGR,GAAIA,EACA,OAAO,EAGfnE,KAAKQ,SAAU,EACfR,KAAKU,KAAOqB,EACZ/B,KAAKM,aAAeN,KAAK2C,cAAc9B,EAAOkB,GAC9CA,EAAQQ,MAAMhB,IAAMvB,KAAKM,aAAa,GAAKyB,EAAQH,aAAe,EAAI,KACtEG,EAAQQ,MAAMnB,KAAOpB,KAAKM,aAAa,GAAMyB,EAAQL,YAAc,EAAI,KACvE1B,KAAKyC,aAAezC,KAAKyC,YAAY5B,EAAOkB,MAGhDF,GAAGC,OAAO,OAAQ,YAAajC,GAAM,CAACkC,EAASlB,KAC3CA,EAAMgC,oBAGVhB,GAAGiB,UAAU,OAAQ,aAAcjC,IAC3Bb,KAAKQ,SAAWR,KAAKU,OACrBV,KAAKS,UAAW,EAChBT,KAAKM,aAAeN,KAAK2C,cAAc9B,EAAOb,KAAKU,MACnDV,KAAKU,KAAK6B,MAAMhB,IAAMvB,KAAKM,aAAa,GAAKN,KAAKU,KAAKkB,aAAe,EAAI,KAC1E5B,KAAKU,KAAK6B,MAAMnB,KAAOpB,KAAKM,aAAa,GAAMN,KAAKU,KAAKgB,YAAc,EAAI,KAC3E1B,KAAKU,KAAK6B,MAAMC,OAAS,IACzBxC,KAAK+C,QAAU/C,KAAK+C,OAAOlC,EAAO,CAACU,IAAMvB,KAAKM,aAAa,GAAKN,KAAKU,KAAKkB,aAAe,EAAIR,KAAQpB,KAAKM,aAAa,GAAMN,KAAKU,KAAKgB,YAAc,QAI7JG,GAAGiB,UAAU,OAAQ,WAAYjC,IACzBb,KAAKQ,SAAWR,KAAKU,MAAQV,KAAKS,WAClCT,KAAKS,UAAW,EAChBT,KAAKQ,SAAU,EACfR,KAAKM,aAAeN,KAAK2C,cAAc9B,EAAOb,KAAKU,MACnDV,KAAKU,KAAK6B,MAAMhB,IAAMvB,KAAKM,aAAa,GAAKN,KAAKU,KAAKkB,aAAe,EAAI,KAC1E5B,KAAKU,KAAK6B,MAAMnB,KAAOpB,KAAKM,aAAa,GAAMN,KAAKU,KAAKgB,YAAc,EAAI,KAC3E1B,KAAKU,KAAK6B,MAAMC,OAAS,OACzBxC,KAAKuE,YAAcvE,KAAKuE,WAAW1D,EAAO,CAACU,IAAMvB,KAAKM,aAAa,GAAKN,KAAKU,KAAKkB,aAAe,EAAIR,KAAQpB,KAAKM,aAAa,GAAMN,KAAKU,KAAKgB,YAAc,GAAM1B,KAAKU,OAE5KV,KAAKU,KAAO,QAIpBf,UACSY,OAAOiE,mBACRxE,KAAKyE,cAAczE,KAAKH,KAAMG,KAAKF,MACnCS,OAAOiE,kBAAmB,GAIlC7E,gBACSY,OAAOmE,cACR1E,KAAK2E,cAAc3E,KAAKH,MACxBU,OAAOmE,aAAc,GAI7B/E,WAAWiF,EAAQjE,GACfJ,OAAOR,SAASY,EAAOsC,IAAM,CAAC2B,EAAQjE,GACtCJ,OAAOR,SAAWQ,OAAOR,SAG7BJ,OAAOiF,EAAQjE,GACX,IAAIkE,EAASD,EAAOE,WAAU,GAC9BnE,EAAO4B,MAAMwC,gBAAkBF,EAAOvC,aAAa,gBACnD3B,EAAOqE,aAAa,UAAW,GAC/BrE,EAAOqE,aAAa,UAAW,GAGkB,KAA1CJ,EAAOtC,aAAa,qBACvBsC,EAAO3C,UAAU4B,IAAI,mBACrBe,EAAOrC,MAAM0C,YAAY,SAAU,UAAW,aAC9CL,EAAOrC,MAAM0C,YAAY,UAAW,MAAO,cAG/CtE,EAAOsB,UAAUwB,OAAO,cACxB9C,EAAO4B,MAAMmB,QAAU,IACvB7B,GAAGqD,KAAKvE,EAAQ,KAAKwE,UAAYtD,GAAGqD,KAAKL,EAAQ,KAAKM,UAG1DxF,SAASiF,EAAQjE,GAEbiE,EAAOQ,gBAAgB,WACvBR,EAAOrC,MAAMwC,gBAAkBH,EAAOtC,aAAa,gBACnDsC,EAAOI,aAAa,UAAW,GAG3BrE,IACAA,EAAOsB,UAAUwB,OAAO,mBACxB9C,EAAO4B,MAAM8C,OAAS,GACtB1E,EAAO4B,MAAMmB,QAAU,IAG3BkB,EAAO3C,UAAUwB,OAAO,cACxBmB,EAAOrC,MAAMmB,QAAU,IACvB7B,GAAGqD,KAAKN,EAAQ,KAAKO,UAAYP,EAAOtC,aAAa,gBAGzD3C,aAAaiF,EAAQjE,EAAQ2E,GACzBtF,KAAKwD,OAAO8B,EAAgB3E,GAC5BX,KAAK2D,SAASiB,GAGlBjF,kBAAkBiF,EAAQjE,EAAQ2E,EAAgBC,GAC9CvF,KAAKwD,OAAO8B,EAAgB3E,GAC5BX,KAAKwD,OAAO+B,EAAgBX,GAGhCjF,kBAAkBiF,EAAQjE,EAAQ2E,GAC9BtF,KAAK2D,SAAShD,EAAQ2E,GACtBtF,KAAKwD,OAAOoB,EAAQjE"}