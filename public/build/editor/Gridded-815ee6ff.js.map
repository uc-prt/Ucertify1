{"version":3,"file":"Gridded-815ee6ff.js","sources":["../../../clsSMGridded/Gridded.svelte"],"sourcesContent":["<!-- \n *  File Name   : Gridded.js\n *  Description : Layout decided for gridded sheet\n *  Author      : Sundaram Tripathi\n *  Version     : 1.0\n *  Package     : pe-gold\n *  Last update : 14-March-2021  -->\n\n<script>\n    import l from '../src/libs/editorLib/language.js';\n    import {writable} from 'svelte/store';\n    import {AH,XMLToJSON,JSONToXML} from \"../helper/HelperAI.svelte\";\n    import { onMount, afterUpdate, beforeUpdate } from 'svelte';\n    import GriddedHelper from './GriddedHelper.svelte';\n\n\n\n    let state = {};\n    export let getChildXml;\n    let correctAns = [];\n\n    export let xml;\n\n    let stateData = writable({\n            rowNum                  : 4,\n            colNum                  : 4,\n            tableName               : \"Gridded System\",\n            plus_minus              : 0,\n            slash_val               : 0,\n            decimal_val             : 0,\n            xml                     : '',\n            textSize                : 14,\n            resAns                  : '',\n            correctAns              : [],\n            listAns                 : [],\n            res                     : '',\n            fixed_decimal_val       : 0,\n            decimal_point           : 0,\n    })\n\n    const unsubscribe = stateData.subscribe((items)=>{\n        state = items;\n    })\n\n    \n\n    beforeUpdate(()=>{\n\n        AI.selectAll('.tdFont','css',{\n            fontSize:'14px'\n        })\n    \n    })\n\n\n    onMount(()=>{\n        AH.listen('body','keydown','.td_data',((_this,e)=>{\n            console.log(\"Evnts => \",e);\n            if(e.which === 13) {\n                _this.click();\n            }\n        }))\n    })\n\n    afterUpdate(()=>{\n        \n        if (xml != state.xml) {\n            state.xml = xml;\n            loadModule(xml);\n        }\n        firstRowItem();\n        slashFunc();\n        decimalFloating();\n        plusMinusSign();\n        createdSheetRow();\n    })\n\n    function loadModule(loadXml) {\n        loadXml = XMLToJSON(loadXml);\n        parseXMLAuthoring(loadXml);\n    }\n\n    function parseXMLAuthoring(MYXML) {\n        try {\n                state.rowNum = MYXML.smxml._row;\n                state.colNum = MYXML.smxml._col;\n                state.slash_val =  MYXML.smxml._slash;\n                state.plus_minus = MYXML.smxml._plusminus;\n                state.decimal_val =  MYXML.smxml._decimal;\n                state.textSize = MYXML.smxml._font;\n                state.correctAns =  MYXML.smxml._correctAns;\n           \n                getChildXml(JSONToXML(MYXML));\n                if (MYXML.smxml._plusminus == 1) {\n                    document.getElementById('plus_minus_checkbox').checked = true;\n                }\n                if (MYXML.smxml._slash == 1) {\n                    document.getElementById('fraction_slash_checkbox').checked = true;\n                }\n                if (MYXML.smxml._decimal == 1) {\n                    document.getElementById('floating_decimal_checkbox').checked = true;\n                }\n            } catch (events) {\n                console.warn({\n                'error': events.message,\n                'function name': 'parseXMLAuthoring',\n                'File name': 'Gridded.js'\n                });\n            }\n    }\n\n    // Set boolean value in plus/minus\n    function plusMinusSetVal() {\n        state.plus_minus = (state.plus_minus == 0) ? 1 : 0;\n        updateXml();\n    }\n\n    // slash function set value true or false\n    function slashFuncSetVal(event) {\n        state.slash_val = (state.slash_val == 0) ? 1 : 0;\n            updateXml();\n    }\n\n    // This function disable decimal input box\n    function fixedFunc(event) {\n        if (state.fixed_decimal_val == 0) {\n            state.fixed_decimal_val = 1;\n            let elem = document.getElementById('Fixed_decimal_column');\n            elem.disabled = false;\n            elem.style.display = 'inline-block';\n        } else {\n            state.fixed_decimal_val = 0;\n            state.decimal_point = 0 ;\n\n            let elem = document.getElementById('Fixed_decimal_column');\n            elem.value = \" \";\n            elem.disabled = true;\n            elem.style.display = 'none';\n            updateXml();\n        }\n    }\n    \n\n    // Set value decimal floating\n    function decimalFuncSetVal (event) {\n        state.decimal_val = (state.decimal_val == 0) ? 1 : 0;\n        updateXml();\n    }\n\n    // This function decided to row or column function\n    function changeRowCol(event) {\n        if((event.target.value).length > 1) {\n            AH.alert('accept only single value');\n            event.target.value = 4;\n            return false;\n        }\n        console.log('check');\n\n        let val = event.target.value;\n        if (!(val > 0 && val <= 10)) {\n            AH.alert(l.grid_one_to_ten);\n            return false;\n        }\n        if (event.target.name == \"col_nmbr\") {\n            if (event.target.value < 1) {\n                AH.alert(l.col_less_one);\n                eva\n                event.target.value = 1;\n                return false;\n            } else if (event.target.value > 6) {\n                AH.alert(l.type_one_to_seven);\n                event.target.value = \"\";\n                return false;\n            }\n            state.colNum = event.target.value;\n        } else {\n            if (event.target.value < 1) {\n            AH.alert(l.row_less_one);\n            event.target.value = 1;\n            return false;\n            } else if (event.target.value > 10) {\n                AH.alert(l.type_one_to_ten);\n                event.target.value = '';\n            return false;\n            }\n            state.rowNum = event.target.value;\n        }\n        updateXml();\n    }\n\n    function fixedDecimalPoints(event) {\n        let decimalPosition = event.target.value;\n        if((event.target.value).length > 1) {\n            AH.alert('accept only single value');\n            event.target.value = \"\";\n            return false;\n        }\n        if (event.target.value == \"\") {\n            decimalPosition = '';\n        }\n        if (event.target.value.length > 1 || event.target.value < 1 || state.colNum <= event.target.value) {\n            decimalPosition = 1;\n            event.target.value = 1;\n            AH.alert(l.decimal_position+(state.colNum-1)+\".\");\n            //$(\".sa-info\").show();\n            document.querySelector('.sa-info').style.display = 'block';\n        }\n        state.decimal_point = decimalPosition;\n        updateXml();\n        \n    }\n\n    // Update the xml\n    function updateXml() {\n        // setTimeout( function() {\n            \n            let updatedXml = '<smxml type=\"56\" name=\"Gridded\" plusminus=\"'+state.plus_minus+'\" slash=\"'+state.slash_val+'\" decimal=\"'+state.decimal_val+'\" fixed_point=\"'+state.decimal_point+'\" font=\"'+state.textSize+'\" row=\"'+state.rowNum+'\" col=\"'+state.colNum+'\" correctAns=\"'+state.res+'\" ><!--[CDATA[]]--></smxml>';\n            getChildXml(updatedXml);\n            \n        // }, 500);\n        \n    }\n\n\n    \n\n    // Create a sheet according to range\n    let totalRows = [],totalCols = [];\n    function createdSheetRow() {\n        AH.select('.tdFont','css',{fontSize:state.textSize})\n        totalRows = [];\n        let dec_point = state.decimal_point;\n        for (let i = 0; i < state.rowNum; i++) {\n            totalCols = [];\n\n            for (let j = 0; j < state.colNum; j++) {\n                if (j == dec_point - 1 && dec_point != 0) {\n                    totalCols = [\n                        ...totalCols,{\n                            key:\"col\"+i+j,\n                            decpoint: true\n                        }\n                    ]\n                } else {\n                    if (totalCols.length < state.colNum) {\n                        totalCols = [\n                            ...totalCols,{\n                                key: \"col\"+i+j,\n                                name: j,\n                                id: \"td\" + j + \"-\" + i + j,\n                                decpoint: false\n                            }\n                        ]\n                    }\n                }\n            }\n            totalRows = [\n                ...totalRows,{\n                    key: \"row\"+i\n                }\n            ]\n        }\n\n       \n    \n};\n\n \n\n    // created a slash row in gridded sheet\n    let Cols_slash;\n    function slashFunc(event) {\n        Cols_slash = [];\n        let dec_point = state.decimal_point;\n        for (let j = 0; j < state.colNum; j++) {\n            if (j == dec_point - 1 && dec_point != 0) {\n                Cols_slash = [\n                    ...Cols_slash,{\n                        key: \"col\"+j,\n                        decpoint: true\n                    }\n                ]\n            } else {\n            if (Cols_slash.length < state.colNum) {\n                Cols_slash = [\n                    ...Cols_slash,{\n                        id: \"td\" + j,\n                        name: j,\n                        dataTag: j,\n                        decpoint: false\n                    }\n                ]\n            }\n        }\n        }\n    }\n\n    // Create a decimal floating row\n    let Cols_decimal;\n    function decimalFloating(event) {\n        Cols_decimal = [];\n        let dec_point = state.decimal_point;\n        for (let j = 0; j < state.colNum; j++) {\n            if (j == dec_point - 1 && dec_point != 0 ) {\n                Cols_decimal = [\n                    ...Cols_decimal,{\n                        key: \"col\"+j,\n                        decpoint: true\n                    }\n                ]\n            } else {\n                if (Cols_decimal.length < state.colNum) {\n                    Cols_decimal.push(\n                            Cols_decimal = [\n                                ...Cols_decimal,{\n                                    id: \"td\" + j,\n                                    name: j,\n                                    dataTag: j,\n                                    decpoint: false\n                                }\n                            ]\n                    );\n                }\n\n            }\n\n        }\n       \n    }\n\n     // create plus and minus row\n    let Cols_Minus = [],Cols = []; \n    function plusMinusSign(event)  {\n            let Rows = [];\n            Cols = [];\n            Cols_Minus = [];\n            let Rows_Minus = [];\n            let dec_point = state.decimal_point;\n            for (let j = 0; j < state.colNum; j++) {\n                    if (j == dec_point - 1 && dec_point != 0) {\n                        \n                        Cols = [\n                            ...Cols,{\n                                id: \"td\" + j,\n                                dataTag: j,\n                                name: j,\n                                decpoint: true\n                            }\n                        ]\n                    } else {\n                        if (Cols.length < state.colNum) {\n                            \n                            Cols = [\n                                ...Cols,{\n                                    id: \"td\" + j,\n                                    dataTag: j,\n                                    name: j,\n                                    decpoint: false\n                                }\n                            ]\n                        }\n                    }\n                    if (j == dec_point - 1 && dec_point != 0) {\n                        Cols_Minus = [\n                            ...Cols_Minus,{\n                                id: \"td\" + j,\n                                dataTag: j,\n                                name: j,\n                                decpoint: true\n                            }\n                        ]\n                    } else {\n                        if (Cols_Minus.length < state.colNum) {\n                            Cols_Minus = [\n                                ...Cols_Minus,{\n                                    id: \"td\" + j,\n                                    name: j,\n                                    dataTag: j,\n                                    decpoint: false\n                                }\n                            ]\n                        }\n                    }\n            }\n        \n    }\n\n\n    // Create very first row and store data according to click\n    let ColsFirstRow = [];\n    function firstRowItem() {\n        let Rows = [];\n        ColsFirstRow = [];\n        let dec_point = state.decimal_point;\n        for (let j = 0; j < state.colNum; j++) {\n            if (j === dec_point - 1 && dec_point != 0 ) {\n               \n                ColsFirstRow = [\n                    ...ColsFirstRow,{\n                        decpoint: true\n                    }\n                ]\n            } else {\n                if (ColsFirstRow.length < state.colNum) {\n                   \n                    ColsFirstRow = [\n                        ...ColsFirstRow,{\n                            id: 'td'+j,\n                            name: j,\n                            dataTag: j,\n                            decpoint: false\n                        }\n                    ]\n                }\n            }\n        }\n       \n    }\n\n     // Check validation first row input type\n    function rowValidation(event) {\n        console.log('number' + state.plus_minus);\n        let a = state.rowNum-1;\n        if (event.target.value.length > 1) {\n            AH.alert(l.double_digit);\n            event.target.value = '';\n            return false;\n        } else if (event.target.value < 0) {\n            AH.alert(l.less_one);\n            event.target.value = \"\";\n            return false;\n        } else if ( a < event.target.value) {\n            AH.alert(l.number_from + a);\n            event.target.value = '';\n            return false;\n        } else if (state.plus_minus == 0 &&  event.target.value == \"+\" || event.target.value == \"-\") {\n            AH.alert('Plz select plus and minus option');\n            event.target.value = \"\";\n            return false;\n        } else if (state.slash_val == 0 &&  event.target.value == \"/\") {\n            AH.alert('Plz select slash option');\n            event.target.value = \"\";\n            return false;\n        } else if (state.decimal_val == 0 &&  event.target.value == \".\") {\n            AH.alert('Plz select decimal option');\n            event.target.value = \"\";\n            return false;\n        }\n\n\n\n        let attribute = event.target.attributes.getNamedItem('data-tag').value;\n        correctAns[attribute] = event.target.value;\n        for (let i=0; i<correctAns.length; i++ ) {\n            if (typeof(correctAns[i]) == 'undefined' || correctAns[i]==\"\") {\n                correctAns[i] = \"%blank%\";\n                //console.log(correctAns);\n            }\n        }\n        if (correctAns[(correctAns.length)-1] == \"%blank%\") {\n            correctAns.pop();\n        }\n        \n            state.listAns = correctAns;\n        \n        state.res = state.listAns.toString();\n        updateXml();\n    }\n\n     // Change color in sheet according to user input\n    function highLight(event) {\n        let cell_class = event.target.getAttribute('name');\n        let column_index = document.getElementsByName(cell_class);\n        for (let i = 1; i < column_index.length; i++) {\n            if (column_index[i].classList.contains(\"active\")) {\n                column_index[i].classList.remove(\"active\");\n\n            }\n            if (column_index[i].innerHTML == event.target.value) {\n                    column_index[i].classList.add(\"active\");\n                }\n        }\n\n    }\n\n    function handleClick(event) {\n        let cell_class = event.target.getAttribute('name');\n        let column_index = document.getElementsByName(cell_class);\n        for (let i = 0; i < column_index.length; i++) {\n            if (column_index[i].classList.contains(\"active\")) {\n                column_index[i].classList.remove(\"active\");\n            }\n        }\n        event.target.classList.add(\"active\");\n        let target_id = event.target.id;\n        let target_to_display = target_id.split(\"-\");\n        document.getElementById(target_to_display[0]).value = event.target.innerHTML;\n\n        let attribute = event.target.attributes.getNamedItem('data-tag').value;\n        correctAns[attribute] = event.target.innerHTML;\n\n        for (let i = 0; i < correctAns.length; i++ ) {\n            if (typeof(correctAns[i]) == 'undefined') {\n                correctAns[i] = \"%blank%\";\n                //console.log(correctAns);\n            }\n        }\n        \n        state.listAns = correctAns;\n        \n        state.res = state.listAns.toString();\n        updateXml();\n    }\n\n    // Insert a data in top row according to click  and change colors\n    function handleClickCombo(event) {\n        //let cell_class = event.target.getAttribute('name');\n        let cell_class = (event.detail.target).getAttribute('name')\n        let column_index = document.getElementsByName(cell_class);\n        for (let i = 0; i < column_index.length; i++) {\n            if (column_index[i].classList.contains(\"active\")) {\n                column_index[i].classList.remove(\"active\");\n            }\n        }\n        (event.detail.target).classList.add(\"active\");\n        let target_id = (event.detail.target).id;\n        let target_to_display = target_id.split(\"-\");\n        document.getElementById(target_to_display[0]).value = (event.detail.target).innerHTML;\n\n        //let attribute = event.target.attributes.getNamedItem('data-tag').value;\n        let attribute = (event.detail.target).attributes.getNamedItem('data-tag').value;\n        correctAns[attribute] = (event.detail.target).innerHTML;\n\n        for (let i = 0; i < correctAns.length; i++ ) {\n            if (typeof(correctAns[i]) == 'undefined') {\n                correctAns[i] = \"%blank%\";\n                //console.log(correctAns);\n            }\n        }\n        \n        state.listAns = correctAns;\n        \n        state.res = state.listAns.toString();\n        updateXml();\n    }\n\n    function removeClass() {\n        let el = document.getElementsByClassName('points');\n        for (let i = 0; i < el.length; i++) {\n            if (el[i].classList.contains(\"active\")) {\n                el[i].classList.remove(\"active\");\n            }\n        }\n    }\n\n</script>\n<main>\n    <div class=\"griddedModule\">\n        <table border=\"1\" id=\"tab2\" class=\"tab2\" style={'border-collapse: collapse;text-align: center;' } >\n            <tbody>\n                <tr>\n                    {#each ColsFirstRow as val,i}\n                        {#if val.decpoint == true}\n                            <input type=\"text\" style='width:50px;text-align:center;'  value=\".\" class=\"tdFont\" disabled=\"true\" />\n                        {:else}\n                                <input type=\"text\" id={val.id} name={val.name} data-tag={val.dataTag} style={'width:50px;text-align:center;'} on:change={rowValidation} on:input={highLight} class=\"tdFont fo\" />\n                        {/if}\n                    {/each}\n                </tr>\n            </tbody>\n        </table>\n        {#if state.plus_minus == 1}\n            <GriddedHelper \n                on:handleClickCombo={handleClickCombo}\n                loop = {Cols}\n                class1 = \"tdFont plus_tab points\"\n                className=\"tdFont plus_tab items_element\"\n                tableId =\"plus_minus_tab\"\n                tableClass =\"plus_minus_tab gridded_tab mt-0 myP\"\n                value = \"+\"\n            ></GriddedHelper>\n            <GriddedHelper \n                on:handleClickCombo={handleClickCombo}\n                loop = {Cols_Minus}\n                class1 = \"tdFont plus_tab\"\n                className=\"tdFont minus_point text-center items_element\"\n                tableId =\"plus_minus_tab\"\n                tableClass =\"plus_minus_tab gridded_tab mt-0 myP\"\n                value = \"-\"\n            ></GriddedHelper>\n        {/if}\n        {#if state.decimal_val == 1}\n            <GriddedHelper \n                on:handleClickCombo={handleClickCombo}\n                loop = {Cols_slash}\n                class1 = \"tdFont points\"\n                className=\"tdFont text-center items_element decl_point\"\n                tableId =\"slash_tab\"\n                tableClass =\"slash_tab gridded_tab mt-0 myP\"\n                value = \".\"\n            ></GriddedHelper>\n        {/if}\n        {#if state.slash_val == 1}\n                <GriddedHelper \n                    on:handleClickCombo={handleClickCombo}\n                    loop = {Cols_slash}\n                    class1 = \"tdFont points\"\n                    className=\"tdFont text-center items_element sla_point\"\n                    tableId =\"slash_tab\"\n                    tableClass =\"slash_tab gridded_tab mt-0 myP\"\n                    value = \"/\"\n                ></GriddedHelper>\n        {/if}\n\n        <table id=\"gridded_sheet\" class=\"gridded_tab lastGrid mt-0 myP\">\n            \n                {#each totalRows as data, no}\n                    <tr key=\"row{no}\">\n                        {#each totalCols as val, i}\n                            {#if val.decpoint == true}\n                            <td key={val.key} class ='tdFont text-center points'  width=\"50\" disabled=\"true\">\n                                \n                            </td>\n                            {:else}\n                                <td width=\"50\" class=\"text-center\">\n                                    <span tabIndex={0} key={val.key} name={val.name} data-tag={val.name} class ='tdFont td_data text-center items_element' id={val.id}  on:click={handleClick}>{+no}</span>\n                                </td>\n                            {/if}\n                        {/each}\n                    </tr>\n                {/each}\n           \n        </table>\n\n        <div class=\"accordion mt-5\" id=\"accordionExample\" style=\"background-color:#F0F0F0;\">\n            <div class=\"accordion-item\">\n            <h2 class=\"accordion-header mt-0\" id=\"headingOne\">\n                <button class=\"accordion-button collapsed py-0\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"false\" aria-controls=\"collapseOne\">\n                    {l.layout_options}\n                </button>\n            </h2>\n            <div id=\"collapseOne\" class=\"accordion-collapse collapse\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\" style=\"\">\n                <div class=\"accordion-body\">\n                    <div class=\"row form-group\">\n                \n                        <div class=\"col-sm-6\">\n                            <div class=\"font-weight-bold\">{l.row_count}</div>\n                            <div>\n                                <input type=\"number\" min=\"1\" max=\"10\"  value={state.rowNum} name=\"col_range\" id=\"col_range\" class=\"form-control  inline-block\" data-label=\"Number of rows\" on:change={changeRowCol} />\n                            </div>\n                        </div>\n                        <div class=\"col-sm-6\">\n                            <div class=\"font-weight-bold\">{l.col_count}</div>\n                            <div>\n                                <input type=\"number\" min=\"1\" max=\"6\"  value={state.colNum} name=\"col_nmbr\" id=\"col_range\" class=\"form-control  inline-block\" data-label=\"Number of rows\" on:change={changeRowCol} />\n                            </div>\n                        </div>\n                    \n                    </div>\n                    <div class=\"row form-group\">\n                        <div class=\"col-sm-6\">\n                            <div class=\"inline-block\">\n                                    <input type=\"checkbox\" class=\"custom_checkbox_new float-left\"\n                                            id = \"plus_minus_checkbox\"\n                                            inputProps={{ 'aria-label': 'Plus/Minus Column' }}\n                                            on:click = {plusMinusSetVal}\n                                    /><label for=\"plus_minus_checkbox\" class=\"pl-1\">Plus/Minus Column</label>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-6\">\n                            <div class=\"inline-block\">\n                                    <input type=\"checkbox\" id = \"fraction_slash_checkbox\" class=\"custom_checkbox_new float-left\" inputProps={{ 'aria-label': 'Fraction/Slash' }} on:click = {slashFuncSetVal} /><label for = \"fraction_slash_checkbox\" class=\"pl-1\">Fraction/Slash</label>\n                            </div>\n                        </div>\n                    </div>\n    \n                <div class=\"row form-group\">\n                    <div class=\"col-sm-6\">\n                        <div class=\"inline-block\">\n                                <input type=\"checkbox\" id = \"fixed_decimal_checkbox\" class=\"custom_checkbox_new float-left\" inputProps={{ 'aria-label': 'Fixed Decimal' }} on:click = {fixedFunc}\n                                /> <label for=\"fixed_decimal_checkbox\" class=\"pl-1\"> Fixed Decimal</label>\n                        </div>\n                    </div>\n                    <div class=\"col-sm-6\">\n                        <div class=\"inline-block\">\n                            <input type=\"checkbox\" id = \"floating_decimal_checkbox\" class=\"custom_checkbox_new float-left\" inputProps={{ 'aria-label': 'Floating Decimal' }} on:click = {decimalFuncSetVal}\n                            /><label for=\"floating_decimal_checkbox\" class=\"pl-1\">Floating Decimal</label>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"col-sm-6 inline-block pl-0\">\n                    <div>\n                        <input type=\"number\" min=\"1\" max=\"7\"  name=\"Fixed_decimal_column\" id=\"Fixed_decimal_column\" class=\"form-control  inline-block\" placeholder=\"Fixed decimal column\" style={'display: none'} data-label=\"Fixed decimal column\" disabled=\"true\" on:change={fixedDecimalPoints} />\n                    </div>\n                </div>\n                </div>\n            </div>\n            </div>\n        </div>\n    </div>\n</main>\n<style>\n    .custom_checkbox_new {\n        display: block;\n        position: relative;\n        width: 20px;\n        height: 20px;\n        margin-bottom: 0;\n        cursor: pointer;\n        font-size: 18px;\n    }\n\n:global(.layoutHeading) {\n    font-weight: bold;\n    font-size: 16px;\n    color: #1877b1;\n}\n\n:global(.items_element:hover) {\n    border: 1.2px solid #777;\n}\n\n:global(.moreOptions) {\n    -webkit-box-shadow: 3px 4px 6px #c4c5c5;\n    -moz-box-shadow: 3px 4px 6px #c4c5c5;\n    box-shadow: 3px 4px 6px #c4c5c5;\n    background-color: #f0f0f0;\n    border-top: 1px solid #1877b1;\n    border-bottom: 1px solid #1877b1;\n}\n\n:global(.moreOptionDetails) {\n    background-color: #f7f7f7;\n}\n\n:global(.input_col) {\n    position: relative;\n    left: 5px;\n}\n\n:global(.layoutheading) {\n    padding: 5px;\n    font-size: 20px;\n    font-weight: bold;\n}\n\n\n:global(.numbr_range) {\n    position: relative;\n    left: 130px;\n}\n\n:global(.numbr_range_txt) {\n    position: relative;\n    left: 200px;\n}\n\n:global(.plus_minus_fraction) {\n    position: relative;\n    top: 20px;\n}\n\n:global(.floating_fraction) {\n    position: relative;\n    top: 27px;\n}\n\n:global(.plus_minus_span) {\n    position: relative;\n    left: 5px;\n}\n\n:global(.floating_decimal) {\n    float: right;\n    margin-right: 45px;\n}\n\n:global(.fontStyle) {\n    width: 100px;\n    float: right;\n    margin-right: 60px;\n}\n\n:global(.fraction_slash) {\n    position: relative;\n    left: 177px;\n}\n\n:global(.minus_tab,\n.plus_tab,\n.slash_tab) {\n    text-align: center;\n}\n\n.gridded_tab {\n    background-color: #f0f0f0;\n    user-select: none;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n}\n\n:global(.font_size_label) {\n    position: relative;\n    left: 198px;\n}\n\n:global(.font_size) {\n    position: relative;\n    left: 225px;\n}\n\n\n:global(.decimal_col) {\n    position: relative;\n    left: 208px;\n    width: 90px;\n}\n\n:global(.correct_color) {\n    background-color: #E9FFE9;\n}\n\n:global(.fixed_decimal_check) {\n    position: relative;\n    top: 26px;\n    left: 13px;\n}\n\n:global(.correct_incorrect_icon_fill) {\n    position: relative;\n    width: 19px;\n    height: 19px;\n    right: 121px;\n    top: -55px;\n    background: white;\n    border-radius: 50%;\n}\n\n:global(.row_column_decimal) {\n    position: relative;\n    top: 30px;\n    left: 5px;\n\n}\n\n:global(.fixed_point_class) {\n    position: relative;\n    left: 7px;\n}\n\n:global(.row_column) {\n    position: relative;\n    left: 5px;\n}\n\n:global(.answer_icon) {\n    position: absolute;\n    top: 3px;\n    right: 34px;\n}\n\n.myP tbody {\n    cursor: pointer;\n}\n\n:global(.col_range) {\n    width: 205px;\n}\n\n:global(.posSize) {\n    position: relative;\n    left: 7px;\n}\n\n:global(.fontSmall) {\n    font-size: 12px;\n    text-align: center;\n}\n\n:global(.fontNormal) {\n    font-size: 14px;\n    text-align: center;\n}\n\n:global(.fontLarge) {\n    font-size: 24px;\n    text-align: center;\n}\n\n:global(.fontExtraLarge) {\n    font-size: 26px;\n    text-align: center;\n}\n\n:global(.grid) {\n    position: relative;\n    top: 10px;\n    box-shadow: 10px 5px 10px #000;\n}\n\n:global(.items_element) {\n    border: 1px solid #8080807a;\n    padding: 6px 10px;\n    border-radius: 50%;\n    background-color: white;\n}\n\n:global(.griddedModule .active) {\n    color: white;\n    transition: 1s;\n    background: #696969;\n    border: 2px solid #fff;\n}\n\n.minus_point,\n.decl_point {\n    padding: 6px 12px;\n}\n\n:global(.sla_point) {\n    padding: 6px 11px;\n}\n\n.griddedModule table tr td:last-child {\n    border-right: 1px solid #ccc !important;\n}\n\n.griddedModule .lastGrid tr:last-child td {\n    border-bottom: 1px solid #ccc !important;\n}\n\n:global(.griddedModule td) {\n    border: 1px solid #f0f0f0 !important;\n    border-left: 1px solid #ccc !important;\n}\n\n:global(.token:hover) {\n    border: 1px solid #000 !important;\n}\n\n:global(.bla .token:hover) {\n    border: 1px solid #fff !important;\n}\n\n:global(.token_selected) {\n    background-color: #64bb63;\n    color: #fff;\n}\n\n:global(.bla .token_highlight_heading) {\n    color: #000 !important;\n}\n\n:global(.griddedModule .expandIcon) {\n    font-size: 27px;\n    font-weight: bold;\n    color: #1877b1;\n}\n</style>\n"],"names":["ctx","id","name","dataTag","highLight","decpoint","key","length","plus_minus","decimal_val","slash_val","l","layout_options","row_count","col_count","rowNum","colNum","aria-label","event","cell_class","target","getAttribute","column_index","document","getElementsByName","i","classList","contains","remove","innerHTML","value","add","state","getChildXml","correctAns","xml","writable","tableName","textSize","resAns","listAns","res","fixed_decimal_val","decimal_point","subscribe","items","updateXml","updatedXml","beforeUpdate","AI","selectAll","fontSize","onMount","AH","listen","_this","e","console","log","which","click","afterUpdate","MYXML","smxml","_row","_col","_slash","_plusminus","_decimal","_font","_correctAns","JSONToXML","getElementById","checked","events","warn","error","message","function name","File name","parseXMLAuthoring","XMLToJSON","ColsFirstRow","dec_point","j","firstRowItem","Cols_slash","slashFunc","Cols_decimal","push","decimalFloating","Cols","Cols_Minus","plusMinusSign","select","totalRows","totalCols","createdSheetRow","elem","disabled","style","display","alert","val","grid_one_to_ten","col_less_one","eva","type_one_to_seven","row_less_one","type_one_to_ten","decimalPosition","decimal_position","querySelector","a","double_digit","less_one","number_from","attribute","attributes","getNamedItem","pop","toString","target_to_display","split","detail"],"mappings":"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"}