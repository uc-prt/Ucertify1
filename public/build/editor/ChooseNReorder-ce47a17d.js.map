{"version":3,"file":"ChooseNReorder-ce47a17d.js","sources":["../../../src/libs/editorLib/ValidateItems.js","../../../clsSMChoose/ChooseNReorder.svelte"],"sourcesContent":["/**\r\n *  Filename    : ValidateItems.js\r\n *  @Author     : Saquib Ajaz <saquib.ajaz@ucertify.com>\r\n *  @Version    : 1.0\r\n *  Last update : 29 May 2020\r\n *  Last updated by: Dharmendra Mishra\r\n */\r\nimport l from \"./language.js\";\r\n// importing JUI\r\nimport JUI from '../javscript_helper/JUI';\r\nconst AH = new JUI();\r\n\r\nlet smVal = {\r\n  err: {\r\n    q9: l.max_error,\r\n    q27:\r\n      \"You have exceeded the module limit. You can only create 6 statement nodes and 4 option nodes.\",\r\n    q6_advance: l.max_row_col_error\r\n  },\r\n\r\n  processError: function(err, msg) {\r\n    let smErr = {\r\n      error: err,\r\n      message: msg\r\n    };\r\n    return smErr;\r\n  },\r\n  //@TOOD:? @pradeep item-refactor\r\n  validate: function(type, subtype, content_icon) {\r\n    if (type == \"q\" || type == \"u\") {\r\n      switch (subtype) {\r\n        case 9:\r\n          return this.validate9(content_icon);\r\n        case 14:\r\n          return this.validate14(content_icon);\r\n        case 6:\r\n          return this.validate6(content_icon);\r\n        case 26:\r\n          return this.validate26(content_icon);\r\n        case 27:\r\n          return this.validate27(content_icon);\r\n      }\r\n    }\r\n  },\r\n\r\n  validate9: function(icon) {\r\n    //var len = jQuery(\"#fillmain\").find(\"[id^=elem]\").length;\r\n    let len = AH.selectAll(\"#fillmain [id^=elem]\").length;\r\n    if (len > 6) {\r\n      return this.processError(true, this.err.q9);\r\n    } else {\r\n      return this.processError(false, \"valid\");\r\n    }\r\n  },\r\n\r\n  validate6: function(icon) {\r\n    //var len = jQuery(\"#choose\").find(\"#sortable li\").length;\r\n    let len = AH.selectAll(\"#choose #sortable li\").length;\r\n    console.log(\"len =>\"+len);\r\n    if (len > 5) {\r\n      return this.processError(true, this.err.q9);\r\n    } else {\r\n      return this.processError(false, \"valid\");\r\n    }\r\n  },\r\n\r\n  validate26: function(icon) {\r\n    //var len = jQuery(\"#mytable >tbody >tr\").length;\r\n    let len = AH.selectAll(\"#mytable >tbody >tr\").length;\r\n    //var len1 = jQuery(\"#mytable >thead >tr >th\").length;\r\n    let len1 = AH.selectAll(\"#mytable >thead >tr >th\").length;\r\n    if (len > 5 || len1 > 6) {\r\n      return this.processError(true, this.err.q6_advance);\r\n    } else {\r\n      return this.processError(false, \"valid\");\r\n    }\r\n  },\r\n\r\n  validate14: function(icon) {\r\n    //var len1 = jQuery(\"#matchListArea [class*='textarea_1']\").length;\r\n    let len1  = AH.selectAll(\"#matchListArea [class*='textarea_1']\").length;\r\n    //var len2 = jQuery(\"#matchListArea [class*='textarea_2']\").length;\r\n    let len2 = selectAll(\"#matchListArea [class*='textarea_2']\").length;\r\n    if (len1 > 6 || len2 > 6) {\r\n      return this.processError(true, this.err.q9);\r\n    } else {\r\n      return this.processError(false, \"valid\");\r\n    }\r\n  },\r\n  validate27: function(icon) {\r\n    //var len1 = jQuery(\"#choicemain\").find(\".testmode_table tbody tr\").length;\r\n    let len1 = AH.selectAll(\"#choicemain .testmode_table tbody tr\").length;\r\n    //var len2 = jQuery(\"#choicemain\").find(\".testmode_table thead tr th\").length;\r\n    let len2 = AH.selectAll(\"#choicemain .testmode_table thead tr th\").length;\r\n    if (len1 > 6 || len2 > 5) {\r\n      return this.processError(true, this.err.q27);\r\n    } else {\r\n      return this.processError(false, \"valid\");\r\n    }\r\n  }\r\n};\r\n\r\nexport default smVal;\r\n","\r\n<!-- \r\n*  File Name   : ChooseNReorder.js\r\n*  Description : Container for all Choose And Reorder Authoring Module\r\n*  Author      : Sundaram Tripathi\r\n*  Version     : 1.0\r\n*  Package     : svelte_items\r\n*  Last update :  -->\r\n\r\n<script>\r\n    import l from '../src/libs/editorLib/language.js';\r\n    \r\n\r\n    import { Button, Dialog, Checkbox } from 'svelte-mui/src';\r\n    import {writable} from 'svelte/store';\r\n    import {AH,XMLToJSON,JSONToXML} from \"../helper/HelperAI.svelte\";\r\n    import { beforeUpdate } from 'svelte';\r\n    import smVal from '../src/libs/editorLib/ValidateItems';\r\n    import './css/choose.min.css';\r\n    \r\n    let localCData = [];\r\n    let oldCData = [];\r\n    let state = {};\r\n    //var isCorrect = [];\r\n    export let xml;\r\n    export let getChildXml;\r\n    export let changed_advance_xml;\r\n    export let editorState;\r\n    export let smValidate;\r\n    //export uaXML\r\n\r\n    /// Declare States\r\n\r\n    let stateData = writable({\r\n        xml                         : \"\",\r\n        headingCorrect              : \"\",\r\n        allowSort                   : \"\",\r\n        isSentence                  : \"\",\r\n        isParagraph                 : \"\",\r\n        isadvance                   : false,\r\n        CDATA                       : \"\",\r\n        istoggled                   : false,\r\n        openImageDialog             : false,\r\n        openErrorDialog             : false,\r\n        row_value                   : '',\r\n        col_value                   : '',\r\n        err_message                 : l.min_row_col_value,\r\n        tomaketable                 : 'none',\r\n        open                        : false,\r\n        data_id                     : '',\r\n        data_value                  : '',\r\n        stateXMLToJSON              : '',\r\n    }) \r\n\r\n    const unsubscribe = stateData.subscribe((items) => {\r\n        state = items;\r\n    })\r\n    \r\n\r\n    let isCorrect = [];\r\n    $: {\r\n        localCData.forEach(function(data,i){\r\n            isCorrect[i] = ((data.value.charAt(0) == \"*\")?true:false)\r\n            \r\n            \r\n        })\r\n    }\r\n\r\n    beforeUpdate(()=> {\r\n        if (state.xml != xml) {\r\n            state.xml = xml;\r\n            // load module with the changed xml\r\n            state.stateXMLToJSON = XMLToJSON(xml);\r\n            //loadModule(xml);\r\n            loadModule();\r\n        }\r\n    })\r\n\r\n    // this function responsible for loading the module\r\n    function loadModule() {\r\n        //loadXml = XMLToJSON(loadXml);   // convert xml to json using XMLToJSON Function\r\n        parseXMLAuthoring(state.stateXMLToJSON);  // xml parsing function\r\n    }\r\n\r\n\r\n    // xml parsing function\r\n    function parseXMLAuthoring(MYXML) {\r\n        let cdata, oldcdata;\r\n        try {\r\n            localCData = [];\r\n            oldCData = [];\r\n            //this.forceUpdate();\r\n            /* used to check if 'MYXML.smxml.list._oldCData' is set or not */\r\n            if (MYXML.smxml.list._oldCData) {\r\n                oldcdata = MYXML.smxml.list._oldCData.split('###');\r\n            }\r\n            // split the cdata with new line\r\n            cdata = MYXML.smxml.list.__cdata.split(\"\\n\");\r\n            // finding the row and col then change the module to multogrid using changed_advance_xml\r\n            if (MYXML.smxml.list._row && MYXML.smxml.list._col) {\r\n                delete MYXML.smxml.list._allowsort;\r\n                delete MYXML.smxml.list._headingAll;\r\n                changed_advance_xml(JSONToXML(MYXML), 26);\r\n            }\r\n            // extracting data in localCData array\r\n            cdata.forEach(function(data,i) {\r\n                if (cdata[i].trim() != \"\") {\r\n                    localCData.push({\r\n                        value: cdata[i].replace(/^\\s+/g, \"\"),\r\n                        id: i\r\n                    });\r\n                }\r\n            });\r\n            if (oldcdata) {\r\n                    oldcdata.forEach(function(data,index_no) {\r\n                    if (oldcdata[index_no].trim() != \"\") {\r\n                        oldCData.push({\r\n                            value: oldcdata[index_no].replace(/^\\s+/g, \"\"),\r\n                            id: index_no\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n            // it update the attribute in lower case\r\n            updateAttrToLower(MYXML);\r\n\r\n            // setting state\r\n                state.headingCorrect = MYXML.smxml.list._headingcorrect;\r\n                state.allowSort = MYXML.smxml.list._allowsort;\r\n                state.isSentence = MYXML.smxml.list._issentence;\r\n                state.isParagraph = MYXML.smxml.list._isparagraph;\r\n            //forceUpdate();\r\n        } catch (error) {\r\n            console.warn({\r\n                'error': error,\r\n                'function name': 'parseXMLAuthoring',\r\n                'File name': 'ChooseNReorder.js'\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    // Used for Add new option if it passes the limit criteria\r\n    function addNewItem() {\r\n        let len = AH.find(\"#choose\",\"#sortable li\",'all').length;\r\n        \r\n        if (len <= 9) {\r\n            addAfterPassedLimitCriteria();\r\n        } else {\r\n            AH && AH.alert('Maximum possible value of nodes are 10.');\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n     // this function is reponsible for updating the xml on the basis of checkbox option\r\n    // selected (sequencing, in sentence, in paragraph) and the change in heading title\r\n    function updateSetting(e) {\r\n        //let xml = XMLToJSON(state.xml);\r\n        let xml = state.stateXMLToJSON;\r\n        switch (e.target.id) {\r\n            case \"allowSort\":\r\n                // if allowsort is checked\r\n                xml.smxml.list._allowsort = ((e.target.checked == true) ? \"1\" : \"0\");\r\n                break;\r\n            case \"isSentence\":\r\n                // if issentence is checked\r\n                if (e.target.checked == true) {\r\n                    \r\n                    \r\n                    if(document.querySelector('#allowSort').checked == false) {\r\n                        \r\n                        document.querySelector(\"#allowSort\").click();\r\n                        \r\n                        document.querySelector(\"#allowSort\").disabled = true;\r\n                    } else {\r\n                        \r\n                        document.querySelector('#allowSort').disabled = true;\r\n                    }\r\n                    state.isSentence = \"1\";\r\n                    state.allowSort = \"1\";\r\n                    // changing the value of the attribute\r\n                    xml.smxml.list._issentence = \"1\";\r\n                    xml.smxml.list._allowSort = \"1\";\r\n                    xml.smxml.list._isparagraph = \"0\";\r\n                } else {\r\n                    // if unchecked\r\n                    \r\n                    document.querySelector('#allowSort').disabled = false;\r\n                    document.querySelector('#allowSort').click();\r\n                    \r\n                    state.isSentence = \"0\";\r\n                    state.allowSort = \"1\";\r\n                    \r\n                    // updating attributes\r\n                    xml.smxml.list._issentence = \"0\";\r\n                    xml.smxml.list._allowSort = \"0\";\r\n                }\r\n                break;\r\n            case \"isParagraph\":\r\n                // if isParagraph is checked \r\n                if (e.target.checked == true) {\r\n                \r\n                    if(document.querySelector(\"#allowSort\").getAttribute(\"checked\") == false) {\r\n                       // disable allowshort option when check isSentence and isParagraph\r\n                        document.querySelector('#allowSort').click();\r\n                        document.querySelector('#allowSort').disabled = true;\r\n                    } else {\r\n                    \r\n                        document.querySelector(\"#allowSort\").disabled = true;\r\n                    }\r\n                    \r\n                    state.isParagraph = \"1\";\r\n                    state.allowSort = \"1\";\r\n                    \r\n                    // updating attributes\r\n                    xml.smxml.list._isparagraph = \"1\";\r\n                    xml.smxml.list._allowSort = \"1\";\r\n                    xml.smxml.list._issentence = \"0\";\r\n                } else {\r\n                    // if unchecked\r\n                    document.querySelector(\"#allowSort\").disabled = false; // removing disable on allowsort\r\n                    document.querySelector(\"#allowSort\").click()\r\n                    \r\n                    state.isParagraph = \"0\";\r\n                    state.allowSort = \"1\";\r\n                    \r\n                    // changing the value of the attribute\r\n                    xml.smxml.list._isparagraph = \"0\";\r\n                    xml.smxml.list._allowSort = \"0\";\r\n                }\r\n                //xml.smxml.list._isparagraph = ((e.target.checked == true)? \"1\" : \"0\");\r\n                break;\r\n            case \"headingCorrect\":\r\n                // if change ocuur in heading\r\n                    state.headingCorrect = e.target.value\r\n                // update attribute\r\n                xml.smxml.list._headingCorrect = e.target.value;\r\n                break;\r\n        }\r\n        // updating the xml\r\n        getChildXml(JSONToXML(xml));\r\n    }\r\n\r\n     // it update the correct answer on clicking of checkbox button is clicked\r\n    function updateCorrect(i, e) {\r\n        if (e.target.checked == true) {\r\n            // if checkbox is checked that means answer is correct so add * \r\n            localCData[i].value = \"*\" + localCData[i].value.trim();\r\n        } else {\r\n            localCData[i].value = localCData[i].value.trim().slice(1);\r\n        }\r\n\r\n        // xml to json\r\n        //let xml = XMLToJSON(state.xml);\r\n        let xml = state.stateXMLToJSON;\r\n        var timer = setTimeout(function() {\r\n            let newCData = \"\\n\";\r\n            // storing new data in newCData\r\n            \r\n            localCData.forEach(function(data,i) {\r\n                newCData += localCData[i].value + \"\\n\";\r\n            });\r\n            // updating attributes\r\n            xml.smxml.list.__cdata = newCData;\r\n            // updating the xml\r\n            getChildXml(JSONToXML(xml));\r\n            clearTimeout(timer);\r\n        }.bind(this), 200);\r\n    }\r\n\r\n\r\n    // to add new option/item\r\n    function addAfterPassedLimitCriteria() {\r\n        // change the xml to json\r\n        //let xml = XMLToJSON(state.xml);\r\n        let xml = state.stateXMLToJSON;\r\n        // update the cdata with new value\r\n        xml.smxml.list.__cdata = xml.smxml.list.__cdata + \"\\n*Option value\";\r\n        /* It is used for update the data of 'xml.smxml.list._oldCData' after adding the new item to make it visible also in MultiGrid mode */\r\n        if (xml.smxml.list._oldCData) {\r\n            if (xml.smxml.list._oldCData.lastIndexOf('###') == (xml.smxml.list._oldCData.length - 3)) {\r\n                xml.smxml.list._oldCData += '*Option value';\r\n            } else {\r\n                xml.smxml.list._oldCData += '###*Option value';\r\n            }\r\n        }\r\n        // update and store the xml\r\n        getChildXml(JSONToXML(xml));\r\n        if (!xml.smxml.list._row && !xml.smxml.list._col) {\r\n            var errMsg = smVal.validate(editorState.content_type, editorState.item, editorState.content_icon);\r\n            smValidate(errMsg);\r\n        }\r\n    }\r\n    //// Function call from multigrid item ////////////\r\n    function moveToAdvance(e) {\r\n        if (localCData.length >= 4) {\r\n            if (localCData.length % 2 == 0) {\r\n                    state.istoggled = !state.istoggled;\r\n                    state.openImageDialog = true;\r\n            } else {\r\n                var temp = Math.sqrt(localCData.length);\r\n                if (Number.isInteger(temp)) {\r\n                   \r\n                    state.istoggled = !state.istoggled;\r\n                    state.openImageDialog = true;\r\n                   \r\n                } else {\r\n                        state.istoggled = !state.istoggled;\r\n                        state.openErrorDialog = true;\r\n                        state.err_message = l.provide_value_suggestion;\r\n                    \r\n                }\r\n            }\r\n        } else {\r\n                state.istoggled = !state.istoggled;\r\n                state.openErrorDialog = true;\r\n                state.err_message = l.min_row_col_value;\r\n        }\r\n    }\r\n\r\n    // it update the attribute in lower case\r\n    function updateAttrToLower(data) {\r\n        let xml = data;\r\n        let isLower = false;\r\n        // convert headingCorrect attribute to headingcorrect\r\n        if (xml.smxml.list._headingCorrect) {\r\n            xml.smxml.list._headingcorrect = xml.smxml.list._headingCorrect;\r\n            delete xml.smxml.list._headingCorrect;\r\n            isLower = true;\r\n        }\r\n\r\n        // convert allowSort attribute to allowsort\r\n        if (xml.smxml.list._allowSort) {\r\n            xml.smxml.list._allowsort = xml.smxml.list._allowSort;\r\n            delete xml.smxml.list._allowSort;\r\n            isLower = true;\r\n        }\r\n\r\n        // convert isParagraph attribute to isparagraph\r\n        if (xml.smxml.list._isParagraph) {\r\n            xml.smxml.list._isparagraph = xml.smxml.list._isParagraph;\r\n            delete xml.smxml.list._isParagraph;\r\n            isLower = true;\r\n        }\r\n\r\n        // convert isSentence attribute to issentence\r\n        if (xml.smxml.list._isSentence) {\r\n            xml.smxml.list._issentence = xml.smxml.list._isSentence;\r\n            delete xml.smxml.list._isSentence;\r\n            isLower = true;\r\n        }\r\n        // update ans store the xml\r\n        if (isLower == true) getChildXml(JSONToXML(xml));\r\n    }\r\n\r\n    // calls whenever there is change in option value and update the cdata accordingly\r\n    function editCdata(i, isCorr, e) {\r\n        localCData[i].value = e.target.value;\r\n        try {\r\n            if (oldCData[i]) {\r\n                if (oldCData[i].value.indexOf('##') > 0) {\r\n                    oldCData[i].value = oldCData[i].value.split('##')[0] + '##' + e.target.value;\r\n                } else if (oldCData[i].value.indexOf('##') < 1 && oldCData[i].value.indexOf('!') == 0) {\r\n                    oldCData[i].value = '!' + e.target.value;\r\n                } else {\r\n                    oldCData[i].value = e.target.value;\r\n                }\r\n            }\r\n        } catch(error) {\r\n            console.warn({'error': error});\r\n        }\r\n        \r\n        //this.forceUpdate();\r\n        // if answer is correct then add * \r\n        localCData[i].value = (isCorr == true ? \"*\" + localCData[i].value : localCData[i].value);\r\n        // xml to json\r\n        //let xml = XMLToJSON(state.xml);\r\n        let xml = state.stateXMLToJSON;\r\n        setTimeout(function() {\r\n            let newCData = \"\\n\", newoldCData = '###';\r\n            // getting all values in newCData\r\n            localCData.forEach(function(data,i){\r\n                newCData += localCData[i].value + \"\\n\";\r\n            });\r\n            if (oldCData) {\r\n            \r\n                oldCData.forEach(function(data,index_no) {\r\n                    if (newoldCData == '') {\r\n                        newoldCData += oldCData[index_no].value;\r\n                    } else {\r\n                        newoldCData += '###' + oldCData[index_no].value;\r\n                    }\r\n                });\r\n            }\r\n            // updating it in cdata\r\n            xml.smxml.list.__cdata = newCData;\r\n            /* For update the 'xml.smxml.list._oldCData' when textual data are changed in Normal mode */\r\n            xml.smxml.list._oldCData = newoldCData;\r\n            // update and store the xml\r\n            getChildXml(JSONToXML(xml));\r\n        }.bind(this), 200);\r\n    }\r\n\r\n    // calls to remove the item\r\n    function removeItem(data, id) {\r\n        let a = \"\", newoldcdata_container = \"\";\r\n        // getting all the values in a except the deleted one\r\n        \r\n        localCData.forEach(function(data,i) {\r\n            if (localCData[i].id != id) {\r\n                a += localCData[i].value + \"\\n\";\r\n            }\r\n        });\r\n        /* Checks if oldCData exist then after deletion the element it assigned left value in newoldcdata_container variable */\r\n        if (oldCData) {\r\n           \r\n            oldCData.forEach(function(data,index_no) {\r\n                if (oldCData[index_no].id != id) {\r\n                    if (newoldcdata_container == '') {\r\n                        newoldcdata_container += oldCData[index_no].value;\r\n                    } else {\r\n                        newoldcdata_container += '###' + oldCData[index_no].value;\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        state.open = false;\r\n        \r\n        // xml to json\r\n        //let xml = XMLToJSON(state.xml);\r\n        let xml = state.stateXMLToJSON;\r\n        // update cdata\r\n        xml.smxml.list.__cdata = a;\r\n        /* For Assigning value in 'xml.smxml.list._oldCData' which is not deleted */\r\n        xml.smxml.list._oldCData = newoldcdata_container;\r\n        // update the cdata\r\n        getChildXml(JSONToXML(xml));\r\n    }\r\n    \r\n\r\n</script>\r\n<main>\r\n    <div>\r\n        <center>\r\n            <div id=\"main\" class=\"border\">\r\n                <div class=\"choose_head_content px-3 pt-3 pb-0\">\r\n                    <div class=\"d-flex ms-2 ps-4\">\r\n                        <label for=\"headingCorrect\" class=\"mt-1 pt-1\">Title</label>\r\n                        <input \r\n                            id=\"headingCorrect\" \r\n                            type=\"text\" \r\n                            class=\"sm_input_text mt mb\"\r\n                            on:change = {updateSetting} \r\n                            value = {state.headingCorrect} \r\n                        />\r\n                    </div>\r\n                    <div class=\"clearfix mt ps-4\">\r\n                        <div class=\"col-md-3 pd-0 float-left\">\r\n                            <Checkbox on:click={updateSetting} id=\"allowSort\" color=\"\" checked = {((state.allowSort == 1)? true : false)}>{l.allow_sort}</Checkbox>\r\n                        </div> \r\n                        <div class=\"col-md-3 pd-0 float-left\">\r\n                                <Checkbox on:click={updateSetting} id=\"isSentence\" color=\"primary\" checked = {((state.isSentence == 1)? true : false)} >{l.in_sentence}</Checkbox>\r\n                        </div>\r\n                        <div class=\"col-md-3 pd-0 float-left\">\r\n                                <Checkbox on:click={updateSetting} id=\"isParagraph\" color=\"primary\" checked = {((state.isParagraph == 1)? true : false)}>{l.in_paragraph}</Checkbox>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"choose_item_container mb ps-4\">\r\n                    \r\n                    {#each localCData as data, i}\r\n                            <div class=\"clearfix mt choose_options\" key={i}>\r\n                                <div class=\"form-row mt-head\">\r\n                                    <div class=\"col-1\">\r\n                                    <input type=\"checkbox\" id=\"check_correct_ans\" name=\"check_correct_ans\" class=\"secure-icon float-end\" on:click={updateCorrect.bind(data.value,i)} checked={((data.value.charAt(0) == \"*\")?true:false)} style=\"position:relative;top:11px;right:15px;\"/></div>\r\n                                    <div class=\"col\">\r\n                                        <textarea\r\n                                            class = \"height32 outline0 mb-1 ms-0 \"\r\n                                            on:change={editCdata.bind(data.value,i,isCorrect[i])}\r\n                                            >{((data.value.charAt(0) == \"*\")?data.value.slice(1):data.value)}</textarea>\r\n                                    </div>\r\n                                    <div>\r\n                                        <span \r\n                                            class=\"remove-item icomoon-24px-delete-1 height30 top1 position-relative float-start\"\r\n                                            on:click={()=>{state.open = true, state.data_value= data.value, state.data_id = data.id}}\r\n                                            tabindex=\"0\" style=\"right:39px\"\r\n                                        >\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        \r\n                    {/each}\r\n                    <div class=\"alert alert-info message_content\">\r\n                        <p class=\"mb-md\">\r\n                            Add a new item by clicking the <b>Add Item</b> button at the bottom-left corner.\r\n                        </p>\r\n                    </div>\r\n                    <button \r\n                        type=\"button\" \r\n                        id=\"add-item\"\r\n                        class=\"btn btn-sm btn-outline-primary btn-sm float-left d-flex align-items-center mt-3 addbutton\"\r\n                        on:click={addNewItem} \r\n                    >\r\n                        <!-- <AddIcon/>  --><span class=\"addbuttonplus\">&#43;</span> &nbsp; Add option\r\n                    </button>\r\n                </div>\r\n                <input id=\"check\" type=\"hidden\" class=\"\" value=\"\" /> \r\n                <input type=\"hidden\" name=\"special_module_xml\" id=\"special_module_xml\" defaultValue={state.xml} />\r\n            </div>\r\n        </center>\t\r\n    </div>\r\n\r\n    <Dialog bind:visible={state.open} on:close={() => {state.open = false}} >\r\n        <h4>Confirmation</h4>\r\n        <div class=\"row\">\r\n            <span class=\"col-md-12 mt-4\">Do you really want to delete?</span>\r\n        </div>\r\n\r\n        <div slot=\"footer\" class=\"svelteFooter\">\r\n            <input type=\"button\" variant=\"contained\" on:click={() => {state.open = false}} class=\"btn btn-light colorgray\" value=\"No\" />\r\n            <Button variant=\"contained\" on:click={removeItem.bind(this,state.data_value,state.data_id)}\r\n                class=\"bg-primary text-white\"> Yes </Button>\r\n        </div>\r\n    </Dialog>\r\n\r\n</main>\r\n\r\n\r\n\r\n<style>\r\n\r\n    :global(.colorgray) {\r\n        width:56px;\r\n        background-color: lightgrey;\r\n    }\r\n    .addbutton {\r\n        position: relative;\r\n        left: 32px;\r\n        height: 31px;\r\n    }\r\n    .addbuttonplus {\r\n        font-size: 24px;\r\n    }\r\n\r\n    .height30  {\r\n        height: 30px !important;\r\n    }\r\n\r\n    .top1 {\r\n        top: 1px;\r\n    }\r\n    :global(.top6) {\r\n\t    top: 6px;\r\n    }\r\n\r\n    .font20 {\r\n        font-size: 18px;\r\n    } \r\n\r\n    .width90  {\r\n        width: 90px;\r\n    }\r\n    \r\n</style>"],"names":["AH","JUI","smVal","err","q9","l","max_error","q27","q6_advance","max_row_col_error","processError","msg","error","message","validate","type","subtype","content_icon","this","validate9","validate14","validate6","validate26","validate27","icon","selectAll","length","len","console","log","len1","len2","allow_sort","in_sentence","in_paragraph","ctx","value","charAt","slice","insert","append","bind","data_value","data_id","allowSort","isSentence","isParagraph","open","headingCorrect","xml","localCData","oldCData","state","getChildXml","changed_advance_xml","editorState","smValidate","writable","isadvance","CDATA","istoggled","openImageDialog","openErrorDialog","row_value","col_value","err_message","min_row_col_value","tomaketable","stateXMLToJSON","subscribe","items","isCorrect","beforeUpdate","XMLToJSON","MYXML","cdata","oldcdata","smxml","list","_oldCData","split","__cdata","_row","_col","_allowsort","_headingAll","JSONToXML","forEach","data","i","trim","push","replace","id","index_no","isLower","_headingCorrect","_headingcorrect","_allowSort","_isParagraph","_isparagraph","_isSentence","_issentence","updateAttrToLower","warn","function name","File name","parseXMLAuthoring","find","lastIndexOf","errMsg","content_type","item","addAfterPassedLimitCriteria","alert","e","target","checked","document","querySelector","click","disabled","getAttribute","timer","setTimeout","newCData","clearTimeout","isCorr","indexOf","newoldCData","a","newoldcdata_container"],"mappings":"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"}