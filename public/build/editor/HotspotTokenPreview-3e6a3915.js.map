{"version":3,"file":"HotspotTokenPreview-3e6a3915.js","sources":["../../../clsSMHotspot/HotspotTokenPreview.svelte"],"sourcesContent":["<script>\r\n    import { beforeUpdate, onMount, tick } from \"svelte\";\r\n    import { writable } from \"svelte/store\";\r\n    import ItemHelper from \"../helper/ItemHelper.svelte\";\r\n    import { AH, onUserAnsChange, XMLToJSON } from \"../helper/HelperAI.svelte\";\r\n    import l from '../src/libs/editorLib/language';\r\n    export let xml;\r\n    export let editorState;\r\n    export let isReview;\r\n    export let showAns;\r\n    export let uxml;\r\n    let ansSwitch = 0;\r\n    let state = {};\r\n    let hdd = writable({\r\n            xml: \"\",\r\n            itemType: \"\",\r\n            cdata: \"\",\r\n            correctAns: \"\",\r\n            userAns: [],\r\n            itemLayout: [],\r\n            smController: \"h\",\r\n            pointerEvents: \"auto\",\r\n            iconVisible: \"h\",\r\n            isReview: false,\r\n    });\r\n    let onError = \"\";\r\n    const unsubs = hdd.subscribe((items)=> {\r\n        state = items;\r\n    })\r\n\r\n\r\n    // go in block if there is change in remediation mode\r\n    $:{\r\n        \r\n        if (isReview) {\r\n            setReview(); \r\n            if(editorState && ansSwitch == 0) {\r\n                // check tha answer\r\n                ansSwitch = 1;\r\n                checkAns();\r\n            }\r\n        } else {\r\n            // if review mode is off\r\n            ansSwitch = 0;\r\n            if (editorState) unsetReview();\r\n        }\r\n    }\r\n\r\n    // calls whenever there is change in props or state\r\n    beforeUpdate(()=> {\r\n        // go in block if there is change in xml\r\n        if (xml != state.xml) {\r\n            // set the state of xml to the current(changed) xml\r\n            state.xml = xml;\r\n            // reset the correct and user ans\r\n            resetValue();\r\n            // load the module\r\n            loadModule(xml);\r\n        }\r\n\r\n        // go in block if there is change in remediation mode\r\n        // if (isReview) {\r\n        //     // check tha answer\r\n        //     checkAns();\r\n        //     setReview(); \r\n        // } else {\r\n        //     // if review mode is off\r\n        //     if (editorState) unsetReview();\r\n        // }\r\n    })\r\n\r\n    // run just after rendering\r\n    onMount(()=> {\r\n\r\n        // select token press the Enter Key ADA\r\n        AH.listen('body', 'keydown', '.token', (_this, e)=> { \r\n            if (e.which === 13) {\r\n                _this.click();\r\n            }\r\n        });\r\n\r\n        if (window.inNative) {\r\n            window.getHeight && window.getHeight();\r\n        }\r\n        // //Toggle Button Color\r\n        // AH.bind('#sm_controller button').click(function() {\r\n        //     $('#sm_controller button').removeClass(\"active btn-primary text-white bg-primary\");\r\n        //     $(this).addClass('active btn-primary text-white bg-primary');\r\n        // });\r\n\r\n        // Binding set-review and unset-review with the click event\r\n        //For modeOn functions in prepkit\r\n        // $(\"#set-review\").on('click', function() {\r\n        //     setReview();\r\n        // });\r\n        \r\n        // $(\"#unset-review\").on('click', function() {\r\n        //     unsetReview();\r\n        // });\r\n        // binding token with enter key in case of IE\r\n        // if (isIE) {\r\n        //     AH.listen(document, \"keyup\", \".hotspot-token-preview .token\", (_this, event)=> {\r\n        //         if (event.which == 13) {\r\n        //             _this.click();\r\n        //         }\r\n        //     });\r\n        // }\r\n    });\r\n\r\n    // when review mode is on\r\n    function setReview() {\r\n        state.isReview = true;\r\n        state.smController = \"\";\r\n        state.pointerEvents = \"none\";\r\n        showAnswer(\"yans\", \"showIcon\");\r\n        //$('#sm_controller .your-ans').addClass(\"btn-light active\"); \r\n        AH.select(\".tokenHeader\", 'attr', {tabIndex: \"0\"});\r\n    }\r\n\r\n    // when review mode is off\r\n    function unsetReview() {\r\n        state.isReview = false;\r\n        state.smController = \"h\";\r\n        state.pointerEvents = \"auto\";\r\n        showAnswer(\"yans\", \"hideIcon\");\r\n        AH.select(\".tokenHeader\", 'removeAttr', 'tabindex');\r\n        //$('#sm_controller button').removeClass(\"active btn-primary text-white bg-primary\");\r\n    }\r\n\r\n    // for resetting the value\r\n    function resetValue() {\r\n        state.correctAns = [];\r\n        state.userAns = [];\r\n    }\r\n\r\n    // load the module\r\n    function loadModule(loadXml) {\r\n        // Here xml is converted into the json and pass into the parseXMLAuthoring for xml parsing\r\n        loadXml = XMLToJSON(loadXml);\r\n        parseXMLPreview(loadXml);\r\n    }\r\n\r\n    // parse function for the preview\r\n    async function parseXMLPreview(MYXML) {\r\n        try {\r\n            // split the correctAns by , & stored it in the current state \r\n            state.correctAns = MYXML.smxml.div._correctAns.split(\",\");\r\n            // set the type of module wether it is w,p or s\r\n            state.itemType = MYXML.smxml.div._type;\r\n            // set the state of cdata on the basis of xml and after that parse the xml according to its type\r\n            state.cdata = MYXML.smxml.div.__cdata;\r\n            await tick();\r\n            switch(MYXML.smxml.div._type) {\r\n                case \"w\" :\r\n                    // if the type is word\r\n                    // function for parse word\r\n                    parseWord(state.cdata);\r\n                    break;\r\n                case \"s\" :\r\n                    // if the type is sentence\r\n                    // function for parse sentence\r\n                    parseSentance(state.cdata);\r\n                    break;\r\n                case \"p\" :\r\n                    // if the type is paragraph\r\n                    // function for parse paragraph\r\n                    parseParagraph(state.cdata);\r\n                    break;\r\n                default :\r\n                    console.warn(\"No type found to parse\");\r\n                    break;\r\n            }\r\n            if (uxml) {\r\n               // parse the user ans\r\n               parseUserAns(uxml);\r\n            }\r\n        } catch (error) {\r\n            onError = error;\r\n            console.warn({'error':error.message,'function name':'parseXMLPreview','File name':'HotspotTokenPreview.js'});\r\n        }\r\n    }\r\n\r\n    // in case of word \r\n    function parseWord(str) {\r\n        // replace the newline with \" #newline# \"\r\n        str = str.replace(/\\n/g, \" #newline# \");\r\n        //Split the string with space and remove array which contain null value\r\n        let word = str.split(\" \").map( (item)=> { return item.trim() } ).filter( (arr)=> { return arr != \"\" });\r\n        let wordArray = [];\r\n        let tempWord = [];\r\n        /* split punctuation mark in word and store in the tempWord array */\r\n        word.map((data, i)=> {\r\n            let special_symbol = data.match(/[.,]/g);\r\n            if (special_symbol) {\r\n                let splitText = data.split(special_symbol[0]);\r\n                tempWord.push(splitText[0]);\r\n                tempWord.push(special_symbol[0]);\r\n                if (splitText[1].trim()) {\r\n                    tempWord.push(splitText[1]);\r\n                }\r\n            } else {\r\n                tempWord.push(data)\r\n            }\r\n        });\r\n        /*end*/\r\n        // store id, value and selected in wordArray\r\n        // Here id is unique id of that element , value stores the element value and selected stores wether it is selected or not\r\n        tempWord.map((data, i)=> {\r\n            wordArray.push({\r\n                id: \"ID\"+i,\r\n                value: data,\r\n                selected: false,\r\n            });\r\n        });\r\n       state.itemLayout = wordArray;\r\n    }\r\n\r\n    // in case of sentence\r\n    function parseSentance(str) {\r\n        //Split the string with fullstop and remove array which contain null value\r\n        let sentance = str.split(\".\").map( (item)=> { return item.trim() } ).filter( (arr)=> { return arr != \"\" });\r\n        let sentanceArray = [];\r\n        // store id, value and selected in sentanceArray\r\n        // Here id is unique id of that element , value stores the element value and selected stores wether it is selected or not\r\n        sentance.map((data, i)=> {\r\n            sentanceArray.push({\r\n                id: \"ID\"+i,\r\n                value: data+\".\",\r\n                selected: false\r\n            });\r\n        });\r\n        state.itemLayout = sentanceArray;\r\n    }\r\n\r\n    // in case of paragraph\r\n    function parseParagraph(str) {\r\n        //Split the string with paragraph and remove array which contain null value\r\n        let paragraph = str.split(\"\\n\").map( (item)=> { return item.trim() } ).filter( (arr)=> { return arr != \"\" });\r\n        let paragraphArray = [];\r\n        // store id, value and selected in paragraphArray\r\n        // Here id is unique id of that element , value stores the element value and selected stores wether it is selected or not\r\n        paragraph.map((data, i)=> {\r\n            paragraphArray.push({\r\n                id: \"ID\"+i,\r\n                value: data,\r\n                selected: false\r\n            });\r\n        });\r\n        state.itemLayout = paragraphArray;\r\n    }\r\n\r\n    function getCorrect(id) {\r\n        //Return true if this id is correct answer\r\n        return (AH.findInArray(id, state.correctAns) ? true: false);\r\n    }\r\n\r\n    // for checking the answer\r\n    function checkAns() {\r\n        // used for switch on next question in prepengine if current question is attempted\r\n\t\tISSPECIALMODULEUSERXMLCHANGE = 1;\r\n        let resultLength = 0;\r\n        const correctLength = state.correctAns.length;\r\n        //Check if correct answer is equal to user answer\r\n        state.correctAns.map((data, i)=> {\r\n            state.userAns.map((data2, j)=> {\r\n                if (data == data2) {\r\n                    resultLength = resultLength + 1;\r\n                }\r\n            });\r\n        });\r\n        let ans = (correctLength == resultLength && resultLength == state.userAns.length) ? true : false;\r\n        onUserAnsChange({ans: ans, uXml: uxml});\r\n\r\n        showAns && showAns(ans ? \"Correct\" : \"Incorrect\");\r\n    }\r\n\r\n    // for stting the user answer for selected one\r\n    function setSelected(pos) {\r\n        state.itemLayout[pos].selected = !state.itemLayout[pos].selected;\r\n        setUserAns(pos, state.itemLayout[pos].selected);\r\n    }\r\n\r\n    function setUserAns(id,selected) {\r\n        let tempUserAns = state.userAns;\r\n        //Push the index in user answer array if clicked first time\r\n        //and delete the index from user answer if it is already selected\r\n        if (selected == true) {\r\n            // push in the userAns if it is selected\r\n            tempUserAns.push(\"ID\"+id);\r\n            state.userAns = tempUserAns;\r\n        } else if (selected == false) {\r\n            let deleteValue = tempUserAns.indexOf(\"ID\"+id);\r\n            if (deleteValue > -1) {\r\n                // delete from the user ans if it is deselected\r\n                tempUserAns.splice(deleteValue, 1);\r\n            }\r\n            state.userAns = tempUserAns;\r\n        }\r\n\r\n        // getting height in native\r\n        if (window.inNative) {\r\n            window.getHeight && window.getHeight();\r\n        }\r\n        // updating the uaXml\r\n        uxml = \"<smans><div userAns='\" + state.userAns.join()+\"'></div></smans>\";\r\n        // AH.select(\"#special_module_user_xml\", 'value', \"<smans><div userAns='\"+state.userAns.join()+\"'></div></smans>\")\r\n        // check for correct answer\r\n        checkAns();\r\n    }\r\n\r\n    // for showing answer\r\n    function showAnswer(val,iconState) {\r\n        //show correct incorrect icon with respect to iconState\r\n        state.iconVisible = (iconState == \"showIcon\") ? \"\" : \"h\";\r\n        //change token highlight with respect to val\r\n        //either to show correct answer or user answer\r\n        let ans = [];\r\n        if (val == \"cans\") {\r\n            // if correct ans tab\r\n            ans = state.correctAns;\r\n        } else if (val == \"yans\") {\r\n            // if user answer tab\r\n            ans = state.userAns;\r\n        }\r\n        state.itemLayout.map((data, j)=> {\r\n            data.selected =  AH.findInArray(data.id, ans) ? true : false;\r\n            //return data;\r\n        });\r\n    }\r\n\r\n    // for parsing the user ans function\r\n    function parseUserAns(uans) {\r\n        // converting the xml into the json and stored in userAnswer\r\n        let userAnswer = XMLToJSON(uans);\r\n        // cheking for the 2 elements smans,div, and one attribute of div i.e, userAns\r\n        if (userAnswer.smans && userAnswer.smans.div && userAnswer.smans.div._userAns) {\r\n            // splitting the userAns with ,\r\n            state.userAns = userAnswer.smans.div._userAns.split(\",\");\r\n            // get the selection on the basis of the user answer\r\n            state.itemLayout.map((data, j)=> {\r\n                data.selected =  AH.findInArray(data.id, state.userAns) ? true :false;\r\n            });\r\n        }\r\n    }\r\n\r\n    function handleReviewClick(mode, event) {\r\n        if (mode == 'c') {\r\n            showAnswer(\"cans\", \"hideIcon\");\r\n        } else {\r\n            showAnswer(\"yans\", \"showIcon\");\r\n        }\r\n    }\r\n</script>\r\n   \r\n{#if onError != \"\"}\r\n    <div class=\"alert alert-danger font-weight-bold\">\r\n        <span>Oops Something went wrong please check your ParseXML Function </span>\r\n    </div>\r\n{:else}\r\n    <div class=\"hotspot-token-preview\" tabindex=\"0\">\r\n        <center>\r\n        <ItemHelper \r\n            on:setReview={setReview}\r\n            on:unsetReview={unsetReview}\r\n            handleReviewClick={handleReviewClick}\r\n            reviewMode={state.isReview}\r\n        />\r\n        <div \r\n            class=\"token_highlight_heading font17 p-2 text-left\"\r\n            style=\"\r\n                max-width: 600px;\r\n                border-top: 2px solid #96bbf6;\r\n                background-color: #d9e7fd;\r\n            \"\r\n        >\r\n            {l.token_highlight}\r\n        </div>\r\n        <div\r\n            class=\"p-2\"\r\n            style=\"\r\n                max-width: 600px;\r\n                border: 2px solid #d9e7fd;\r\n                display: flow-root;\r\n                text-align: left;\r\n                justify-content: left;\r\n            \"\r\n        >\r\n            {#if state.itemLayout}   \r\n                {#each state.itemLayout as data, i }\r\n                    <div class=\"h\">\r\n                        {#if data.value.indexOf('##pt') > -1 }\r\n                            {data.value = data.value.replace(/##pt/g, '.')}\r\n                        {/if}\r\n                        {#if data.value.indexOf('#cm') > -1 }\r\n                            {data.value = data.value.replace(/#cm/g, ',')}\r\n                        {/if}\r\n                    </div>\r\n                    {#if data.value == \",\" || data.value == \".\"}\r\n                        <div class=\"float-left position-relative d-inline\" style=\"width: 1.5px; height: 1px\">\r\n                            <span\r\n                                class=\"float-left position-absolute\"\r\n                                style=\"left: -2.5px\"\r\n                            >{data.value}</span>\r\n                        </div>\r\n                    {:else if data.value == \"#newline#\"}\r\n                        <br/>\r\n                    {:else}\r\n                        <div key={i} class=\"tokenHeader position-relative float-left d-inline\">\r\n                            <span\r\n                                data-id={\"ID\"+i}\r\n                                data-correct={AH.findInArray(\"ID\"+i, state.correctAns)}\r\n                                on:click={setSelected.bind(this, i)}\r\n                                data-selected={data.selected}\r\n                                tabIndex={(state.pointerEvents == \"auto\") ? \"0\" : \"1\"}\r\n                                class=\"pointer float-left text-left font14 token {(data.selected) ? 'token_selected' : ''}\"\r\n                                style=\"\r\n                                    margin: 2px;\r\n                                    user-select: none;\r\n                                    border: 1px solid transparent;\r\n                                    padding: 1px 3px;\r\n                                    border-radius: 3px;\r\n                                    pointer-events: {state.pointerEvents}\r\n                                \"\r\n                            >\r\n                                {data.value}\r\n                            </span>\r\n                            <span\r\n                                class={state.iconVisible} \r\n                                style=\"\r\n                                    position: absolute;\r\n                                    width: 17px;\r\n                                    height: 17px;\r\n                                    right: -8px;\r\n                                    top: -9px;\r\n                                    background: white;\r\n                                    border-radius: 15px 12px 12px;\r\n                                    font-size: 18px;\r\n                                    z-index: 1;\r\n                                    display: {(state.iconVisible == \"\" && data.selected) ? 'block' : 'none'}\r\n                                \"\r\n                            >\r\n                                <span \r\n                                    class=\"position-relative {AH.findInArray(\"ID\"+i, state.correctAns) ? 'icomoon-new-24px-checkmark-circle-1': 'icomoon-new-24px-cancel-circle-1'}\" \r\n                                    style=\"color: {AH.findInArray(\"ID\"+i, state.correctAns) ? 'green' : 'red'}; bottom: 3px; left: 0;\" \r\n                                    aria-label={AH.findInArray(\"ID\"+i, state.correctAns) ? \"marked as correct\":\"marked as incorrect\"}\r\n                                ></span>\r\n                            </span>\r\n                        </div>\r\n                    {/if}\r\n                {/each}\r\n            {/if}\r\n        </div>\r\n        </center>\r\n    </div>\r\n{/if}\r\n<style>\r\n    .token:hover {\r\n        border: 1px solid #000!important;\r\n    }\r\n\r\n    :global(.bla .token:hover){\r\n        border: 1px solid #fff!important;\r\n    }\r\n\r\n    .token_selected {\r\n        background-color: #64bb63;\r\n        color: #fff;\r\n    }\r\n\r\n    :global(.bla .token_highlight_heading) {\r\n        color: #000!important;\r\n    }\r\n\r\n    .hotspot-token-preview br {\r\n        clear: both;\r\n    }\r\n</style>"],"names":[],"mappings":"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"}