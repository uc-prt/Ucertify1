{"version":3,"file":"HotspotToken-e2f981ae.js","sources":["../../../clsSMHotspot/HotspotToken.svelte"],"sourcesContent":["<script>\r\n    import { beforeUpdate, onMount } from \"svelte\";\r\n    import { writable } from \"svelte/store\";\r\n    import { AH, JSONToXML, XMLToJSON } from \"../helper/HelperAI.svelte\";\r\n    import l from '../src/libs/editorLib/language';\r\n    export let xml;\r\n    export let isReview;\r\n    export let editorState;\r\n    export let getChildXml;\r\n\r\n    let state = {};\r\n    let hdd = writable({\r\n        xml: \"\",\r\n        cdata: \"\",\r\n        viewToken: \"\",\r\n        viewTemplate: \"\",\r\n        correctAns: [],\r\n        itemLayout: [],\r\n        activeToken: \"\",\r\n        confirmDialog: false\r\n    });\r\n    const unsub = hdd.subscribe((items)=> {\r\n        state = items;\r\n    })\r\n    // calls whenever there is change in state or props \r\n    beforeUpdate(()=> {\r\n        // check if there is change in xml\r\n        if (xml != state.xml) {\r\n            state.xml = xml;\r\n            // for refreshing the module with new xml\r\n            loadModule(xml);\r\n        }\r\n    })\r\n\r\n    // called just after rendering\r\n    onMount(()=> {\r\n        // check the conditions if it is IE\r\n        // if (isIE) {\r\n        //     AH.listen(document, \"keyup\", \".hotspot-token .token\", (_this, event)=> {\r\n        //         // binding the enter key in case of ada\r\n        //         if (event.which == 13) {\r\n        //             AH.trigger(_this, 'click');\r\n        //         }\r\n        //     });\r\n        // }\r\n        \r\n        // storing and updating the xml\r\n        getChildXml(xml+\" \");\r\n        // for showing the Enter text tab by default \r\n        toggleTemplateToken(\"none\", \"block\");\r\n\r\n        // for showing the text into the editable area of the Enter text\r\n        AH.selectAll('.text_area', 'value', state.cdata.trim().replace(/[ ]+/gm, ' '));\r\n\r\n        // function for showing warning for the unneccessary space\r\n        AH.bind(\".text_area\", \"keydown\", (event)=> {\r\n            let key_pressed = event;\r\n            var element_name = document.querySelector('.text_area');\r\n            // getting start pos\r\n            var startPos = element_name.selectionStart;\r\n            // getting end pos\r\n            var endPos = element_name.selectionEnd;\r\n            if (endPos == startPos) {\r\n                // if space key is pressed\r\n                if (key_pressed.which == 32) {\r\n                    if ((AH.select('.text_area').value.charAt(startPos - 1) == \" \") || (AH.select('.text_area').value.charAt(startPos) == \" \")) {\r\n                        AH.alert(l.space_warning);\r\n                        key_pressed.preventDefault();\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    });\r\n\r\n    // parse the xml and load the module accordingly\r\n    function loadModule(loadXml) {\r\n        // Here xml is converted into the json and pass into the parseXMLAuthoring for xml parsing\r\n        loadXml = XMLToJSON(loadXml);\r\n        parseXMLAuthoring(loadXml);\r\n    }\r\n\r\n    // parsing the xml for authoring\r\n    async function parseXMLAuthoring(MYXML) {\r\n        // getting the correct ans sepereted by , in array format\r\n        state.correctAns = (MYXML.smxml.div._correctAns.trim()) ? MYXML.smxml.div._correctAns.split(\",\") : [];\r\n        state.cdata = MYXML.smxml.div.__cdata;\r\n        state.activeToken = MYXML.smxml.div._type;\r\n        // switching the module on the basis of the type used\r\n        switch(MYXML.smxml.div._type) {\r\n            case \"w\" :\r\n                // in case of word\r\n                parseWord(state.cdata);\r\n                break;\r\n            case \"s\" :\r\n                // in case of sentence\r\n                parseSentance(state.cdata);\r\n                break;\r\n            case \"p\" :\r\n                // in case of paragraph\r\n                parseParagraph(state.cdata);\r\n                break;\r\n            default :\r\n                console.warn(\"No type found to parse\");\r\n            break;\r\n        }\r\n    }\r\n\r\n    // parsing the word\r\n    function parseWord(str) {\r\n        // replace the newline with \" #newline# \"\r\n        str = str.replace(/\\n/g, \" #newline# \");\r\n        //Split the string with space and remove array which contain null value\r\n        let word = str.split(\" \").map( (item)=> { return item.trim() } ).filter( (arr)=> { return arr != \"\" });\r\n        let tempWord = [];\r\n\r\n        /* split punctuation mark in word and store in the tempWord array */\r\n        word.map((data, i)=> {\r\n            let special_symbol = data.match(/[.,]/g);\r\n            if (special_symbol) {\r\n                let splitText = data.split(special_symbol[0]);\r\n                tempWord.push(splitText[0]);\r\n                tempWord.push(special_symbol[0]);\r\n                if (splitText[1].trim()) {\r\n                    tempWord.push(splitText[1]);\r\n                }\r\n            } else {\r\n                tempWord.push(data)\r\n            }\r\n        });\r\n        /*end*/\r\n        let wordArray = [];\r\n        // store id, value and selected in wordArray\r\n        // Here id is unique id of that element , value stores the element value and selected stores wether it is selected or not\r\n        tempWord.map((data, i)=> {\r\n            wordArray.push({\r\n                id: \"ID\"+i,\r\n                value: data,\r\n                selected: getSelected(i)\r\n            });\r\n        });\r\n        \r\n        state.itemLayout = wordArray;\r\n    }\r\n\r\n    // parsing the sentence\r\n    function parseSentance(str) {\r\n        //Split the string with fullstop and remove array which contain null value\r\n        let sentance = str.split(\".\").map( (item)=> { return item.trim() } ).filter( (arr)=> { return arr != \"\" });\r\n        let sentanceArray = [];\r\n\r\n        // store id, value and selected in sentanceArray\r\n        // Here id is unique id of that element , value stores the element value and selected stores wether it is selected or not\r\n        sentance.map((data, i)=> {\r\n            sentanceArray.push({\r\n                id: \"ID\"+i,\r\n                value: data+\".\",\r\n                selected: getSelected(i)\r\n            });\r\n        });\r\n        state.itemLayout = sentanceArray;\r\n    }\r\n\r\n    // parsing the paragraph\r\n    function parseParagraph(str) {\r\n        //Split the string with paragraph and remove array which contain null value\r\n        let paragraph = str.split(\"\\n\").map( (item)=> { return item.trim() } ).filter( (arr)=> { return arr != \"\" });\r\n        let paragraphArray = [];\r\n\r\n        // store id, value and selected in paragraphArray\r\n        // Here id is unique id of that element , value stores the element value and selected stores wether it is selected or not\r\n        paragraph.map((data, i)=> {\r\n            paragraphArray.push({\r\n                id: \"ID\"+i,\r\n                value: data,\r\n                selected: getSelected(i)\r\n            });\r\n        });\r\n        state.itemLayout = paragraphArray;\r\n    }\r\n\r\n    // update the cdata whenever there is chamge in textarea\r\n    function updateCdata(e) {\r\n        // convert the XML into JSON using XMLToJSON func and stored in xml\r\n        let xml = XMLToJSON(state.xml);\r\n        // clear the correctAns \r\n        xml.smxml.div._correctAns = \"\";\r\n        // updtae the cdata\r\n        xml.smxml.div.__cdata = e.target.value;\r\n        // stores and update the xml \r\n        getChildXml(JSONToXML(xml));\r\n    }\r\n\r\n    // calls whenever tab is changed\r\n    function toggleTemplateToken(viewToken, viewTemplate) {\r\n        state.viewToken = viewToken;\r\n        state.viewTemplate = viewTemplate;\r\n    }\r\n\r\n    // return true if that particular position was selected\r\n    function getSelected(pos) {\r\n        return (AH.findInArray(\"ID\" + pos, state.correctAns) ? true: false);\r\n    }\r\n\r\n    // for changing the mode word, sentence, paragraph\r\n    function setTemplateType(type) {\r\n        // convert the XML into JSON using XMLToJSON func and stored in xml\r\n        let xml = XMLToJSON(state.xml);\r\n        // update the type w,p,s \r\n        xml.smxml.div._type = type;\r\n        // clear the correctAns \r\n        xml.smxml.div._correctAns = \"\";\r\n        // stores and update the xml \r\n        getChildXml(JSONToXML(xml));\r\n    }\r\n\r\n    // for setting the correct answer which is selected\r\n    function setSelected(pos) {\r\n        state.itemLayout[pos].selected = !state.itemLayout[pos].selected;\r\n        setCorrectAnswer(pos,state.itemLayout[pos].selected);\r\n    }\r\n\r\n    // set the correct answer\r\n    function setCorrectAnswer(id, selected) {\r\n        if (selected == true) {\r\n            // if token is selected then push it in correctAns\r\n            state.correctAns.push(\"ID\"+id);\r\n        } else if (selected == false) {\r\n            let deleteValue = state.correctAns.indexOf(\"ID\"+id);\r\n            if (deleteValue > -1) {\r\n                // if token is deselected then delete that element from the correctAns\r\n                state.correctAns.splice(deleteValue,1);\r\n            } \r\n        }\r\n        // join the correctAns with , sepereted and stored in crt\r\n        let crt = state.correctAns.filter( function(arr) { return arr != \"\" }).join();\r\n        // update the correctAns attribute in the xml\r\n        updateCorrect(crt);\r\n    }\r\n\r\n    // update correct answer\r\n    function updateCorrect(correct) {\r\n        // convert the XML into JSON using XMLToJSON func and stored in xml\r\n        let xml = XMLToJSON(state.xml);\r\n        // updating the correctAns\r\n        xml.smxml.div._correctAns = correct;\r\n        // stores and update the xml \r\n        getChildXml(JSONToXML(xml));\r\n    }\r\n\r\n    // whenever clear button is clicked\r\n    function clearToken() {\r\n        // convert the XML into JSON using XMLToJSON func and stored in xml\r\n        let xml = XMLToJSON(state.xml);\r\n        // updating the correctAns\r\n        xml.smxml.div._correctAns = \"\";\r\n        // stores and update the xml \r\n        getChildXml(JSONToXML(xml));\r\n    }\r\n</script>\r\n\r\n<div class=\"hotspot-token p-2 border\">\r\n    <div class=\"row ml-sm2\">\r\n        <div class=\"btn-group amazonpaybutton mb-2 mr-4\" role=\"group\">\r\n            <button \r\n                type=\"button\"\r\n                class={(state.viewTemplate == \"block\")? \"btn btn-light active\" : \"btn btn-light \"} \r\n                on:click={toggleTemplateToken.bind(this, \"none\", \"block\")}\r\n            >\r\n                {l.edit_template}\r\n            </button>\r\n            <button \r\n                type=\"button\"\r\n                class={(state.viewToken == \"block\")?\"btn btn-light active\":\"btn btn-light\"}  \r\n                on:click={toggleTemplateToken.bind(this, \"block\", \"none\")}\r\n            >\r\n                {l.edit_token}\r\n            </button>\r\n        </div>\r\n        <div style=\"display: {state.viewToken}\">\r\n            <div class=\"btn-group border-0 bg-none\">\r\n                <button \r\n                    type=\"button\" \r\n                    class={(state.activeToken == \"w\") ? \"btn btn-light active\" : \"btn btn-light\"} \r\n                    on:click={setTemplateType.bind(this, \"w\")}\r\n                >\r\n                    {l.word}\r\n                </button>\r\n                <button \r\n                    type=\"button\" \r\n                    class={(state.activeToken == \"s\") ? \"btn btn-light active\" : \"btn btn-light\"} \r\n                    on:click={setTemplateType.bind(this, \"s\")}\r\n                >\r\n                    {l.sentance}\r\n                </button>\r\n                <button \r\n                    type=\"button\"\r\n                    class={(state.activeToken == \"p\") ? \"btn btn-light active\" : \"btn btn-light\"} \r\n                    on:click={setTemplateType.bind(this, \"p\")}\r\n                >\r\n                    {l.paragraph}\r\n                </button>\r\n            </div>\r\n            <button type=\"button\" class=\"btn btn-outline-primary ml-2\" on:click={clearToken.bind(this)}>{l.clear}</button>\r\n        </div>\r\n    </div>\r\n    <textarea \r\n        style=\"display: {state.viewTemplate}\" \r\n        on:change={updateCdata.bind(this)} \r\n        rows=\"10\" \r\n        cols=\"65\"\r\n        class=\"text_area p-2 mt-3 fwidth\"\r\n    ></textarea>\r\n    <div style=\"display: {state.viewToken}\" class=\"mt-3 light-cyan-bg border\">\r\n        <div class=\"d-inline-block px-1 py-2 word_break\">\r\n        {#if state.itemLayout}\r\n            {#each state.itemLayout as data, i }\r\n                {#if data.value == \",\" || data.value == \".\"}\r\n                    <div class=\"float-start position-relative done_percent_bar\" style=\"width: 2px\">\r\n                        <span \r\n                            class=\"position-absolute float-start top5\"\r\n                            style=\"left: -3px\"\r\n                        >\r\n                            {data.value}\r\n                        </span>\r\n                    </div>\r\n                {:else if data.value == \"#newline#\" }\r\n                    <br/>\r\n                {:else}\r\n                    <div\r\n                        data-id={\"ID\"+i}\r\n                        on:click={setSelected.bind(this, i)}\r\n                        data-selected={data.selected}\r\n                        tabIndex=\"0\"\r\n                        class=\"token float-start mx-1 mb-1 p-1 border border-secondary pointer text-left {data.selected ? 'token_selected' : 'token bg-white'}\"\r\n                        style=\"user-select: none;border-radius: 3px; font: 14px;\"\r\n                    >\r\n                        {data.value}\r\n                    </div>\r\n                {/if}\r\n            {/each}\r\n        {/if}\r\n        </div>\r\n    </div>\r\n    <div style=\"display: {state.viewToken}\">\r\n        <div class=\"pl-2 pt-2 font-weight-bold\">{state.correctAns.length} {l.no_of_token}</div>\r\n    </div>\r\n    <div class=\"text-danger pl-2 pt-2\" style=\"font: 13px;\">\r\n        <span class=\"font-weight-bolder\">* {l.note_label}</span>\r\n        <span>{l.token_message}</span>\r\n    </div>\r\n</div>\r\n<style>\r\n    .token_selected {\r\n        background-color: #64bb63;\r\n        color: #fff;\r\n    }\r\n</style>"],"names":[],"mappings":"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"}