{"version":3,"file":"EssayPreview-bf1499d8.js","sources":["../../../clsSMEssay/eaasy_new_react.js","../../../clsSMEssay/EssayPreview.svelte"],"sourcesContent":["\n\nconst essayUploadUrl = 'http://ucertify.com/reactUpload.php/';//remove hard code, use from constant\nimport JUI from '../src/libs/javscript_helper/JUI.js';\nlet editor;\nexport default class EssayNewReact extends JUI {\n    constructor(eid, essayEditor) {\n        super();\n        this.timer = {};\n        this.eid = eid;\n        this.essay_ready(eid, essayEditor);\n    }\n\n    // getting the essay module ready\n    essay_ready(eid, essayEditor) {\n        let filePath;\n        let eidNode = document.querySelector(eid);\n        editor = essayEditor;\n        setTimeout(()=> {\n            this.bind('#drop a', 'click', (event)=> {\n                this.find(event.target.parentNode, 'input').click();\n            });\n\n            // it initialize the knob plugin listen for clicks on the cancel icon. \n            \n            //SUNEDITOR.create(this.find(eid, '#essay_edit'), { toolbarSelector: '[data-role=editor2-toolbar]' });\n            this.selectAll('[data-role=magic-overlay]').forEach(function(_this) {\n                var overlay = _this,\n                    target = _this.dataset['target'];\n                // overlay.offset(target.offset()).width(target.outerWidth()).height(target.outerHeight());\n            });\n\n            essayEditor.onChange = (contents, core)=> {\n                this.updateXML(eid, 200, contents);\n            }\n            essayEditor.onKeyDown = (e, core)=> {\n                if (e.keyCode == 86 || e.keyCode == 67) {\n                    this.updateXML(eid, 200, e.target.innerHTM);\n                }\n            }\n\n            let ua = window.navigator.userAgent;\n            let ms_old_ie = ua.indexOf('MSIE ');\n            let ms_new_ie = ua.indexOf('Trident/');\n            this.listen(eidNode, 'click', 'a.essay_dwl_file', (_this)=> {\n                if ((ms_old_ie > -1) || (ms_new_ie > -1)) {\n                    var path = _this.getAttribute('href');\n                    _this.removeAttribute('href');\n                    window.open(path);\n                    setTimeout(()=> { this.select('a.essay_dwl_file').setAttribute('href', path) }, 500);\n                }\n                setTimeout(()=> { this.select('#center').remove(); }, 500);\n            });\n        }, 500);\n    }\n\n    // for getting path of the s3\n    getPath() {\n        let path = \"\"\n        if (typeof test_session_uid != \"undefined\") {\n            var folder = this.getForlderName(test_session_uid);\n            path = \"//s3.amazonaws.com/test_session/\" + folder + '/';\n        } else if (typeof user_guid != 'undefined') {\n            path = \"//s3.amazonaws.com/test_session/\" + user_guid + '/';\n        }\n        return path;\n    }\n\n    getUploads(...media) { \n        let path = this.getPath();\n        console.log(\"Upload media selected\", media);\n        let allExt = \",\" + this.select(this.eid).getAttribute('data-filetypeexts');\n        Array.prototype.forEach.call(media[0], (_f)=> {\n            let form_data = new FormData();\n            form_data.append('Filedata', _f);\n            let file_ext = _f.name.split('.');\n            let tpl = this.parseHtml('<li class=\"working\"><span class=\"download\" disabled=\"disabled\"><a target=\"_blank\" onclick=\"setTimeout(function(){activate(0)},500);\" href=\"' + path + _f.name + '\" title=\"Download File\"  class=\"essay_dwl_file icomoon-file-download\"></a></span><span class=\"filename\"></span><span class=\"fileSize\"></span><span class=\"abort\">abort</span><div id=\"progressbar\"><div class=\"bar\" style={{width: \"0\"}}></div></div></li>');\n            this.find(tpl, '.filename', {action: 'text', actionData: _f.name});\n            this.insert(this.find(tpl, '.fileSize'), `<i>${this.formatFileSize(_f.size)}</i>`, 'beforeend');\n            if (this.find(this.eid, '.essay_upload_status li', 'all').length >= this.select(this.eid).getAttribute('data-limit')) {\n                this.showmsg('The number of files uploaded exceeds the queue size limit (' + this.select(this.eid).getAttribute('data-limit') + ')');\n            } else if (!this.findInArray(file_ext[1].toLowerCase(), allExt.split(\",*.\")) ) {\n                this.showmsg('The file format/file extension is not valid.');\n            } else {\n                this.find(this.eid, '.essay_upload_status', {action: 'addClass', actionData: 'working_file'});\n                //data.context = tpl.appendTo(\".essay_upload_status\");\n                this.select(\".essay_upload_status\").append(tpl);\n                this.essay_sendFile_ToServer(this.eid, form_data, status);\n            }\n        });\n    }\n\n    // Helper function that formats the file sizes\n    formatFileSize(bytes) {\n        if (typeof bytes !== 'number') {\n            return '';\n        }\n\n        if (bytes >= 1000000000) {\n            return (bytes / 1000000000).toFixed(2) + ' GB';\n        }\n\n        if (bytes >= 1000000) {\n            return (bytes / 1000000).toFixed(2) + ' MB';\n        }\n\n        return (bytes / 1000).toFixed(2) + ' KB';\n    }\n\n    //It Calculate the completion percentage of the upload on progress event.\n    essay_sendFile_ToServer(eid, formData, status) {\n        this.activate(1);\n        let tsuid = (typeof test_session_uid == \"undefined\") ? \"\" : test_session_uid;\n        let uploadURL = essayUploadUrl + \"?func=essay&exts=\" + this.select(eid).dataset['filetypeexts'] + \"&test_session_uid=\" + tsuid; //Upload URL\n        console.log(uploadURL)\n        this.ajax({\n            url: uploadURL,\n            dataType: 'text',\n            formData: true,\n            contentType: false,\n            processData: false,\n            cache: false,\n            data: formData,\n        }).then(()=> {\n            this.activate(0);\n            this.select(\".essay_upload_status\", 'css', {display: 'block'});\n            this.select('#progressbar .bar', 'remove');\n            this.selectAll('.download', 'removeAttr', 'disabled');\n            this.updateXML(this.eid);\n            //status.setProgress(100);\n            this.showmsg(\"File uploaded sucessfully.\");\n        }).catch((...e)=> {\n            this.activate(0);\n            console.log('File is recorded but not uploaded due to server error.',e);\n            this.select('#progressbar .bar', 'remove');\n            this.selectAll('.download', 'removeAttr', 'disabled');\n        });\n    }\n\n    // it returns array of extracted data.\n    ext_array(exts) { \n        let ext_arr = [];\n        this.selectAll(exts.split(',')).forEach((val, i)=> {\n            let _ext = val.split('.');\n            ext_arr.push(_ext[1]);\n        });\n        return ext_arr;\n    }\n\n    updateXML(essayID, time, content) {\n        if (this.timer['updateXML']) clearTimeout(this.timer['updateXML']);\n        this.timer['updateXML'] = setTimeout(()=> {\n            let val = content || editor.getContents();\n            let file_str = \"\";\n            this.find(essayID,'.essay_upload_status li', 'all').forEach((_this)=> {\n                if (file_str == \"\") {\n                    file_str = _this.querySelector('.filename').innerHTML; \n                } else {\n                    file_str = file_str + ',' + _this.querySelector('.filename').innerHTML;\n                }\n            });\n            if (window.inNative) {\n                window.getHeight();\n            }\n            let userAnsXML = `<smans type='5'><userans><![CDATA[${val}]]></userans><upload><![CDATA[${file_str}]]></upload><path><![CDATA[${this.getPath()}]]></path></smans>`;\n            window.ISSPECIALMODULEUSERXMLCHANGE = 1;\n            this.select('#special_module_user_xml', 'value', userAnsXML);\n            // from onUserAnsChange \n            globalThis.saveUserAnswerInSapper?.({uXml: userAnsXML, ans: \"manual\"});\n            if (window.inNative) window.postMessage(JSON.stringify({userAnsXML, essayPreview: true}), \"*\");\n        }, time);\n    }\n\n    // it removes the file.\n    remove_file(item, eid) {\n        let filename = this.parent(item).querySelector('.filename').innerHTML;\n        if (this.find(eid, '.essay_upload_status li', 'all').length <= 1) this.find(eid, '.essay_upload_status').classList.remove('working_file');\n        this.activate(1);\n        this.ajax({\n            url: essayUploadUrl, \n            data: { \"action\": \"remove_file\", \"file_name\": filename }\n        }).then((data)=> {\n            this.parent(item).remove();\n            this.updateXML(eid);\n            this.activate(0);\n        });\n    }\n\n    // for getting folder name of the s3 of file\n    getForlderName(test_session_uid) {\n        let folder = test_session_uid;\n        if (test_session_uid > 856399 || test_session_uid < 700000) {\n            let last = this.str_pad(test_session_uid % 10000, 4, '0');\n            let first = this.str_pad(Math.floor(test_session_uid / 10000), 1, '0');\n            folder = first + \"/\" + last;\n        }\n        return folder;\n\n    }\n\n    // used in this.getForlderName\n    // it takes three arguments first is string second is length, third is padstring.\n    // it checks if string.length is less than length then is returns the string with padstring and string otherwise it returns string.\n    str_pad(str, length, padstring) {\n        while (str.length < length) {\n            str = padString + str;\n        }\n        return str;\n    }\n\n    /*\n    ** it adds the class ‘h’ to the element have class review and test and after that if it \n    ** is called with passing argument have value then it hides the element have id ‘upload’ and class ‘abort’ \n    ** otherwise shows the element have class ‘abort’ and set the attribute contenteditable \n    ** to true to the element have id ‘essay_edit’ \n    */\n    modeOn(modeType) {\n        this.selectAll('.test, .review', 'addClass', 'h');\n        if (modeType) {\n            this.selectAll('#upload, .abort', 'hide');\n        } else {\n            // jQuery(elemId).find('#upload').show();\n            this.select('#essay_edit').setAttribute('contenteditable', 'true');\n            this.selectAll('.abort', 'show');\n        }\n    }\n}\n","<script>\n    import { beforeUpdate, onMount } from \"svelte\";\n    import {AH, XMLToJSON, onUserAnsChange} from '../helper/HelperAI.svelte';\n    import ItemHelper from '../helper/ItemHelper.svelte';\n    import sunEditor from 'suneditor';\n    import plugins from 'suneditor/src/plugins';\n    import EssayNewReact from './eaasy_new_react.js';\n    import '../helper/sunEditor/src/assets/css/suneditor.css';\n\n    export let xml;\n    export let uxml;\n    export let isReview;\n    export let editorState;\n    let ucEssay;\n    let files;\n    let state = {\n        userans: '',\n        appPath: \"\",\n        essayStr: '',\n        userAns: '',\n        site_url: \"\"\n    };\n    let essay_class = \"working_file\";\n    let eid = \"essayPreviewContainer\";\n    let localEssayData = {};\n    let uAns =\"\";\n    let essayEditor;\n    const headingArray = [{\"font\": \"fontSize 6\",\"text\": \"Heading 1\"}, {\"font\": \"fontSize 5\",\"text\": \"Heading 2\"}, {\"font\": \"fontSize 4\",\"text\": \"Heading 3\"},{\"font\": \"fontSize 3\",\"text\": \"Heading 4\"},{\"font\": \"fontSize 2\",\"text\": \"Heading 5\"},{\"font\": \"fontSize 1\",\"text\": \"Heading 6\"}];\n\n    $: essay_class = isReview ? \"working_file h\" : \"working_file\";\n\n    onMount(()=> {\n        editorState && AH.set(editorState.content_type+\"_refresh\", setEssayContent.bind(this));\n        loadXML(xml, uxml);\n        // Intialize editor plugin\n        initEdit();\n        addTabIndex();\n    });\n\n    function addTabIndex() {\n        var se_menu = AH.selectAll('.se-menu-list');\n        se_menu.forEach(function(curr, index) {\n            let se_menu_list = curr.getElementsByTagName('li');\n            for (var i = 0; i < se_menu_list.length; ++i) {\n                AH.select(se_menu_list[i]).setAttribute('tabindex', 0);\n            }\n        });\n    }\n\n    function initEdit() {\n        essayEditor = sunEditor.create('essay_edit', { \n            height: '300px',\n            value: uAns,\n            width: 'auto',\n            toolbarContainer:\"#essayPreviewToolbar\",\n            placeholder: \"Write text here.\",\n            resizingBar: false,\n            showPathLabel: false,     \n            plugins:plugins,\n            defaultStyle: \"padding-left: 10px\",\n            buttonList: [\n                ['formatBlock'],\n                ['bold', 'italic', 'underline'],\n                ['link'],\n                ['list', 'outdent', 'indent', 'align'],\n                ['removeFormat'],\n            ],\n        });\n        let elemId = '#' + eid;\n        ucEssay = new EssayNewReact(elemId, essayEditor);\n        //ucEssay.essay_ready();\n    }\n\n    function setEssayContent() {\n        console.log(\"set Content\")\n        essayEditor.setContents(uAns);\n    }\n        \n    // it is called when state updated\n    beforeUpdate(()=> {\n        if (xml != state.xml) {\n            state.xml = xml ;\n            console.log(\"Updating from Preview\");\n            loadXML(xml, uxml);\n        }\n    });\n    \n    // its for loading the xml.\n    function loadXML(essayXML, uxml) {\n        let essayUser = (uxml) ? XMLToJSON(uxml) : \"\";\n        essayXML = XMLToJSON(essayXML);\n       // userxml_is_empty = updateAttrToLower(userxml_is_empty);\n        // if(userxml_is_empty) {\n        //     if(!userxml_is_empty.smans) {\n        //         uaxml = \"\";\n        //     }\n        // }\n        // Parsing XMLs\n        try {\n            let essay = essayXML.smxml.default ? essayXML.smxml.default : essayXML.smxml;\n            uAns = essayUser && (essayUser.smans.userans).charCodeAt(0)!=10 ? essayUser.smans.userans : (essay.__cdata !== undefined ? essay.__cdata : '');\n            //self.userAnsXML = $('#special_module_user_xml').val();\n            localEssayData = {\n                userans: uAns,\n                filetypeexts: essay._filetypeexts,\n                limit: essay._limit,\n                type: essay._type == \"5\" ? \"0\" : essay._type,\n                upload: essayUser ? essayUser.smans.upload : \"\",\n                path: essayUser ? essayUser.smans.path : \"\",\n            };\n        } catch(error) {\n            console.log({error, func:'loadXml', file:'EssayPreview.svelte'});\n        }\n    }\n    \n    // its update attributes of user answer xml to lowercase.\n    function updateAttrToLower(data) {\n        let isLower = false;\n        if(data.SMANS) {\n            data.smans = data.SMANS;\n            delete data.SMANS;\n            isLower = true;\n        }\n        return data;\n    }\n    \n    // calls on click of abort\n    function handleClick(e) {\n        ucEssay.remove_file(e.currentTarget, '#' + eid);\n    }\n\n    // calls when review mode is on\n    function setReview() {\n        isReview = true;\n        essayEditor.disabled(); // Disable editing for module\n        ucEssay.modeOn(\"on\");\n    }\n    \n    // calls when review mode is off after on\n    function unsetReview(type) {\n        isReview = false;\n        essayEditor.enabled(); // Enable editing for module\n        if (type != 0) {\n            AH.select('#upload', 'show');\n            AH.select('#upload', 'removeClass', 'h');\n        }\n        ucEssay.modeOn('');\n    }\n</script>\n<main>\n    <p id =\"demo\"></p>\n    <div>\n        {#if localEssayData }\n            <ItemHelper \n                on:setReview = {setReview}\n                on:unsetReview = {unsetReview.bind(this, localEssayData.type)}\n            />\n            <div \n                id={eid} \n                data-filetypeexts={localEssayData.filetypeexts} \n                data-limit={localEssayData.limit} \n                class=\"essay-container m-auto hero-unit\"\n            >\n                <div id=\"essayPreviewToolbar\" class=\"sun-editor\"></div>\n                <textarea id=\"essay_edit\" class=\"text-left editor sun-editor-editable\" ></textarea>\n                <div id=\"upload\" class={window.isReview == true || isReview == true || localEssayData.type == \"0\" ? \"h\" : \"\"}>\n                    <div id=\"drop\">\n                        Drag & Drop Files Here\n                        <div class=\"text-center\" style=\"font-size: 12px;font-weight: normal;position:relative;top:45px; word-wrap:break-word\">You can upload upto {localEssayData.limit} {localEssayData.filetypeexts} files.</div>\n                        <a href=\"#upl\" class=\"essay-btn btn btn-light darkgrey_border\">Browse</a>\n                        <input \n                            type=\"file\" \n                            name=\"upl\" \n                            bind:files \n                            on:change={(event)=> ucEssay.getUploads(files, event)}\n                            id=\"upl\" \n                            multiple=\"multiple\" \n                            style=\"opacity:0.5\"\n                        />\n                    </div>\n                </div>\n                <ul class={localEssayData.type == \"0\" ? \"essay_upload_status text-left h\" : \"essay_upload_status text-left working_file\" } style=\"list-style-type: none;\">\n                    {#if localEssayData.upload != '' }\n                        {#each localEssayData.upload.split(',') as uploaded, index}\n                            <li class=\"working\">\n                                <span class=\"download\">\n                                    <a target=\"_blanks\" href={localEssayData.path + uploaded} title='Download File' class=\"essay_dwl_file\">\n                                        <i class=\"icomoon-file-download\"></i>\n                                    </a>\n                                </span>\n                                <span class=\"filename\">{uploaded}</span>\n                                {#if !isReview}\n                                    <span class=\"abort\" on:click={handleClick}>abort</span>\n                                {/if}\n                            </li>\n                        {/each}\n                    {/if}\n                </ul>\n            </div>\n\n        {/if}\n    </div>\n</main>\n<style>\n    .hero-unit {\n        border: 1px solid #ccc;\n        width: 84%;\n        padding: 18px!important;\n        font-size: 15px!important;\n        margin-bottom: 30px;\n        font-weight: 200;\n        line-height: 30px;\n        color: inherit;\n        background-color: #eeeeee;\n        -webkit-border-radius: 6px;\n        -moz-border-radius: 6px;\n        border-radius: 6px;\n    }\n    .essay_upload_status {\n        margin-top: 10px;\n    }\n    .abort {\n        padding-left: 15px;\n        cursor: pointer;\n    }\n    .essay-btn, #essayfile-button, #editfiles {\n        display: inline-block;\n        padding: 4px 8px;\n        font-size: 12px;\n        line-height: 20px;\n        text-align: center;\n        vertical-align: middle;\n        cursor: pointer;\n        color: #333333;\n        text-shadow: 0 1px 1px rgba(255, 255, 255, 0.75);\n        background-color: #f5f5f5;\n        background-image: -moz-linear-gradient(top, #ffffff, #e6e6e6);\n        background-image: -webkit-gradient(linear, 0 0, 0 100%, from(#ffffff), to(#e6e6e6));\n        background-image: -webkit-linear-gradient(top, #ffffff, #e6e6e6);\n        background-image: -o-linear-gradient(top, #ffffff, #e6e6e6);\n        background-image: linear-gradient(to bottom, #ffffff, #e6e6e6);\n        background-repeat: repeat-x;\n        /* filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ffffffff', endColorstr='#ffe6e6e6', GradientType=0); */\n        border-color: #e6e6e6 #e6e6e6 #bfbfbf;\n        border-color: rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.25);\n        /* filter: progid:DXImageTransform.Microsoft.gradient(enabled = false); */\n        border: 1px solid #cccccc;\n        border-bottom-color: #b3b3b3;\n        -webkit-border-radius: 4px;\n        -moz-border-radius: 4px;\n        border-radius: 4px;\n        -webkit-box-shadow: inset 0 1px 0 rgba(255,255,255,.2), 0 1px 2px rgba(0,0,0,.05);\n        -moz-box-shadow: inset 0 1px 0 rgba(255,255,255,.2), 0 1px 2px rgba(0,0,0,.05);\n        box-shadow: inset 0 1px 0 rgba(255,255,255,.2), 0 1px 2px rgba(0,0,0,.05);\n    }\n    #upload {\n        font-family: 'PT Sans Narrow', sans-serif;\n        background-color: #E0E0E0;\n        background-image: -webkit-linear-gradient(top, #E0E0E0, #E0E0E0);\n        background-image: -moz-linear-gradient(top, #E0E0E0, #E0E0E0);\n        background-image: linear-gradient(top, #E0E0E0, #E0E0E0);\n        width: 100%;\n        /* padding: 30px; */\n        padding: 30px 30px 0;\n        border-radius: 3px;\n        border-collapse: separate;\n        border: 1px solid rgb(204, 204, 204);\n        margin-top: 2px;\n    }\n    #drop {\n        background-color: #EEEEEE;\n        padding: 25px 30px;\n        margin-bottom: 30px;\n        border: 20px solid rgba(0, 0, 0, 0);\n        border-radius: 3px;\n        text-align: center;\n        font-size: 16px;\n        font-weight: bold;\n        color: #7f858a;\n        border: 1px solid #CCCCCC;\n    }\n    /* .can_upload {\n        font-size: 12px;\n        font-weight: 100;\n        position: relative;\n        top: 45px;\n        overflow-wrap: break-word;\n    } */\n    #drop a {\n        /* background-color: #007a96; */\n        padding: 12px 5%;\n        color: #2B2E31;\n        font-size: 14px;\n        border-radius: 2px;\n        cursor: pointer;\n        display: inline-block;\n        margin-top: 12px;\n        margin-bottom: 12px;\n        line-height: 1;\n        text-decoration: none;\n        position: relative;\n        top: 30px;\n    }\n    #drop input {\n        display: none;\n    }\n    .essay-btn {\n        margin-bottom: 15px;\n    }\n    .essay-container {\n        width: 89%;\n    }\n</style>"],"names":["editor","EssayNewReact","JUI","[object Object]","eid","essayEditor","super","this","timer","essay_ready","eidNode","document","querySelector","setTimeout","bind","event","find","target","parentNode","click","selectAll","forEach","_this","dataset","onChange","contents","core","updateXML","onKeyDown","e","keyCode","innerHTM","ua","window","navigator","userAgent","ms_old_ie","indexOf","ms_new_ie","listen","path","getAttribute","removeAttribute","open","select","setAttribute","remove","test_session_uid","getForlderName","user_guid","media","getPath","console","log","allExt","Array","prototype","call","_f","form_data","FormData","append","file_ext","name","split","tpl","parseHtml","action","actionData","insert","formatFileSize","size","length","showmsg","findInArray","toLowerCase","essay_sendFile_ToServer","status","bytes","toFixed","formData","activate","tsuid","uploadURL","essayUploadUrl","ajax","url","dataType","contentType","processData","cache","data","then","display","catch","exts","ext_arr","val","i","_ext","push","essayID","time","content","clearTimeout","getContents","file_str","innerHTML","inNative","getHeight","userAnsXML","ISSPECIALMODULEUSERXMLCHANGE","globalThis","saveUserAnswerInSapper","uXml","ans","postMessage","JSON","stringify","essayPreview","item","filename","parent","classList","file_name","folder","last","str_pad","Math","floor","str","padstring","padString","modeType","ctx","limit","filetypeexts","type","upload","isReview","ucEssay","files","xml","uxml","editorState","state","userans","appPath","essayStr","userAns","site_url","localEssayData","uAns","setEssayContent","setContents","loadXML","essayXML","essayUser","XMLToJSON","essay","smxml","default","smans","charCodeAt","undefined","__cdata","_filetypeexts","_limit","_type","error","func","file","onMount","AH","set","content_type","sunEditor","create","height","value","width","toolbarContainer","placeholder","resizingBar","showPathLabel","plugins","defaultStyle","buttonList","curr","index","se_menu_list","getElementsByTagName","beforeUpdate","remove_file","currentTarget","disabled","modeOn","enabled","getUploads"],"mappings":"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"}