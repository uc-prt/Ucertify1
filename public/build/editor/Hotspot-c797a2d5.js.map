{"version":3,"file":"Hotspot-c797a2d5.js","sources":["../../../clsSMHotspot/HotspotDrawingScript.js","../../../clsSMHotspot/Hotspot_authoringScript.js","../../../clsSMHotspot/Hotspot.svelte"],"sourcesContent":["import JUI from '../src/libs/javscript_helper/JUI.js';\r\nfunction Point(a, b) {\r\n    if (true === isNaN(Number(a))) {\r\n        this.x = 0;\r\n    } else {\r\n        this.x = a;\r\n    }\r\n    if (true === isNaN(Number(b))) {\r\n        this.y = 0;\r\n    } else {\r\n        this.y = b;\r\n    }\r\n    return {\r\n        \"X\": this.x,\r\n        \"Y\": this.y\r\n    };\r\n}\r\nconst JS = new JUI();\r\nexport default class DooScribPlugin {\r\n\tconstructor(options) {\r\n\t\tthis.prevPoint = undefined;\r\n\t\tthis.defaultOptions = {\r\n\t\t\ttarget: \"\",\r\n\t\t\tpenSize:1,\r\n\t\t\twidth: options.width,\r\n\t\t\theight: options.height,\r\n\t\t\tcssClass: '',\r\n\t\t\tonClick: (e)=> {},\r\n\t\t\tonMove: (e)=> {},\r\n\t\t\tonPaint: (e)=> {},\r\n\t\t\tonRelease: (e)=> {}\r\n\t\t};\r\n\t\tthis.penWidth = 2;\r\n\t\tthis.drawing = false;\r\n\t\tthis.cap = 'round';\r\n\t\tthis.ID = 'dooScribCanvas' + Math.floor((Math.random()*100) + 1);\r\n\t\tthis.drawingSurface = \"\";\r\n\t\tif (options) this.Settings = {...this.defaultOptions, ...options};\r\n\t\tif (true === isNaN(this.Settings.height)) {\r\n\t\t\tthis.Settings.height = 100;\r\n\t\t}\r\n\t\tif (true === isNaN(this.Settings.width)){\r\n\t\t\tthis.Settings.width = 100;\r\n\t\t}\r\n\r\n\t\tthis.init();\r\n\t}\r\n\r\n\tinit() {\r\n\t\tlet _this = this.Settings.target;\r\n\t\tif (_this) {\r\n\t\t\tif (_this.getAttribute('id') == \"hptmain0\")  JS.empty(_this);\r\n\t\t\tJS.insert(_this, `<canvas id='${this.ID}' tabindex='0' class='relative ${this.Settings.cssClass}' type='${this.Settings.type}' correctans='${this.Settings.correctans}' userans=''  height='${this.Settings.height}' width='${this.Settings.width}'></canvas>`, 'beforeend');\r\n\t\t    this.penSize(this.Settings.penSize);\r\n\t\t    this.drawingSurface = document.getElementById(this.ID).getContext('2d');\r\n\t\t    this.drawingSurface.lineWidth = this.penSize();\r\n\t\t    this.drawingSurface.lineCap = this.cap;\r\n\t\t    if (false === this.hasTouch()) {\r\n\t\t        document.getElementById(this.ID).addEventListener('mousedown', this.clickDown.bind(this), true);\r\n\t\t        document.getElementById(this.ID).addEventListener('mousemove', this.moved.bind(this), true);\r\n\t\t        document.getElementById(this.ID).addEventListener('mouseup', this.clickUp.bind(this), true);\r\n\t\t    }\r\n\t\t    else {\r\n\t\t        document.getElementById(this.ID).addEventListener('touchstart', this.clickDown.bind(this), true);\r\n\t\t        document.getElementById(this.ID).addEventListener('touchmove', this.moved.bind(this), true);\r\n\t\t        document.getElementById(this.ID).addEventListener('touchend', this.clickUp.bind(this), true);\r\n\t\t    }\r\n\t\t} else {\r\n\t\t\tconsole.error(\"Target not defined\");\r\n\t\t}\r\n\t}\r\n\r\n\tnormalizeTouch(e) {\r\n\t\tif (true === this.hasTouch()) {\r\n\t\t\tlet st = window.scrollY;\r\n\t\t\tif (['touchstart', 'touchmove'].indexOf(e.type) > -1) {\r\n\t\t\t\te.clientX = e.targetTouches[0].pageX;\r\n\t\t\t\te.clientY = e.targetTouches[0].pageY - st;\r\n\t\t\t}\r\n\t\t\tif (['touchend'].indexOf(e.type) > -1) {\r\n\t\t\t\te.clientX = e.changedTouches[0].pageX;\r\n\t\t\t\te.clientY = e.changedTouches[0].pageY - st;\r\n\t\t\t   }\r\n\t\t}\r\n\t\treturn e;\r\n\t}\r\n\r\n\tclickDown(e) {\r\n\t\tif (true === this.isDrawing()) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (!e) {\r\n\t\t\te = window.event;\r\n\t\t}\r\n\t\tif (true === this.hasTouch()) {\r\n\t\t\te.preventDefault();\r\n\t\t\te = this.normalizeTouch(e);\r\n\t\t}\r\n\t\tlet offset = JS.offset(this.Settings.target);\r\n\t\tlet st = window.scrollY;\r\n\t\tlet pt = new Point(e.clientX - offset.left, e.clientY - (offset.top-st));\r\n\t\tthis.prevPoint = pt;\r\n\t\tthis.drawing = true;\r\n\t\tthis.Settings.onClick(pt);\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\tmoved(e) {\r\n\t\tif (!e) {\r\n\t\t\te = window.event;\r\n\t\t}\r\n\t\tif (true === this.hasTouch()) {\r\n\t\t\te.preventDefault();\r\n\t\t\te = this.normalizeTouch(e);\r\n\t\t}\r\n\t\tvar offset = JS.offset(this.Settings.target);\r\n\t\tvar st = window.scrollY;\r\n\t\tvar pt = new Point(e.clientX - offset.left, e.clientY - (offset.top-st));\r\n\t\tif (true === this.isDrawing()) {\r\n\t\t\tthis.drawLine(this.prevPoint.X, this.prevPoint.Y, pt.X, pt.Y);\r\n\t\t\tthis.prevPoint = pt;\r\n\t\t\tthis.Settings.onPaint(pt);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.Settings.onMove(pt);\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\t\r\n\tclickUp(e) {\r\n\t\tif (false === this.isDrawing()) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (true === this.hasTouch()) {\r\n\t\t\te.preventDefault();\r\n\t\t\te = this.normalizeTouch(e);\r\n\t\t}\r\n\t\tlet offset = JS.offset(this.Settings.target);\r\n\t\tlet st = window.scrollY;\r\n\t\tlet pt = new Point(e.clientX - offset.left, e.clientY - (offset.top-st));\r\n\t\tthis.Settings.onRelease(pt);\t\t    \r\n\t\tthis.drawing = false;\r\n\r\n\t\treturn false;\t\t\t\r\n\t}\r\n\r\n\thasTouch() {\r\n\t\treturn 'ontouchstart' in window;\r\n\t}\r\n\r\n\tpenSize (e) {\r\n\t\tif (undefined !== e){\r\n\t\t\tif (false === isNaN(Number(e))) {\r\n\t\t\t\tthis.penWidth = e;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this.penWidth;\r\n\t}\r\n\r\n\tisDrawing () {\r\n\t\tif (this.Settings.editable)\r\n\t\t\treturn this.drawing;\r\n\t}\r\n\r\n\tlineCap(e) {\r\n\t\tif (undefined !== e) {\r\n\t\t\tswitch(e){\r\n\t\t\t\tcase 'butt':\r\n\t\t\t\tcase 'round':\r\n\t\t\t\tcase 'square':\r\n\t\t\t\t\tthis.cap = e;\r\n\t\t\t\t\tbreak; \r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this.cap;\r\n\t}\r\n\r\n\t//window.color = \"#000000\";\r\n\tlineColor(e) {\r\n\t\tif(undefined !== e) {\r\n\t\t\tlet a = JS.parseHtml(\"<div id='stub' style='backgroundColor:white'></div>\");\r\n\t\t\ta.style.backgroundColor = e;\r\n\t\t\tlet b = a.style.backgroundColor\r\n\t\t\tif ((undefined !== b) && ('' !== b)) {\r\n\t\t\t\twindow.color = e;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn window.color;\r\n\t}\r\n\r\n\tcontext() {\r\n\t\treturn this.drawingSurface;\r\n\t}\r\n\r\n\tclearSurface() {\r\n\t\tlet width = JS.find(document, 'canvas').getAttribute('width').replace('px','');\r\n\t\tlet height = JS.find(document, 'canvas').getAttribute('height').replace('px','');\r\n\t\tthis.drawingSurface.clearRect(0, 0,width,height);\r\n\t}\r\n\t\r\n\tdrawLine(fromX, fromY, toX, toY) {\r\n\t\tif ((undefined !== fromX) && (undefined !== fromY) && (undefined !== toX) && (undefined !== toY)) {\r\n\t\t\tif((false === isNaN(Number(fromX))) && (false === isNaN(Number(fromY))) && (false === isNaN(Number(toX))) && (false === isNaN(Number(toY)))) {\r\n\t\t\t\tthis.drawingSurface.lineCap = this.cap;\t    \r\n\t\t\t\tthis.drawingSurface.strokeStyle = window.color;\t\t\r\n\t\t\t\tthis.drawingSurface.lineWidth = this.penWidth;\r\n\t\t\t\tthis.drawingSurface.beginPath();\t\t\t\t    \r\n\t\t\t\tthis.drawingSurface.moveTo(fromX, fromY);\t\t\t\t\t\r\n\t\t\t\tthis.drawingSurface.lineTo(toX, toY);\r\n\t\t\t\tthis.drawingSurface.stroke();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}","import JUI from '../src/libs/javscript_helper/JUI.js';\r\nconst JS = new JUI();\r\nexport default class HotspotAuthScript {\r\n\tconstructor() {\r\n\t\tthis.count = 0;\r\n\t\tthis.drawstr = '';\r\n\t}\r\n\r\n\t// elemModal(type, _this, key) {\r\n\t// \tvar htmlparent = \"#hptmain\";\r\n\t// \tvar pos = [];\r\n\t// \t$('#authoring-modal .modal-body>.h').hide();\r\n\t// \t$('.addElement').unbind('click').bind(\"click\", ()=>{\r\n\t// \t\tthis.updateElem(type, _this, key)\r\n\t// \t});\r\n\t// \tswitch(type) {\r\n\t// \t\tcase \"div\":\r\n\t// \t\t\t$('#authoring-modal .title').text('Draggable - '+key);\r\n\t// \t\t\t$('#authoring-modal .div').show();\r\n\t// \t\t\t$('#authoring-modal #drag-top').val(pos[0]);\r\n\t// \t\t\t$('#authoring-modal #drag-left').val(pos[1]);\r\n\t// \t\t\tbreak;\r\n\t// \t\tcase \"base\":\r\n\t// \t\t\t$('#authoring-modal .title').text('Base');\r\n\t// \t\t\t$('#authoring-modal .base').show();\r\n\t// \t\t\tbreak;\r\n\t// \t}\r\n\t// \t$('#authoring-modal').modal('show');\r\n\t// \t$('#authoring-modal .events:visible li:eq(0)').click();\r\n\t// \tvar attributes = $('[id=\"'+key+'\"]').data('attributes');\r\n\t// \tsetTimeout(function(){\r\n\t// \t\tfor(var i=0; i<attributes.length; i++)\r\n\t// \t\t{\r\n\t// \t\t\tvar t = $('#authoring-modal .h:visible [name=\"'+attributes[i]['name']+'\"]');\r\n\t// \t\t\tt.val(attributes[i]['value']);\r\n\t// \t\t}\r\n\t// \t}, 300);\r\n\t// }\r\n\r\n\tupdateElem(type, _this, key, ui,xml) {\r\n\t\tlet attributes = JS.serializeArray(JS.find('#authoring-modal','.h', 'visible'), 'input');\r\n\t\tlet bgimg = \"\", attr = [], wd, hd, tp, lt, where, st;\r\n\t\tlet hp_image = JS.select('#im').getBoundingClientRect();\r\n\t\tif (typeof(ui) !== \"undefined\") {\r\n\t\t\tattributes = JS.select('#'+key).dataset['attributes'];\r\n\t\t\tif(attributes) {\r\n\t\t\t\tattributes = JSON.parse(attributes);\r\n\t\t\t}\r\n\r\n\t\t\tif(!attributes) {\r\n\t\t\t\tlet attributeArr = [];\r\n\t\t\t\tattributeArr[0] = {name:'id',value:key};\r\n\t\t\t\tattributeArr[1] = {name:'type', value: 'hotspot'};\r\n\t\t\t\tattributeArr[2] = {name:'top', value: parseInt(JS.select('#'+key).style.top.split('px')[0]) };\r\n\t\t\t\tattributeArr[3] = {name:'left', value: parseInt(JS.select('#'+key).style.left.split('px')[0]) };\r\n\t\t\t\tattributeArr[4] = {name:'width', value: parseInt(JS.select('#'+key).style.width.split('px')[0]) };\r\n\t\t\t\tattributeArr[5] = {name:'height', value: parseInt(JS.select('#'+key).style.height.split('px')[0]) };\r\n\t\t\t\tattributes = attributeArr;\r\n\t\t\t}\r\n\t\t\tattributes.forEach((_data, index, _orginalArr)=> {\r\n\t\t\t\tswitch(_data.name) {\r\n\t\t\t\t\tcase \"width\":\r\n\t\t\t\t\t\t_data.value = ui.clientWidth;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"height\":\r\n\t\t\t\t\t\t_data.value = ui.clientHeight;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"top\":\r\n\t\t\t\t\t\t_data.value = (+(_data.value)  + _this.offsetY) - (ui.clientHeight/2);\r\n\t\t\t\t\t\tif(_data.value < 0) {\r\n\t\t\t\t\t\t\t_data.value = 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif ((_data.value + ui.clientHeight) > hp_image.height) {\r\n\t\t\t\t\t\t\t_data.value = hp_image.height - ui.clientHeight;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"left\":\r\n\t\t\t\t\t\t_data.value = (+(_data.value) + _this.offsetX) - (ui.clientWidth/2);\r\n\t\t\t\t\t\tif(_data.value < 0) {\r\n\t\t\t\t\t\t\t_data.value = 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif ((_data.value + ui.clientWidth) > hp_image.width) {\r\n\t\t\t\t\t\t\t_data.value = hp_image.width - ui.clientWidth;;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\t_orginalArr[index] = _data;\r\n\t\t\t});\r\n\t\t}\r\n\t\tattributes.forEach((value, index)=> {\r\n\t\t\tif( value.name == \"width\")  wd = value.value;\r\n\t\t\tif (value.name == \"height\") hd = value.value;\r\n\t\t\tif (value.name == \"top\")    tp = value.value;\r\n\t\t\tif (value.name == \"left\")   lt = value.value;\r\n\t\t\tif (value.name == \"bgimg\" && value.value.trim() != \"\") {\r\n\t\t\t\tbgimg = JS.select('#hptmain').getAttribute('path') + value.value.trim();\r\n\t\t\t}\r\n\t\t\tattr[value.name] = value.name;\r\n\t\t});\r\n\t\tswitch (type) {\r\n\t\t\tcase \"div\":\r\n\t\t\t\twhere = `[id=\"${key}\"]`;\r\n\t\t\t\tJS.select(`[id=\"${key}\"]`, 'css', {width: wd+'px', height: hd+'px', top: tp+'px', left: lt+'px'}).dataset[\"attributes\"] = JSON.stringify(attributes);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"base\":\r\n\t\t\t\twhere = \"hptmain\";\r\n\t\t\t\tJS.select('#hptmain').dataset[\"attributes\"] = JSON.stringify(attributes);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\tif (type == \"base\") {\r\n\t\t\tlet bgholder = (key=='hptmain') ? '#hptmain' : '#hptdraw';\r\n\t\t\t\r\n\t\t\tif (bgimg != \"\") {\r\n\t\t\t\tlet img = new Image();\r\n\t\t\t\timg.src = bgimg;\r\n\t\t\t\tlet img_ext = img.src.substr((img.src.lastIndexOf('.') + 1));\r\n\t\t\t\tsetTimeout(()=> {\r\n\t\t\t\t\timg.width = img.width > 0 ? img.width : \"600\";\r\n\t\t\t\t\timg.height = img.height > 0 ? img.height : \"250\";\r\n\t\t\t\t\tJS.select('#option-toolbar', 'css', {width: img.width});\r\n\t\t\t\t\tif (img_ext != 'gif') {\r\n\t\t\t\t\t\tif (JS.selectAll(bgholder + '>img').length > 0) {\r\n\t\t\t\t\t\t\tJS.select(bgholder, 'css', {width: img.width, height: img.height});\r\n\t\t\t\t\t\t\tJS.selectAll(bgholder + '>img','attr', {src: bgimg});\r\n\t\t\t\t\t\t} else if(key == 'hptdraw') {\r\n\t\t\t\t\t\t\tJS.find(bgholder, 'canvas', {action: 'attr',actionData: {width: img.width, height: img.height} });\r\n\t\t\t\t\t\t\tJS.selectAll(JS.siblings(bgholder), 'css', {width: img.width});\r\n\t\t\t\t\t\t\tJS.select(bgholder,'css', {width: img.width, height: img.height, backgroundImage:'url(' + bgimg + ')'});\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tJS.insert(JS.select(bgholder, 'css', {width:img.width, height:img.height}), '<img src=\"'+bgimg+'\" />', 'beforebegin');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}, 100);\r\n\t\t\t} else {\r\n\t\t\t\tif (JS.selectAll(bgholder + '>img').length > 0) {\r\n\t\t\t\t\tJS.select(bgholder, 'css',{width: \"600px\", height: \"250px\"})\r\n\t\t\t\t\tJS.select(bgholder + '>img', 'remove');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (type == \"div\") {\r\n\t\t\treturn this.updateXML(type, where, attributes,tp,lt,xml);\r\n\t\t}\r\n\t\tif (img_ext != 'gif' && typeof img != \"undefined\"){\r\n\t\t\treturn this.updateXML(type, where, attributes,img.width,img.height,xml);\r\n\t\t} else {\r\n\t\t\tJS.alert(\"Please Do not use Gif Image!!!\");\r\n\t\t}\r\n\t}\r\n\r\n\tdrawOnCanvasAuth(el,cord,color) {\r\n\t\tlet c = document.getElementById(el);\r\n\t\tlet ctx = c.getContext(\"2d\");\r\n\t\tlet len = Object.keys(cord).length;\r\n\t\tif (cord!='') {\r\n\t\t\tfor (let i = 1; i <= len ; i++) {\r\n\t\t\t\tfor (let j = 0; j <= cord[i]['x'].length; j++) {\r\n\t\t\t\t\tctx.beginPath();              \r\n\t\t\t\t\tctx.lineWidth   = \"4\";\r\n\t\t\t\t\tctx.strokeStyle = window.color;\r\n\t\t\t\t\tctx.moveTo(cord[i]['x'][j], cord[i]['y'][j]);\r\n\t\t\t\t\tctx.lineTo(cord[i]['x'][j+1], cord[i]['y'][j+1]);\r\n\t\t\t\t\tctx.stroke();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tupdateXML(type, where, attributes,img_w,img_h,xml) {\r\n\t\tlet xmlDom = JS.parseHtml(xml);\r\n\t\tlet attr = '', val = '', insert;\r\n\t\tif (where == \"hptmain\") {\r\n\t\t\tinsert = xmlDom;\r\n\t\t} else {\r\n\t\t\tinsert = JS.find(xmlDom, where);\r\n\t\t}\r\n\t\tif (insert && img_w > 0 && img_h > 0) {\r\n\t\t\tinsert.setAttribute(\"width\", img_w);\r\n\t\t\tinsert.setAttribute(\"height\", img_h);\r\n\t\t}\r\n\t\tif (attributes) {\r\n\t\t\tfor (let _tempAttr of attributes ) {\r\n\t\t\t\tif (_tempAttr.value !== \"\") {\r\n\t\t\t\t\tinsert && insert.setAttribute(_tempAttr.name, _tempAttr.value);\r\n\t\t\t\t\tif (_tempAttr.name=='type') insert && insert.setAttribute(_tempAttr.value, 'hotspot');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tinsert.removeAttribute(_tempAttr.name);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn formatXml(xmlDom.outerHTML);\r\n\t\t//\t$('#special_module_xml').val(formatXml(xmlDom[0].outerHTML));\r\n\t} \r\n}","<script>\r\n/**\r\n *  File Name   : Hotspot.js\r\n *  Description : Container for all Hotspot Authoring Module\r\n *\tAuthor      : Pradeep Yadav\r\n    *  Version     : 1.0\r\n    *  Package     : svelte_items/svelte\r\n    *  Last updated : 01 JAN 2021\r\n    */\r\n\r\n    import { Button, Dialog, Checkbox, Snackbar } from 'svelte-mui/src';\r\n    import {AH, JSONToXML, XMLToJSON} from '../helper/HelperAI.svelte';\r\n    import {Draggable} from '../src/libs/javscript_helper/JUI.js';\r\n    import DooScribPlugin from './HotspotDrawingScript.js';\r\n    import HotspotAuthScript from './Hotspot_authoringScript.js';\r\n    import l from '../src/libs/editorLib/language';\r\n    import { writable } from 'svelte/store';\r\n    import { onMount } from 'svelte';\r\n    export let xml;\r\n    export let getChildXml;\r\n\r\n    const authScript = new HotspotAuthScript();\r\n    // variable declaration\r\n    let count = 0;\r\n    let drawstr = ''; \r\n    let bgImgHeight = ''; \r\n    let bgImgWidth = ''; \r\n    let bgImgPath = '//s3.amazonaws.com/jigyaasa_content_static/'; \r\n    let hotAreaTop = ''; \r\n    let hotAreaHeight = ''; \r\n    let hotAreaWidth = ''; \r\n    let hotAreaLeft = '';\r\n    let cmTime = {};\r\n    let defaultXml = [], moduleArr = [], imgWidth = '', imgHeight = '', correct = '';\r\n    defaultXml[1] = '<smxml xmlns=\"http://www.w3.org/1999/xhtml\" type=\"4\" name=\"HotSpot\" bgimg=\"\" path=\"\" width=\"600\" height=\"250\"><div id=\"ID0\" type=\"textclick\" top=\"10\" left=\"20\" width=\"30\" height=\"50\"><!--[CDATA[Most cheetahs live in the wilds of Africa. %{There are also some in Iran and northwestern Afghanistan.}% The cheetahs head is smaller than the leopards, and its body is longer. %{This cat is built for speed.}% Its legs are much longer than the leopard, allowing it to run at speeds of up to 70 miles per hour! This incredible ability helps the cheetahs catch their dinner, which is usually an unfortunate antelope. A cheetah spots are simply black spots, not rosettes or circles.]]--></div></smxml>';\r\n    defaultXml[2] = '<smxml xmlns=\"http://www.w3.org/1999/xhtml\" type=\"4\" name=\"HotSpot\" bgimg=\"\" path=\"\" width=\"600\" height=\"250\"><div id=\"ID0\" type=\"textselect\" top=\"10\" left=\"20\" width=\"30\" height=\"50\"><!--[CDATA[Most cheetahs live in the wilds of Africa. %{There are also some in Iran and northwestern Afghanistan.}% The cheetahs head is smaller than the leopards, and its body is longer. %{This cat is built for speed.}% Its legs are much longer than the leopard, allowing it to run at speeds of up to 70 miles per hour! This incredible ability helps the cheetahs catch their dinner, which is usually an unfortunate antelope. A cheetah spots are simply black spots, not rosettes or circles.]]--></div></smxml>';\r\n    defaultXml[3] = '<smxml xmlns=\"http://www.w3.org/1999/xhtml\" type=\"4\" name=\"HotSpot\" bgimg=\"star_topology_000dlj.jpg\" path=\"\" width=\"600\" height=\"250\"><div id=\"ID0\" type=\"imagehighlight\" top=\"10\" left=\"20\" width=\"30\" height=\"50\"><!--[CDATA[]]--></div></smxml>';\r\n    defaultXml[4] = '<smxml xmlns=\"http://www.w3.org/1999/xhtml\" type=\"4\" name=\"HotSpot\" bgimg=\"star_topology_000dlj.jpg\" path=\"\" width=\"600\" height=\"250\"><div id=\"ID0\" type=\"hotspot\" top=\"172\" left=\"220\" width=\"112\" height=\"80\"><!--[CDATA[]]--></div></smxml>';\r\n\r\n    // for module type indentification\r\n    moduleArr[\"1\"] = \"textclick\";\r\n    moduleArr[\"2\"] = \"textselect\";\r\n    moduleArr[\"3\"] = \"imagehighlight\";\r\n    moduleArr[\"4\"] = \"hotspot\";\r\n    moduleArr[\"textclick\"] = \"1\";\r\n    moduleArr[\"textselect\"] = \"2\";\r\n    moduleArr[\"imagehighlight\"] = \"3\";\r\n    moduleArr[\"hotspot\"] = \"4\";\r\n    let message = '';\r\n    let state = {};\r\n    let hdd =  writable({\r\n            xml: '',\r\n            openImg: false,\r\n            openDrag: false,\r\n            bgImg: '',\r\n            snackback: false,\r\n            valueMultiple: '1',\r\n            cdata: '',\r\n            bgImgWidth: \"600px\",\r\n            bgImgHeight: \"360px\",\r\n            alt: \"\",\r\n            imgheight: \"\",\r\n            imgwidth: \"\",\r\n            hotBorder: \"\",\r\n            hotBorderColor: \"\",\r\n            lineColor: \"\",\r\n            image_url: \"\"\r\n        });\r\n    const unsubscribe = hdd.subscribe((items)=> {\r\n        state = items;\r\n    });\r\n    // this will added the file in the script before rendering  \r\n    onMount(()=> {\r\n        AH.createLink(window.itemUrl + \"clsSMHotspot/css/hotspot.min.css\", {preload: true});\r\n        didMount();\r\n    })\r\n\r\n    // call just after rendering\r\n    function didMount() {\r\n        state.xml =  xml;\r\n        // here it converts the xml to json using the function XMLToJSON\r\n        let newXml = XMLToJSON(xml);\r\n        if (newXml) {\r\n            // checking for the type if in xml there is any type given or not if not then assign it hotspot type\r\n            newXml.smxml.div._type = (newXml.smxml.div._type) ? newXml.smxml.div._type : 'hotspot';\r\n\r\n            state.valueMultiple = moduleArr[newXml.smxml.div._type];\r\n\r\n            // parsing the xml according to the type\r\n            switch (moduleArr[newXml.smxml.div._type]) {\r\n                case \"1\": \r\n                case \"2\": parseXmlForText(newXml); break;\r\n                case \"3\": parseXmlForDraw(newXml); break;\r\n                case \"4\": { parseXML(newXml); bindKey(); } break;\r\n            }\r\n        }\r\n        // tinyMCE Plugin\r\n        tinyMCE.PluginManager.add('res', function (editor) {\r\n            editor.addMenuItem('resp', {\r\n                text: \"Add Token\",\r\n                id: \"addToken\",\r\n                onclick: function () {\r\n                    addToken();\r\n                },\r\n                context: 'insert',\r\n                prependToContext: true\r\n            });\r\n        });\r\n        initEditor();\r\n        AH.listen(document, 'mousedown', '.draggable', setData);\r\n        cmTime = {};\r\n        AH.listen(document, 'touchstart', '.tinymce-editor-response', ()=> {\r\n            cmTime.s = new Date().getTime();\r\n        })\r\n        AH.listen(document, 'touchend', '.tinymce-editor-response', ()=> {\r\n            cmTime.e = new Date().getTime() - cmTime.s;\r\n            if (cmTime.e / 1000 > 1) {\r\n                addToken();\r\n                cmTime = {};\r\n            }\r\n        });\r\n\r\n        // binding the event for the image upload dialog\r\n        AH.listen(document, \"click\", \"#upload_media\", ()=> {\r\n            //AH.getBS(\"#modal-media-upload\", 'Modal').show();\r\n            window.setImage(\"backgroundImage\");\r\n        });\r\n\r\n        AH.bind(document, 'click', ()=> {\r\n            state.image_url = bgImgPath + '' + AH.select('#backgroundImage').value;\r\n        });\r\n    }\r\n\r\n    // for warning purpose\r\n    function handleWarning() {\r\n        let height_value = AH.select('#dragHeight').value;\r\n        let height_integer_value = parseInt(height_value);\r\n        let width_value = AH.select('#dragWidth').value;\r\n        let width_integer_value = parseInt(width_value);\r\n        let top_value = AH.select('#dragTop').value;\r\n        let top_integer_value = parseInt(top_value);\r\n        let left_value = AH.select('#dragLeft').value;\r\n        let left_integer_value = parseInt(left_value);\r\n        let bgHeight_data = parseInt(bgImgHeight);\r\n        let bgWidth_data = parseInt(bgImgWidth);\r\n        if (isNaN(Number(height_value))) {\r\n            AH.showmsg('Only numeric value accepted.');\r\n            AH.select('#dragHeight').focus();\r\n            return false;\r\n        } else {\r\n            if (isNaN(height_integer_value)) {\r\n                AH.showmsg('Only numeric value accepted.');\r\n                AH.select('#dragHeight').focus();\r\n                return false;\r\n            } else {\r\n                if ((height_integer_value > parseInt((bgHeight_data / 2))) || (height_integer_value < 32)) {\r\n                    AH.showmsg('Height must be greater than or equal to 32 and less than or equal to ' + parseInt((bgHeight_data / 2)));\r\n                    AH.select('#dragHeight').focus();\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (isNaN(Number(width_value))) {\r\n            AH.showmsg('Only numeric value accepted.');\r\n            AH.select('#dragWidth').focus();\r\n            return false;\r\n        } else {\r\n            if (isNaN(width_integer_value)) {\r\n                AH.showmsg('Only numeric value accepted.');\r\n                AH.select('#dragWidth').focus();\r\n                return false;\r\n            } else {\r\n                if ((width_integer_value > parseInt((bgWidth_data / 2))) || (width_integer_value < 32)) {\r\n                    AH.showmsg('Width must be greater than or equal to 32 and less than or equal to ' + parseInt((bgWidth_data / 2)));\r\n                    AH.select('#dragWidth').focus();\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (isNaN(Number(top_value))) {\r\n            AH.showmsg('Only numeric value accepted.');\r\n            AH.select('#dragTop').focus();\r\n            return false;\r\n        } else {\r\n            if (isNaN(top_integer_value)) {\r\n                AH.showmsg('Only numeric value accepted.');\r\n                AH.select('#dragTop').focus();\r\n                return false;\r\n            } else {\r\n                if ((top_integer_value > (bgHeight_data - height_integer_value)) || (top_integer_value < 0)) {\r\n                    AH.showmsg('Top value must be greater than or equal to 0 and less than or equal to ' + (bgHeight_data - height_integer_value));\r\n                    AH.select('#dragTop').focus();\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (isNaN(Number(left_value))) {\r\n            AH.showmsg('Only numeric value accepted.');\r\n            AH.select('#dragLeft').focus();\r\n            return false;\r\n        } else {\r\n            if (isNaN(left_integer_value)) {\r\n                AH.showmsg('Only numeric value accepted.');\r\n                AH.select('#dragLeft').focus();\r\n                return false;\r\n            } else {\r\n                if ((left_integer_value > (bgWidth_data - width_integer_value)) || (left_integer_value < 0)) {\r\n                    AH.showmsg('Left value must be greater than or equal to 0 and less than or equal to ' + (bgWidth_data - width_integer_value));\r\n                    AH.select('#dragLeft').focus();\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    // \tit is called in case of text and token highlight to add token\r\n    function addToken() {\r\n        // getting the selected text in content variable\r\n        let content = tinyMCE.activeEditor.selection.getContent({ format: 'raw' });\r\n\r\n        // Replacing the content to add style on it\r\n        content = content.replace(content, '<span data-type=\"select\" class=\"alert alert-info\" cursor=\"pointer\" style=\"padding: 5px;outline: none;line-height:40px;\" contentEditable=\"true\">' + content + '</span>');\r\n\r\n        // sett the content\r\n        tinyMCE.activeEditor.selection.setContent(content);\r\n\r\n        // update the cdata \r\n        setData();\r\n    }\r\n\r\n    // this function init the tinymce editor\r\n    function initEditor() {\r\n        tinymce.init({\r\n            selector: '.tinymce-editor-response',\r\n            inline: true,\r\n            theme: 'modern',\r\n            min_width: 100,\r\n            resize: true,\r\n            menubar: false,\r\n            toolbar: false,\r\n            elementpath: false,\r\n            statusbar: false,\r\n            force_br_newlines: true,\r\n            remove_trailing_brs: true,\r\n            forced_root_block: false,\r\n            paste_as_text: true,\r\n            //extended_valid_elements : 'input[onChange|id|name|class|style|correctAns|userAns],div[class|style],span[id|contentEditable|class|style]',\r\n            extended_valid_elements: 'span[onClick|contentEditable]',\r\n            valid_elements: \"*[*]\",\r\n            extended_valid_elements: 'uc:syntax,uc:ref',\r\n            custom_elements: 'uc:syntax,~uc:ref',\r\n            plugins: [\"res contextmenu paste\"],\r\n            //toolbar1: \"response\",\r\n            contextmenu: \"link resp\"\r\n        });\r\n    }\r\n\r\n    // for parsing the xml\r\n    function parseXML(QXML) {\r\n        state.hotBorder = QXML.smxml.div._border;\r\n        state.hotBorderColor = QXML.smxml.div._bordercolor\r\n        state.bgImg = QXML.smxml._bgimg;\r\n        \r\n        bgImgHeight = QXML.smxml._height + 'px'; // Image Height\r\n        state.alt = QXML.smxml._alt;\r\n        bgImgWidth = QXML.smxml._width + 'px'; // Image Width\r\n        hotAreaWidth = QXML.smxml.div._width + 'px'; // draggable area width\r\n        hotAreaHeight = QXML.smxml.div._height + 'px'; // draggable area height\r\n        hotAreaLeft = (parseInt(QXML.smxml.div._left) + 4) + 'px'; // draggable area left\r\n        hotAreaTop = (parseInt(QXML.smxml.div._top) + 2) + 'px'; // draggable area top\r\n        let image = new Image();\r\n        image.src = bgImgPath + QXML.smxml._bgimg;\r\n        image.onload = function () {\r\n            bgImgHeight = this.height + 'px';\r\n            bgImgWidth = this.width + 'px';\r\n            imgHeight = (QXML.smxml.div._imgheight) ? QXML.smxml.div._imgheight + 'px' : \"auto !important\";\r\n            imgWidth = (QXML.smxml.div._imgwidth) ? QXML.smxml.div._imgwidth + 'px' : \"auto !important\";\r\n            state.imgwidth = imgWidth;\r\n            state.imgheight = imgHeight;\r\n            AH.select('#hptmain', 'css', { 'height': bgImgHeight, 'width': bgImgWidth });\r\n        };\r\n        AH.select('#hptmain', 'toggleClass', 'd-none');\r\n        AH.selectAll('.drawImage,#text0', 'hide');\r\n        AH.find(document, 'canvas', {action: 'remove'});\r\n        documentReady();\r\n    }\r\n    // for parsing the xml in case of Draw highlight\r\n    function parseXmlForDraw(QXML) {\r\n        state.bgImg = QXML.smxml._bgimg;\r\n        state.lineColor = QXML.smxml.div._linecolor;\r\n        let image = new Image();\r\n        image.onload = function () {\r\n            bgImgHeight = (QXML.smxml._height > this.height) ? QXML.smxml._height + 'px' : this.height + 'px';\r\n            bgImgWidth = (QXML.smxml._width > this.width) ? QXML.smxml._width + 'px' : this.width + 'px';\r\n            //AH.find('#hptdraw', 'canvas', {action: 'attr', actionData: {height: bgImgHeight, width: bgImgWidth}});\r\n            AH.find('#previewSection', '.reset').click();\r\n            AH.find('#mainContent', '#hptdraw canvas', {action: 'attr', actionData: {height: bgImgHeight, width: bgImgWidth, correctans: QXML.smxml.div.__cdata} });\r\n            // for updating the xml in case of image highlight\r\n            update_XMLValue();\r\n        };\r\n        image.src = bgImgPath + QXML.smxml._bgimg;\r\n        state.bgImg = QXML.smxml._bgimg;\r\n        AH.selectAll('.drawImage', 'toggleClass', 'd-none');\r\n        AH.selectAll('#text0,#hptmain', 'hide');\r\n        documentReady();\r\n    }\r\n\r\n    // parse xml function for text & token highlight module(textselect, textclick)\r\n    function parseXmlForText(QXML) {\r\n        state.cdata = QXML.smxml.div.__cdata;\r\n        bgImgHeight = QXML.smxml._height + 'px';\r\n        bgImgWidth = QXML.smxml._width + 'px';\r\n        AH.select('#text0', 'show');\r\n        AH.selectAll('.drawImage,#hptmain', 'hide');\r\n        if(AH.find(document, 'canvas')) {\r\n            AH.find(document, 'canvas').remove();\r\n        }\r\n\r\n        // for changing the {% , %} , symbols with span\r\n        getData(QXML.smxml.div.__cdata);\r\n    }\r\n\r\n    // for binding the data\r\n    function bind_data(xml) {\r\n        let elem = xml.getAttribute('id'), attrs = [];\r\n        if (xml.nodeName == \"SMXML\") {\r\n            elem = xml.children[0].getAttribute('type') == 'imagehighlight' ? \"hptdraw\" : \"hptmain\";\r\n        }\r\n        Array.prototype.forEach.call(xml.attributes, (v,i)=> {\r\n            attrs[i] = { \"name\": v.name, \"value\": v.value };\r\n        })\r\n        \r\n        if (xml.children.length == 0 && xml.textContent.trim() != \"\") {\r\n            attrs[attrs.length] = { \"name\": \"value\", \"value\": xml.textContent.trim() }\r\n        }\r\n        if (typeof elem != \"undefined\") {\r\n            if(elem) {\r\n                AH.select('#' + elem).dataset[\"attributes\"] = JSON.stringify(attrs);\r\n            }\r\n        }\r\n        if (xml.children.length > 0) {\r\n            Array.prototype.forEach.call(xml.children, (child)=> {\r\n                bind_data(child);\r\n            })\r\n        }\r\n    }\r\n\r\n    // Create The x,y coordinate and decide draggable and also set the user answer\r\n    function documentReady() {\r\n        let xaxis = [], yaxis = [];\r\n        bind_data(AH.parseHtml(state.xml));\r\n        // calling the draggable event on draggable element (which is used for setting answer) \r\n        // in case of spot an image module\r\n        let dnd = new Draggable({\r\n            onDragEnd: (e, ui)=> {\r\n                state.xml = authScript.updateElem('div', e, ui.getAttribute('id'), ui, state.xml);\r\n                getChildXml(state.xml);\r\n            }\r\n        })\r\n        // for showing focus on the draggable element\r\n        AH.listen('#hptmain', 'click', '.drag-resize', function (_this) {\r\n            AH.selectAll('#hptmain .elemActive', 'removeClass', 'elemActive');\r\n            AH.select(_this, 'addClass', 'elemActive').focus();\r\n        });\r\n\r\n        // for showing/hiding edit icon of draggable element in case of spot an image\r\n        AH.bind('#hptmain .drag-resize', 'mouseenter', (event)=> {\r\n            let _this = event.target;\r\n            AH.find(_this, '.tools', {action: 'show', actionData: 'block'});\r\n        })\r\n        AH.bind('#hptmain .drag-resize', 'mouseleave', (event)=> {\r\n            let _this = event.target;\r\n            AH.find(_this, '.tools', {action: 'hide'});\r\n        });\r\n\r\n        // taking image height and width\r\n        imgWidth = AH.find('#mainContent', '#hptdraw').clientWidth;\r\n        imgHeight = AH.find('#mainContent', '#hptdraw').clientHeight;\r\n\r\n        // calling dooScribPlugin \r\n        let surface = new DooScribPlugin({\r\n            target: AH.find('#mainContent', '#hptdraw'),\r\n            width: imgWidth,\r\n            height: imgHeight,\r\n            correctans: correct,\r\n            cssClass: 'drawSurface',\r\n            penSize: 4,\r\n            type: 'imagehighlight',\r\n            editable: true,\r\n            onMove: function () { },\r\n            onClick: function () { },\r\n            onPaint: function (e) {\r\n                // storeing the X and Y values\r\n                xaxis.push(e.X);\r\n                yaxis.push(e.Y);\r\n            },\r\n            onRelease: function (e) {\r\n                AH.select('#special_module_user_xml').value = '';\r\n                let coor = AH.find('#mainContent', '#hptdraw canvas').getAttribute('correctans');\r\n                if (coor != '') {\r\n                    coor = Object.keys(JSON.parse(coor)).length;\r\n                    getCoordinate(xaxis, yaxis, coor);\r\n                } else {\r\n                    getCoordinate(xaxis, yaxis, count);\r\n                }\r\n                xaxis = []; yaxis = [];\r\n            }\r\n        });\r\n        let surfaceColor = surface.lineColor(state.lineColor);\r\n        AH.siblings(AH.find('#mainContent', '#hptdraw')).find((elm)=> {\r\n            let res = AH.find(elm, 'div').getAttribute('id');\r\n            AH.bind('#' + res, 'click', function (event) {\r\n                surface.clearSurface();\r\n                drawstr = '{}';\r\n                count = 0;\r\n                AH.find('#mainContent', '#hptdraw canvas', {action: 'attr', actionData: {correctans: drawstr} });\r\n                update_XMLValue();\r\n            });\r\n            return res;\r\n        });\r\n        \r\n\r\n        let currentXMl = AH.parseHtml(xml);\r\n        // if the type is imagehighlisght then draw ib the canvas by getting values from the xml\r\n        if ((currentXMl.children)[0].getAttribute('type') == 'imagehighlight') {\r\n            var ans = state.xml;\r\n            ans = ans.substring(ans.indexOf('{'), ans.lastIndexOf('}') + 1);\r\n            if (ans != '') {\r\n                ans = JSON.parse(ans);\r\n            }\r\n            setTimeout(function () {\r\n                // for drawing the path on the canvas by looping through the ans\r\n                authScript.drawOnCanvasAuth(AH.find('#mainContent', '#hptdraw canvas').getAttribute('id'), ans, surfaceColor);\r\n            }, 2000);\r\n        }\r\n        window.surface = surface;\r\n    }\r\n\r\n    // get the coordinates of xaxis, and yaxis\r\n    function getCoordinate(xaxis, yaxis, count) {\r\n        if (count == 0) {\r\n            drawstr = \"{\\\"\" + (++count) + \"\\\":{\\\"x\\\":[\" + xaxis + \"],\\\"y\\\":[\" + yaxis + \"]}}\";\r\n        } else {\r\n            drawstr = AH.find('#mainContent', '#hptdraw canvas').getAttribute('correctans');\r\n            drawstr = drawstr.slice(0, -1);\r\n            drawstr += \",\\\"\" + (++count) + \"\\\":{\\\"x\\\":[\" + xaxis + \"],\\\"y\\\":[\" + yaxis + \"]}}\";\r\n        }\r\n        AH.find('#mainContent', '#hptdraw canvas', {action: 'attr', actionData: {correctans: drawstr}});\r\n        update_XMLValue();\r\n    }\r\n\r\n    // it sets the data of variables, states according to the uploaded image and updates the xml\r\n    function handleUpdatedData(change) {\r\n        // for checking which type of dialog is\r\n        if (change == 'img') {\r\n            // goes in this block if it is the image dialog\r\n            // setting state and storing the value\r\n            state.bgImg = AH.select('#backgroundImage').value;\r\n            state.alt = AH.select('#imgAlt').value;\r\n            state.imgheight = AH.select('#imgHeight').value;\r\n            state.imgwidth = AH.select('#imgWidth').value;\r\n            state.hotBorder = AH.select('#hotBorder').value;\r\n            state.hotBorderColor = AH.select('#hotBorderColor').value;\r\n            globalThis.sda = AH.selectAll(\"#backgroundImage, #imgAlt, #imgHeight, #imgWidth, #hotBorder, #hotBorderColor\");\r\n\r\n            // here we are updating the value of alt,bgimg,imgheight,imgwidth in the xml state\r\n            state.xml = state.xml.replace(/alt=\"(.*?)\"/gmi, `alt=\"${state.alt.replace(/\"/g, '&quot;')}\"`);\r\n            state.xml = state.xml.replace(/bgimg=\"(.*?)\"/gmi, `bgimg=\"${state.bgImg}\"`);\r\n            state.xml = state.xml.replace(/imgheight=\"(.*?)\"/gmi, `imgheight=\"${state.imgheight}\"`);\r\n            state.xml = state.xml.replace(/imgwidth=\"(.*?)\"/gmi, `imgwidth=\"${state.imgwidth}\"`);\r\n            let jj = XMLToJSON(state.xml);\r\n\r\n            // setting value of borderm bordercolor, linecolor\r\n            jj.smxml.div._border = state.hotBorder;\r\n            jj.smxml.div._bordercolor = state.hotBorderColor;\r\n            jj.smxml.div._linecolor = window.color;\r\n            let image = new Image();\r\n            image.onload = function () {\r\n                bgImgHeight = this.height + 'px';\r\n                bgImgWidth = this.width + 'px';\r\n                AH.select('#hptmain', 'css', { height: bgImgHeight, width: bgImgWidth });\r\n                // used to update the height and width value when height and width goes over the maximum allowed value or below minimum allowed value\r\n                if (jj.smxml.div._type == 'imagehighlight') {\r\n                    jj.smxml._width = this.width;\r\n                    jj.smxml._height = this.height;\r\n                    AH.find('#hptdraw', 'canvas', {action: 'attr', actionData: {height: this.height, width: this.width} });\r\n                    AH.selectAll('#previewSection .reset, #authoringLoadComponent .reset').forEach((_this)=> {\r\n                        _this.click();\r\n                    });\r\n                }\r\n                state.xml = JSONToXML(jj);\r\n                // for storing and updating the xml\r\n                getChildXml(state.xml);\r\n            };\r\n            image.src = bgImgPath + state.bgImg;\r\n            state.openImg = false;\r\n        } else {\r\n            var isValidationOk = handleWarning();\r\n            // goes here if it is draggable elment dialog\r\n            if (isValidationOk) {\r\n                var smxml = XMLToJSON(state.xml);\r\n                hotAreaHeight = smxml.smxml.div._height = parseInt(AH.select('#dragHeight').value);\r\n                hotAreaWidth = smxml.smxml.div._width = parseInt(AH.select('#dragWidth').value);\r\n                hotAreaTop = smxml.smxml.div._top = parseInt(AH.select('#dragTop').value);\r\n                hotAreaLeft = smxml.smxml.div._left = parseInt(AH.select('#dragLeft').value);\r\n                state.openDrag = false;\r\n                hotAreaHeight += 'px';\r\n                hotAreaWidth += 'px';\r\n                hotAreaTop += 'px';\r\n                hotAreaLeft += 'px';\r\n                \r\n                // for storing and updating the xml\r\n                getChildXml(JSONToXML(smxml));\r\n                // setting the current xml on the current xml state\r\n                state.xml = JSONToXML(smxml);\r\n            }\r\n        }\r\n    }\r\n    // checks for image when hotspot type is 'imagehighlight' as it passes the min and max allowed condition of height and width\r\n    function handleSubmit(change) {\r\n        let json_data = XMLToJSON(state.xml), argument_data = change, isWidthValid = true, isHeightValid = true, handlemodal = false;\r\n        if (json_data.smxml.div._type == 'imagehighlight') {\r\n            let image = new Image();\r\n            image.onload = function () {\r\n                // this block handle with default image height and width when uploaded image failed the condition\r\n                if (handlemodal) {\r\n                    bgImgHeight = json_data.smxml._height + 'px';\r\n                    bgImgWidth = json_data.smxml._width + 'px';\r\n                } else {\r\n                    // used for set the height and width for checking purpose that it passes the min and max condition of height and width\r\n                    bgImgHeight = this.height + 'px';\r\n                    bgImgWidth = this.width + 'px';\r\n                }\r\n                // handle with width\r\n                if (this.width >= 100 && this.width <= 1000) {\r\n                    isWidthValid = true;\r\n                    // handle with height if width is ok\r\n                    if (this.height >= 80 && this.height <= 550) {\r\n                        isHeightValid = true;\r\n                    } else {\r\n                        AH.alert(l.height_warning);\r\n                        isHeightValid = false;\r\n                    }\r\n                } else {\r\n                    AH.alert(l.width_warning);\r\n                    isWidthValid = false;\r\n                }\r\n                \r\n                // enters in this block if height and width passes the defined min and max condition\r\n                if (isHeightValid && isWidthValid) {\r\n                    // handle in case when uploading image failed and then default image sets\r\n                    if (handlemodal) {\r\n                        state.openImg = true;\r\n                    } else {\r\n                        // goes for other process if height and width passes the defined condition\r\n                        handleUpdatedData(argument_data);\r\n                    }\r\n                } else {\r\n                    // in case when height and width does not passes the defined min and max condition\r\n                    state.openImg = true;\r\n                    image.src = bgImgPath + json_data.smxml._bgimg;\r\n                    AH.selectAll('#backgroundImage').value = json_data.smxml._bgimg;\r\n                    handlemodal = true;\r\n                }\r\n            };\r\n            image.src = bgImgPath + AH.select('#backgroundImage').value;\r\n        } else {\r\n            handleUpdatedData(argument_data);\r\n        }\r\n    }\r\n\r\n    // for closing the open dialog\r\n    function handleClose() {\r\n        //setState({openDrag: false});\r\n        state.openDrag = false;\r\n        state.openImg = false;\r\n    }\r\n\r\n    // when image edit button is clicked\r\n    function changeImg() {\r\n        // calling the function in timeout to show value after the dialog will open\r\n        // restoring the value of the background image when the dialog will open again\r\n        AH.select('#backgroundImage').value = state.bgImg;\r\n        state.image_url = bgImgPath + '' + state.bgImg;\r\n        AH.select(AH.select('#backgroundImage').previousElementSibling,'css', { transform: \"scale(0.75) translate(0px, -28px)\", color: \"rgb(0, 188, 212)\" });\r\n        if (state.hotBorder) {\r\n            // restoring the value of the image border when the dialog will open again\r\n            AH.select('#hotBorder').value = state.hotBorder;\r\n            AH.select(AH.select('#hotBorder').previousElementSibling, 'css', { transform: \"scale(0.75) translate(0px, -28px)\", color: \"rgb(0, 188, 212)\" });\r\n        }\r\n        if (state.hotBorderColor) {\r\n            // restoring the value of the image border color when the dialog will open again\r\n            AH.select('#hotBorderColor').value = state.hotBorderColor;\r\n            AH.select(AH.select('#hotBorderColor').previousElementSibling, 'css', { transform: \"scale(0.75) translate(0px, -28px)\", color: \"rgb(0, 188, 212)\" });\r\n        }\r\n\r\n        // change the state of the openImg true as currently the dialog is open\r\n        state.openImg = true;\r\n    }\r\n\r\n    // when draggable edit button is clicked\r\n    function changeDrag() {\r\n        state.openDrag = true;\r\n        // calling the function in timeout to show value after the dialog will open\r\n        var timer = setTimeout(function () {\r\n            // setting the value of top,left,width,height in case of draggable element icon is clicked\r\n            AH.select('#dragHeight').value = parseInt(AH.select('#ID0').style.height);\r\n            AH.select('#dragWidth').value = parseInt(AH.select('#ID0').style.width);\r\n            AH.select('#dragTop').value = parseInt(AH.select('#ID0').style.top);\r\n            AH.select('#dragLeft').value = parseInt(AH.select('#ID0').style.left);\r\n            clearTimeout(timer);\r\n        }, 300);\r\n        // change the state of the image to true as the dialog is opened \r\n    }\r\n\r\n    // @pradeep sir Please verify this function is not calling\r\n    function handleChangeMultiple(event, value) {\r\n        if (value == 1 || value == 2) {\r\n            initEditor();\r\n        }\r\n        var newXml = XMLToJSON(defaultXml[value])\r\n        parseXmlForText(newXml);\r\n        switch (value) {\r\n            case \"1\": parseXmlForText(newXml); break;\r\n            case \"2\": parseXmlForText(newXml); break;\r\n            case \"3\": parseXmlForDraw(newXml); break;\r\n            case \"4\": parseXML(newXml); break;\r\n        }\r\n        state.valueMultiple = value;\r\n        state.xml = defaultXml[value];\r\n        getChildXml(state.xml);\r\n    }\r\n\r\n    // calls in case of text and token highlight and change the style of correct answer\r\n    function getData(xml) {\r\n        // replacing the correct answer with span to give it styling\r\n        xml = xml.replace(/%{/gm, '<span data-type=\"select\" class=\"alert alert-info\" cursor=\"pointer\" style=\"padding: 5px;outline: none;line-height:40px;\" contentEditable=\"true\">').replace(/}%/gm, '</span>');\r\n        AH.find('#mainContent', '.tinymce-editor-response').innerHTML = xml;\r\n    }\r\n\r\n    // update the xml\r\n    function update_XMLValue() {\r\n        // get the dom of the xml\r\n        var xmlDom = AH.parseHtml(state.xml);\r\n        // get the type\r\n        var typ = xmlDom.querySelector('div')?.getAttribute('type');\r\n        // check if the type is imagehighlight then update the cdata\r\n        if (typ == 'imagehighlight') xmlDom.querySelector('div').innerHTML = '<![CDATA[' + AH.find('#mainContent', '#hptdraw canvas').getAttribute('correctans') + ']]>';\r\n\r\n        var getCdata = state.xml;\r\n        if (getCdata) {\r\n            // replacing the current state xml with the new one\r\n            var getCdataClean = state.xml.replace(getCdata, formatXml(xmlDom.xml ? xmlDom.xml : (new XMLSerializer()).serializeToString(xmlDom)));\r\n            state.xml = getCdataClean.toString();\r\n            getChildXml(state.xml);\r\n        }\r\n    }\r\n\r\n    // in case of text & token highlight update the cdata\r\n    function setData() {\r\n        var arr = [];\r\n        var selectedText = '';\r\n        // for getting the content\r\n        var data = tinyMCE.activeEditor.getContent({ format: 'raw' });\r\n        // Here finding the element span having data-type=\"select\" and storing it in arr\r\n        arr = data.match(/<span data-type=\"select\"(.*?)>(.*?)<\\/span>/gi);\r\n\r\n        // if arr is not blank, then changing the text between the span by encolsing it in the symbol {%, %} in the data\r\n        if (arr) {\r\n            for (var i = 0; i < arr.length; i++) {\r\n                selectedText = arr[i].replace(/<span data-type=\"select\"(.*?)>|<\\/span>/gm, '');\r\n                data = data.replace(arr[i], '%{' + selectedText + '}%');\r\n            }\r\n        }\r\n        // Finding the text betwenn the <!--[CDATA , ]-->\r\n        var getCdata = state.xml.match(/<!--\\[CDATA\\[(.*?)\\]\\]-->/gm);\r\n\r\n        // if match found\r\n        if (getCdata) {\r\n            var getCdataClean = getCdata.toString().replace(\"<!--[CDATA[\", '').replace(\"]]-->\", '');\r\n            //adding the data in cdata and replacing it with current xml cdata\r\n            getCdataClean = state.xml.replace(getCdata, '<!--[CDATA[' + data + ']]-->');\r\n\r\n            // updating the state \r\n            state.xml = getCdataClean.toString();\r\n            \r\n            // updaing and storing the xml\r\n            getChildXml(getCdataClean.toString());\r\n        }\r\n    }\r\n\r\n    //For binding key event in case of spot an image\r\n    function bindKey() {\r\n        AH.bind(document, 'keydown', (e)=> {\r\n            // in case of ctrl key and shift key is stored \r\n            /**\r\n             * 37 : left arrow key\r\n             * 38 : up arrow key\r\n             * 39 : right arrow key\r\n             * 40 : down arrow key\r\n             * 27 : esc key\r\n            */\r\n            if (e.ctrlKey && e.shiftKey) {\r\n                switch ((e.keyCode).toString()) {\r\n                    case \"37\":\r\n                        setPS(-10, 0, 0, 0);\r\n                        break;\r\n                    case \"38\":\r\n                        setPS(0, -10, 0, 0);\r\n                        break;\r\n                    case \"39\":\r\n                        setPS(10, 0, 0, 0);\r\n                        break;\r\n                    case \"40\":\r\n                        setPS(0, 10, 0, 0);\r\n                        break;\r\n                }\r\n            } else if (e.shiftKey) {\r\n                // in case of shiftKey\r\n                switch ((e.keyCode).toString()) {\r\n                    case \"37\":\r\n                        setPS(-1, 0, 0, 0);\r\n                        break;\r\n                    case \"38\":\r\n                        setPS(0, -1, 0, 0);\r\n                        break;\r\n                    case \"39\":\r\n                        setPS(1, 0, 0, 0);\r\n                        break;\r\n                    case \"40\":\r\n                        setPS(0, 1, 0, 0);\r\n                        break;\r\n                }\r\n            } else if (e.ctrlKey) {\r\n                // in case of ctrl key\r\n                switch ((e.keyCode).toString()) {\r\n                    // arrow keys\r\n                    case \"37\":\r\n                        setPS(0, 0, 0, -10);\r\n                        break;\r\n                    case \"38\":\r\n                        setPS(0, 0, -10, 0);\r\n                        break;\r\n                    case \"39\":\r\n                        setPS(0, 0, 0, 10);\r\n                        break;\r\n                    case \"40\":\r\n                        setPS(0, 0, 10, 0);\r\n                        break;\r\n                }\r\n            } else {\r\n                switch ((e.keyCode).toString()) {\r\n                    case \"27\":\r\n                        // esc key\r\n                        AH.selectAll('.dragable-container .ui-draggable', 'removeClass', 'elemActive');\r\n                        break;\r\n                    case \"38\":\r\n                        // up arrow\r\n                        e.preventDefault();\r\n                        setPS(0, 0, -1, 0);\r\n                        break;\r\n                    case \"40\":\r\n                        // down arrow\r\n                        e.preventDefault();\r\n                        setPS(0, 0, 1, 0);\r\n                        break;\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    // for changing linecolor \r\n    function changeLine(elem) {\r\n        // setting the target value color in linecolor state\r\n        state.lineColor = elem.target.value;\r\n        // setting it in window\r\n        window.color = state.lineColor;\r\n    }\r\n\r\n    // for setting position or size of the draggable element in spot an image module\r\n    function setPS (w, h, t, l, del) {\r\n        let ac = AH.select('#ID0');\r\n        if (ac) {\r\n            let acRect = ac.getBoundingClientRect();\r\n            let key = ac.getAttribute('id');\r\n            let xmlDom = AH.parseHtml(state.xml);\r\n            let insert = xmlDom.querySelector('[id=\"' + key + '\"]');\r\n            if (typeof (del) !== \"undefined\" && del) {\r\n                if (confirm('Do you want to delete it?')) {\r\n                    ac.remove();\r\n                    insert.remove();\r\n                }\r\n            } else if (ac.offsetWidth > 0 && ac.offsetHeight > 0) { // is visible\r\n                w = ac.clientWidth + w;\r\n                h = ac.clientHeight + h;\r\n                t = acRect.top + t;\r\n                l = acRect.left + l;\r\n                AH.select(ac, 'css', { width: w + \"px\", height: h + \"px\", top: t + \"px\", left: l + \"px\" });\r\n                let attributes = AH.select('[id=\"' + key + '\"]').dataset['attributes'];\r\n                JSON.stringify(attributes).forEach((value, index)=> {\r\n                    switch (value.name) {\r\n                        case \"width\":\r\n                            value.value = parseInt(ac.clientWidth);\r\n                            insert.setAttribute('width', value.value);\r\n                            break;\r\n                        case \"height\":\r\n                            value.value = parseInt(ac.clientHeight);\r\n                            insert.setAttribute('height', value.value);\r\n                            break;\r\n                        case \"top\":\r\n                            value.value = parseInt(acRect.top);\r\n                            insert.setAttribute('top', value.value);\r\n                            break;\r\n                        case \"left\":\r\n                            value.value = parseInt(acRect.left);\r\n                            insert.setAttribute('left', value.value);\r\n                            break;\r\n                    }\r\n                });\r\n                AH.select('[id=\"' + key + '\"]').dataset['attributes'] = attributes;\r\n            }\r\n\r\n            // for updating the xml\r\n            AH.select('#special_module_xml').value = xmlDom.xml ? xmlDom.xml : (new XMLSerializer()).serializeToString(xmlDom[0]);\r\n            state.xml = xmlDom.xml ? xmlDom.xml : (new XMLSerializer()).serializeToString(xmlDom[0]);\r\n            getChildXml(xmlDom.xml ? xmlDom.xml : (new XMLSerializer()).serializeToString(xmlDom[0]));\r\n        }\r\n    }\r\n\r\n    let m_posX;\r\n    let m_posY;\r\n    $:m_posX;\r\n    $:m_posY;\r\n    let resize_elW;\r\n    let resize_elH;\r\n    let resize_elWH;\r\n    function resizeX(e){\r\n        let parent = resize_elW.parentNode;\r\n        let dx = m_posX - e.x;\r\n        m_posX = e.x;\r\n        parent.style.width = (parseInt(getComputedStyle(parent, '').width) - dx) + \"px\";\r\n    }\r\n    function resizeY(e){\r\n        let parent = resize_elH.parentNode;\r\n        let dy = m_posY - e.y;\r\n        m_posY = e.y;\r\n        parent.style.height = (parseInt(getComputedStyle(parent, '').height) - dy) + \"px\";\r\n    }\r\n    function resizeXY(e){\r\n        let parent = resize_elH.parentNode;\r\n        let dx = m_posX - e.x;\r\n        let dy = m_posY - e.y;\r\n        m_posX = e.x;\r\n        m_posY = e.y;\r\n        parent.style.width = (parseInt(getComputedStyle(parent, '').width) - dx) + \"px\";\r\n        parent.style.height = (parseInt(getComputedStyle(parent, '').height) - dy) + \"px\";\r\n    }\r\n\r\n    function resizeHandleW(e){\r\n        m_posX = e.x;\r\n        document.removeEventListener(\"mousemove\", resizeY, false);\r\n        document.addEventListener(\"mousemove\", resizeX, false);\r\n        document.addEventListener(\"mouseup\", function(){\r\n            document.removeEventListener(\"mousemove\", resizeX, false);\r\n            document.removeEventListener(\"mousemove\", resizeY, false);\r\n            document.removeEventListener(\"mousemove\", resizeXY, false);\r\n        }, false);\r\n    }\r\n    function resizeHandleH(e){\r\n        m_posY = e.y;\r\n        document.removeEventListener(\"mousemove\", resizeX, false);\r\n        document.addEventListener(\"mousemove\", resizeY, false);\r\n        document.addEventListener(\"mouseup\", function(){\r\n            document.removeEventListener(\"mousemove\", resizeX, false);\r\n            document.removeEventListener(\"mousemove\", resizeY, false);\r\n        }, false);\r\n    }\r\n    function resizeHandleWH(e){\r\n        m_posX = e.x;\r\n        m_posY = e.y;\r\n        document.removeEventListener(\"mousemove\", resizeX, false);\r\n        document.removeEventListener(\"mousemove\", resizeY, false);\r\n        document.addEventListener(\"mousemove\", resizeXY, false);\r\n        document.addEventListener(\"mouseup\", function(){\r\n            document.removeEventListener(\"mousemove\", resizeX, false);\r\n            document.removeEventListener(\"mousemove\", resizeY, false);\r\n            document.removeEventListener(\"mousemove\", resizeXY, false);\r\n        }, false);\r\n    }\r\n</script>\r\n<div>\r\n    <center class=\"mt\" id=\"mainContent\">\r\n        <div\r\n            class=\"tinymce-editor-response\"\r\n            id=\"text0\"\r\n            type={moduleArr[0]}\r\n            style=\"\r\n                width: {bgImgWidth}, \r\n                height: {bgImgHeight}, \r\n                border: 1px solid #ccc; \r\n                outline: none; \r\n                padding: 10px; \r\n                textAlign: left; \r\n                display: none; \r\n                overflowY: scroll\r\n            \"\r\n            on:keyup={setData}\r\n            contentEditable=\"true\"\r\n        >\r\n        </div>\r\n        <div class=\"drawImage d-none\">\r\n            <div \r\n                style = \"\r\n                width: {bgImgWidth}; \r\n                height: 32px;\r\n                background: #d9e7fd;\r\n                border-top: 2px solid #96bbf6\r\n            \"\r\n            >\r\n                <div \r\n                    id=\"resetAuth\" \r\n                    class=\"reset btn btn-outline-primary btn-sm height27 mt-sm2 mr-sm2 float-right\"\r\n                    style=\"width: 90px;\"\r\n                >\r\n                    <span class=\"icomoon-new-24px-reset-1 s3\" style=\"vertical-align: text-top\"></span> \r\n                    <span class=\"position-relative bottom1\">{l.reset}</span>\r\n                </div>\r\n            </div>\r\n            <div \r\n                id=\"hptdraw\" \r\n                style=\"\r\n                    width: {bgImgWidth}; \r\n                    height: {bgImgHeight}; \r\n                    background-image: url('{bgImgPath + state.bgImg}'); \r\n                    background-repeat: no-repeat; \r\n                    position: relative; \r\n                    border: 1px solid #e0e0e0;\r\n                \"\r\n            >\r\n                <div class=\"btn-group tools\">\r\n                    <button \r\n                        name=\"change_image\"\r\n                        type=\"button\" \r\n                        on:click={changeImg.bind(this, 'img')} \r\n                        class=\"btn btn-light px-1 pt-sm1 pb-sm1 mt\"\r\n                    >\r\n                        <i class=\"icomoon-24px-edit-1\"></i>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div \r\n            id=\"hptmain\" \r\n            path={bgImgPath} \r\n            class=\"d-none\"\r\n            style=\"position: relative; width: {bgImgWidth};\"\r\n        >\r\n            <div class=\"btn-group tools\">\r\n                <button \r\n                    type=\"button\" \r\n                    on:click={changeImg.bind(this, 'img')} \r\n                    class=\"btn btn-light px-1 pt-sm1 pb-sm1 mt\"\r\n                >\r\n                    <i class=\"icomoon-24px-edit-1\"></i>\r\n                </button>\r\n            </div>\r\n            <img \r\n                id=\"im\" \r\n                class=\"hotSpotImg border\" \r\n                src={bgImgPath + state.bgImg} \r\n                style=\"\r\n                    height: {state.imgheight};\r\n                    width: {state.imgwidth}; \r\n                    border: {state.hotBorder};\r\n                    border-color: {state.hotBorderColor};\r\n                \" \r\n                alt={state.alt} \r\n            />\r\n            <div \r\n                draggable={true}\r\n                class=\"drag-resize position-absolute\" \r\n                id=\"ID0\" \r\n                style=\"left: {hotAreaLeft}; top: {hotAreaTop}; height: {hotAreaHeight}; width: {hotAreaWidth};\"\r\n            >\r\n                <div class=\"btn-group tools h\">\r\n                    <button \r\n                        type=\"button\" \r\n                        on:click={changeDrag.bind(this, 'drag')} \r\n                        class=\"btn btn-light px-1 pt-sm1 pb-sm1\"\r\n                    >\r\n                        <i class=\"icomoon-24px-edit-1\"></i>\r\n                    </button>\r\n                </div>\r\n                <div id=\"resizeX\" bind:this={resize_elW} on:mousedown|preventDefault|stopPropagation={resizeHandleW}></div>\r\n                <div id=\"resizeY\" bind:this={resize_elH} on:mousedown|preventDefault|stopPropagation={resizeHandleH}></div>\r\n                <div id=\"resizeXY\" bind:this={resize_elWH} on:mousedown|preventDefault|stopPropagation={resizeHandleWH}></div>\r\n            </div>\r\n        </div>\r\n        <textarea \r\n            class=\"d-none\" \r\n            id=\"special_module_xml\" \r\n            name=\"special_module_xml\" \r\n            value={state.xml}\r\n        ></textarea>\r\n    </center>\r\n    <Dialog class=\"remove_right_margin\" width=\"600\" bind:visible={state.openImg} style=\"background: #fff; border-radius: 5px;\">\r\n        <h4 class=\"mt-1 font21 mb-4\">\r\n            <div class=\"d-flex justify-content-between\">\r\n                <div>Image</div>\r\n            </div>\r\n        </h4>\r\n        <div style=\"overflow-y: auto; padding-right: 20px;\">\r\n            <div class=\"d-flex\">\r\n                <input\r\n                    type=\"text\"\r\n                    id=\"backgroundImage\"\r\n                    disabled=\"true\"\r\n                    value={state.bgImg}\r\n                    margin=\"normal\"\r\n                    style=\"pointer-events: none; width: 76%;\"\r\n                    class=\"form-control mr-2\"\r\n                />\r\n                <button\r\n                    id=\"upload_media\"\r\n                    type=\"button\"\r\n                    value=\"Upload Media\"\r\n                    margin=\"normal\"\r\n                    class=\"btn btn-outline-primary position-relative\"\r\n                >Upload image</button>\r\n            </div>\r\n            <div class=\"mx-auto width8 p-2 border mt-2\">\r\n                <img src={state.image_url} alt=\"background\" class=\"img img-responsive span7\" />\r\n            </div>\r\n            <span>\r\n                <label for=\"imgAlt\" class={(state.valueMultiple == 4) ? \"my-1 text-dark\" : \"hidden\"}>Image Alt</label>\r\n            </span>\r\n            <input\r\n                type=\"text\"\r\n                id=\"imgAlt\"\r\n                placeholder=\"Alt text\"\r\n                class={(state.valueMultiple == 4) ? \" form-control mt-0\" : \"hidden form-control mt-0\"}\r\n                bind:value={state.alt}\r\n                margin=\"normal\"\r\n                style=\"width: -webkit-fill-available;\"\r\n            />\r\n            <div class=\"d-flex\">\r\n                <div class={(state.valueMultiple == 4) ? \"d-inline-block pr-2 mt-2 w-sm\" : \"hidden\"}>\r\n                    <span>\r\n                        <label for=\"hotBorder\" class=\"my-1 text-dark\">Border width</label>\r\n                    </span>\r\n                    <select id=\"hotBorder\" class=\"form-select\" bind:value={state.hotBorder}>\r\n                        <option value=\"0\">None</option>\r\n                        <option value=\"1\">1</option>\r\n                        <option value=\"2\">2</option>\r\n                        <option value=\"3\">3</option>\r\n                        <option value=\"4\">4</option>\r\n                        <option value=\"5\">5</option>\r\n                    </select>\r\n                </div>\r\n                <div class={(state.valueMultiple == 4) ? \"d-inline-block mt-2 w-sm\" : \"hidden\"}>\r\n                    <span>\r\n                        <label for=\"hotBorderColor\" class=\"my-1 text-dark\">Border color</label>\r\n                    </span>\r\n                    <select id=\"hotBorderColor\" class=\"form-select\" bind:value={state.hotBorderColor}>\r\n                        <option value=\"white\">None</option>\r\n                        <option value=\"black\">Black</option>\r\n                        <option value=\"grey\">Grey</option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n            <br />\r\n            <div class={(state.valueMultiple == 3) ? \"\" : \"hidden\"}>\r\n                <span>\r\n                    <label for=\"setLineColor\" class=\"mt-2 text-dark\">Draw line color</label>\r\n                </span>\r\n                <select id=\"setLineColor\" class=\"form-select\" bind:value={state.lineColor} on:blur={changeLine.bind(this)} >\r\n                    <option>Please Select</option>\r\n                    <option value=\"red\">Red</option>\r\n                    <option value=\"black\">Black</option>\r\n                    <option value=\"blue\">Blue</option>\r\n                </select>\r\n            </div>\r\n        </div>\r\n        <div slot=\"footer\" class=\"svelteFooter\" >\r\n            <Button\r\n                on:click={handleClose}\r\n                unelevated={true}\r\n                outlined={true}\r\n                class=\"text-capitalize\"\r\n                color=\"#ccc\"\r\n            > {l.cancel} \r\n            </Button>\r\n            <Button\r\n                on:click={handleSubmit.bind(this, 'img')}\r\n                class=\"bg-primary text-white\"\r\n                style=\"text-transform: none\"\r\n                key={l.submit}\r\n            > {l.submit}\r\n            </Button>\r\n        </div>\r\n    </Dialog>\r\n    <Dialog class=\"remove_right_margin\" width=\"600\" bind:visible={state.openDrag} style=\"background: #fff; border-radius: 5px;\">\r\n        <h4 class=\"mt-1 font21 mb-4\">\r\n            <div class=\"d-flex justify-content-between\">\r\n                <div>Hotspot</div>\r\n            </div>\r\n        </h4>\r\n        <div style=\"overflow-y: auto; padding-right: 20px;\">\r\n            <div class=\"row\">\r\n                <div class=\"col-6 pr-1\">\r\n                    <span>\r\n                        <label for=\"dragHeight\" class=\"my-1 text-dark\">Height</label>\r\n                    </span>\r\n                    <input\r\n                        type=\"number\"\r\n                        id=\"dragHeight\"\r\n                        placeholder=\"Height\"\r\n                        defaultValue=\" \"\r\n                        class=\"form-control\"\r\n                    />\r\n                </div>\r\n                <div class=\"col-6 pl-1\">\r\n                    <span>\r\n                        <label for=\"dragWidth\" class=\"my-1 text-dark\">Width</label>\r\n                    </span>\r\n                    <input\r\n                        type=\"number\"\r\n                        id=\"dragWidth\"\r\n                        placeholder=\"Width\"\r\n                        defaultValue=\" \"\r\n                        class=\"form-control\"\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div class=\"row mt-2\">\r\n                <div class=\"col-6 pr-1\">\r\n                    <span>\r\n                        <label for=\"dragTop\" class=\"my-1 text-dark\">Top</label>\r\n                    </span>\r\n                    <input\r\n                        type=\"number\"\r\n                        id=\"dragTop\"\r\n                        placeholder=\"Top\"\r\n                        defaultValue=\" \"\r\n                        class=\"form-control\"\r\n                    />\r\n                </div>\r\n                <div class=\"col-6 pl-1\">\r\n                    <span>\r\n                        <label for=\"dragLeft\" class=\"my-1 text-dark\">Left</label>\r\n                    </span>\r\n                    <input\r\n                        type=\"number\"\r\n                        id=\"dragLeft\"\r\n                        placeholder=\"Left\"\r\n                        defaultValue=\" \"\r\n                        class=\"form-control\"\r\n                    />\r\n                </div>\r\n            </div>    \r\n        </div>\r\n        <div slot=\"footer\" class=\"svelteFooter\">\r\n            <Button\r\n                on:click={handleClose}\r\n                unelevated={true}\r\n                outlined={true}\r\n                class=\"text-capitalize\"\r\n                color=\"#ccc\"\r\n            > {l.cancel} \r\n            </Button>\r\n            <Button\r\n                on:click={handleSubmit.bind(this, 'drag')}\r\n                class=\"bg-primary text-white\"\r\n                style=\"text-transform: none\"\r\n                key={l.done}\r\n            >\r\n                {l.done}\r\n            </Button>\r\n        </div>\r\n    </Dialog>\r\n    <Snackbar bind:visible={state.snackback} bg=\"#f44336\" bottom={true} timeout={10} style=\"position:fixed; bottom:50px\">\r\n        {message}\r\n        <span slot=\"action\">\r\n            <Button color=\"#ff0\" on:click={() => (state.snackback = false)}>Close</Button>\r\n        </span>\r\n    </Snackbar>\r\n</div>\r\n\r\n<style>\r\n    #resizeX {\r\n        position: absolute;\r\n        right: 0;\r\n        width: 3px;\r\n        opacity: 0;\r\n        height: 100%;\r\n        cursor: w-resize;\r\n    }\r\n    #resizeY {\r\n        position: absolute;\r\n        bottom: 0;\r\n        width: 100%;\r\n        height: 3px;\r\n        opacity: 0;\r\n        cursor: s-resize;\r\n    }\r\n    #resizeXY {\r\n        position: absolute;\r\n        bottom: 0;\r\n        right: 0;\r\n        width: 3px;\r\n        height: 3px;\r\n        opacity: 0;\r\n        cursor: se-resize;\r\n    }\r\n    </style>"],"names":["Point","a","b","isNaN","Number","this","x","y","X","Y","JS","JUI","DooScribPlugin","[object Object]","options","prevPoint","undefined","defaultOptions","target","penSize","width","height","cssClass","onClick","e","onMove","onPaint","onRelease","penWidth","drawing","cap","ID","Math","floor","random","drawingSurface","Settings","init","_this","getAttribute","empty","insert","type","correctans","document","getElementById","getContext","lineWidth","lineCap","hasTouch","addEventListener","clickDown","bind","moved","clickUp","console","error","st","window","scrollY","indexOf","clientX","targetTouches","pageX","clientY","pageY","changedTouches","isDrawing","event","preventDefault","normalizeTouch","offset","pt","left","top","drawLine","editable","parseHtml","style","backgroundColor","color","find","replace","clearRect","fromX","fromY","toX","toY","strokeStyle","beginPath","moveTo","lineTo","stroke","HotspotAuthScript","count","drawstr","key","ui","xml","wd","hd","tp","lt","where","attributes","serializeArray","bgimg","attr","hp_image","select","getBoundingClientRect","dataset","JSON","parse","attributeArr","name","value","parseInt","split","forEach","_data","index","_orginalArr","clientWidth","clientHeight","offsetY","offsetX","trim","stringify","bgholder","img","Image","src","img_ext","substr","lastIndexOf","setTimeout","selectAll","length","action","actionData","siblings","backgroundImage","updateXML","alert","el","cord","ctx","len","Object","keys","i","j","img_w","img_h","xmlDom","setAttribute","_tempAttr","removeAttribute","formatXml","outerHTML","bgImg","image_url","valueMultiple","hotBorder","hotBorderColor","lineColor","append","alt","l","cancel","submit","done","message","openImg","openDrag","snackback","reset","bgImgPath","imgheight","imgwidth","getChildXml","authScript","bgImgHeight","bgImgWidth","hotAreaTop","hotAreaHeight","hotAreaWidth","hotAreaLeft","cmTime","defaultXml","moduleArr","imgWidth","imgHeight","state","writable","cdata","subscribe","items","addToken","content","tinyMCE","activeEditor","selection","getContent","format","setContent","setData","bind_data","elem","attrs","nodeName","children","Array","prototype","call","v","textContent","AH","child","documentReady","xaxis","yaxis","Draggable","onDragEnd","updateElem","listen","focus","surface","push","coor","getCoordinate","surfaceColor","elm","res","clearSurface","update_XMLValue","ans","substring","drawOnCanvasAuth","slice","handleUpdatedData","change","globalThis","sda","jj","XMLToJSON","smxml","div","_border","_bordercolor","_linecolor","image","onload","_type","_width","_height","click","JSONToXML","height_value","height_integer_value","width_value","width_integer_value","top_value","top_integer_value","left_value","left_integer_value","bgHeight_data","bgWidth_data","showmsg","handleWarning","_top","_left","querySelector","innerHTML","getCdata","getCdataClean","XMLSerializer","serializeToString","toString","arr","selectedText","data","match","setPS","w","h","t","del","ac","acRect","confirm","remove","offsetWidth","offsetHeight","m_posX","m_posY","resize_elW","resize_elH","resize_elWH","resizeX","parent","parentNode","dx","getComputedStyle","resizeY","dy","resizeXY","onMount","createLink","itemUrl","preload","newXml","QXML","__cdata","getData","parseXmlForText","_bgimg","parseXmlForDraw","_alt","_imgheight","_imgwidth","parseXML","ctrlKey","shiftKey","keyCode","PluginManager","add","editor","addMenuItem","text","id","context","prependToContext","tinymce","selector","inline","theme","min_width","resize","menubar","toolbar","elementpath","statusbar","force_br_newlines","remove_trailing_brs","forced_root_block","paste_as_text","extended_valid_elements","valid_elements","custom_elements","plugins","contextmenu","s","Date","getTime","setImage","didMount","json_data","argument_data","isWidthValid","isHeightValid","handlemodal","height_warning","width_warning","previousElementSibling","transform","timer","clearTimeout","removeEventListener"],"mappings":"qTACA,SAASA,EAAMC,EAAGC,GAWd,OAVI,IAASC,MAAMC,OAAOH,IACtBI,KAAKC,EAAI,EAETD,KAAKC,EAAIL,GAET,IAASE,MAAMC,OAAOF,IACtBG,KAAKE,EAAI,EAETF,KAAKE,EAAIL,EAEN,CACHM,EAAKH,KAAKC,EACVG,EAAKJ,KAAKE,GAGlB,MAAMG,EAAK,IAAIC,EACA,MAAMC,EACpBC,YAAYC,GACXT,KAAKU,eAAYC,EACjBX,KAAKY,eAAiB,CACrBC,OAAQ,GACRC,QAAQ,EACRC,MAAON,EAAQM,MACfC,OAAQP,EAAQO,OAChBC,SAAU,GACVC,QAAUC,MACVC,OAASD,MACTE,QAAUF,MACVG,UAAYH,OAEbnB,KAAKuB,SAAW,EAChBvB,KAAKwB,SAAU,EACfxB,KAAKyB,IAAM,QACXzB,KAAK0B,GAAK,iBAAmBC,KAAKC,MAAqB,IAAdD,KAAKE,SAAgB,GAC9D7B,KAAK8B,eAAiB,GAClBrB,IAAST,KAAK+B,SAAW,IAAI/B,KAAKY,kBAAmBH,KACrD,IAASX,MAAME,KAAK+B,SAASf,UAChChB,KAAK+B,SAASf,OAAS,MAEpB,IAASlB,MAAME,KAAK+B,SAAShB,SAChCf,KAAK+B,SAAShB,MAAQ,KAGvBf,KAAKgC,OAGNxB,OACC,IAAIyB,EAAQjC,KAAK+B,SAASlB,OACtBoB,GAC6B,YAA5BA,EAAMC,aAAa,OAAsB7B,EAAG8B,MAAMF,GACtD5B,EAAG+B,OAAOH,EAAO,eAAejC,KAAK0B,oCAAoC1B,KAAK+B,SAASd,mBAAmBjB,KAAK+B,SAASM,qBAAqBrC,KAAK+B,SAASO,mCAAmCtC,KAAK+B,SAASf,kBAAkBhB,KAAK+B,SAAShB,mBAAoB,aAC7Pf,KAAKc,QAAQd,KAAK+B,SAASjB,SAC3Bd,KAAK8B,eAAiBS,SAASC,eAAexC,KAAK0B,IAAIe,WAAW,MAClEzC,KAAK8B,eAAeY,UAAY1C,KAAKc,UACrCd,KAAK8B,eAAea,QAAU3C,KAAKyB,KAC/B,IAAUzB,KAAK4C,YACfL,SAASC,eAAexC,KAAK0B,IAAImB,iBAAiB,YAAa7C,KAAK8C,UAAUC,KAAK/C,OAAO,GAC1FuC,SAASC,eAAexC,KAAK0B,IAAImB,iBAAiB,YAAa7C,KAAKgD,MAAMD,KAAK/C,OAAO,GACtFuC,SAASC,eAAexC,KAAK0B,IAAImB,iBAAiB,UAAW7C,KAAKiD,QAAQF,KAAK/C,OAAO,KAGtFuC,SAASC,eAAexC,KAAK0B,IAAImB,iBAAiB,aAAc7C,KAAK8C,UAAUC,KAAK/C,OAAO,GAC3FuC,SAASC,eAAexC,KAAK0B,IAAImB,iBAAiB,YAAa7C,KAAKgD,MAAMD,KAAK/C,OAAO,GACtFuC,SAASC,eAAexC,KAAK0B,IAAImB,iBAAiB,WAAY7C,KAAKiD,QAAQF,KAAK/C,OAAO,KAG9FkD,QAAQC,MAAM,sBAIhB3C,eAAeW,GACd,IAAI,IAASnB,KAAK4C,WAAY,CAC7B,IAAIQ,EAAKC,OAAOC,QACZ,CAAC,aAAc,aAAaC,QAAQpC,EAAEkB,OAAS,IAClDlB,EAAEqC,QAAUrC,EAAEsC,cAAc,GAAGC,MAC/BvC,EAAEwC,QAAUxC,EAAEsC,cAAc,GAAGG,MAAQR,GAEpC,CAAC,YAAYG,QAAQpC,EAAEkB,OAAS,IACnClB,EAAEqC,QAAUrC,EAAE0C,eAAe,GAAGH,MAChCvC,EAAEwC,QAAUxC,EAAE0C,eAAe,GAAGD,MAAQR,GAG1C,OAAOjC,EAGRX,UAAUW,GACT,IAAI,IAASnB,KAAK8D,YACjB,OAEI3C,IACJA,EAAIkC,OAAOU,QAER,IAAS/D,KAAK4C,aACjBzB,EAAE6C,iBACF7C,EAAInB,KAAKiE,eAAe9C,IAEzB,IAAI+C,EAAS7D,EAAG6D,OAAOlE,KAAK+B,SAASlB,QACjCuC,EAAKC,OAAOC,QACZa,EAAK,IAAIxE,EAAMwB,EAAEqC,QAAUU,EAAOE,KAAMjD,EAAEwC,SAAWO,EAAOG,IAAIjB,IAIpE,OAHApD,KAAKU,UAAYyD,EACjBnE,KAAKwB,SAAU,EACfxB,KAAK+B,SAASb,QAAQiD,IACf,EAGR3D,MAAMW,GACAA,IACJA,EAAIkC,OAAOU,QAER,IAAS/D,KAAK4C,aACjBzB,EAAE6C,iBACF7C,EAAInB,KAAKiE,eAAe9C,IAEzB,IAAI+C,EAAS7D,EAAG6D,OAAOlE,KAAK+B,SAASlB,QACjCuC,EAAKC,OAAOC,QACZa,EAAK,IAAIxE,EAAMwB,EAAEqC,QAAUU,EAAOE,KAAMjD,EAAEwC,SAAWO,EAAOG,IAAIjB,IASpE,OARI,IAASpD,KAAK8D,aACjB9D,KAAKsE,SAAStE,KAAKU,UAAUP,EAAGH,KAAKU,UAAUN,EAAG+D,EAAGhE,EAAGgE,EAAG/D,GAC3DJ,KAAKU,UAAYyD,EACjBnE,KAAK+B,SAASV,QAAQ8C,IAGtBnE,KAAK+B,SAASX,OAAO+C,IAEf,EAGR3D,QAAQW,GACP,IAAI,IAAUnB,KAAK8D,YAClB,QAEG,IAAS9D,KAAK4C,aACjBzB,EAAE6C,iBACF7C,EAAInB,KAAKiE,eAAe9C,IAEzB,IAAI+C,EAAS7D,EAAG6D,OAAOlE,KAAK+B,SAASlB,QACjCuC,EAAKC,OAAOC,QACZa,EAAK,IAAIxE,EAAMwB,EAAEqC,QAAUU,EAAOE,KAAMjD,EAAEwC,SAAWO,EAAOG,IAAIjB,IAIpE,OAHApD,KAAK+B,SAAST,UAAU6C,GACxBnE,KAAKwB,SAAU,GAER,EAGRhB,WACC,MAAO,iBAAkB6C,OAG1B7C,QAASW,GAMR,YALIR,IAAcQ,IACb,IAAUrB,MAAMC,OAAOoB,MAC1BnB,KAAKuB,SAAWJ,GAGXnB,KAAKuB,SAGbf,YACC,GAAIR,KAAK+B,SAASwC,SACjB,OAAOvE,KAAKwB,QAGdhB,QAAQW,GACP,QAAIR,IAAcQ,EACjB,OAAOA,GACN,IAAK,OACL,IAAK,QACL,IAAK,SACJnB,KAAKyB,IAAMN,EAId,OAAOnB,KAAKyB,IAIbjB,UAAUW,GACT,QAAGR,IAAcQ,EAAG,CACnB,IAAIvB,EAAIS,EAAGmE,UAAU,uDACrB5E,EAAE6E,MAAMC,gBAAkBvD,EAC1B,IAAItB,EAAID,EAAE6E,MAAMC,qBACX/D,IAAcd,GAAO,KAAOA,IAChCwD,OAAOsB,MAAQxD,GAGjB,OAAOkC,OAAOsB,MAGfnE,UACC,OAAOR,KAAK8B,eAGbtB,eACC,IAAIO,EAAQV,EAAGuE,KAAKrC,SAAU,UAAUL,aAAa,SAAS2C,QAAQ,KAAK,IACvE7D,EAASX,EAAGuE,KAAKrC,SAAU,UAAUL,aAAa,UAAU2C,QAAQ,KAAK,IAC7E7E,KAAK8B,eAAegD,UAAU,EAAG,EAAE/D,EAAMC,GAG1CR,SAASuE,EAAOC,EAAOC,EAAKC,QACtBvE,IAAcoE,QAAWpE,IAAcqE,QAAWrE,IAAcsE,QAAStE,IAAcuE,IACvF,IAAUpF,MAAMC,OAAOgF,MAAa,IAAUjF,MAAMC,OAAOiF,MAAa,IAAUlF,MAAMC,OAAOkF,MAAW,IAAUnF,MAAMC,OAAOmF,MACpIlF,KAAK8B,eAAea,QAAU3C,KAAKyB,IACnCzB,KAAK8B,eAAeqD,YAAc9B,OAAOsB,MACzC3E,KAAK8B,eAAeY,UAAY1C,KAAKuB,SACrCvB,KAAK8B,eAAesD,YACpBpF,KAAK8B,eAAeuD,OAAON,EAAOC,GAClChF,KAAK8B,eAAewD,OAAOL,EAAKC,GAChClF,KAAK8B,eAAeyD,WChNxB,MAAMlF,EAAK,IAAIC,EACA,MAAMkF,EACpBhF,cACCR,KAAKyF,MAAQ,EACbzF,KAAK0F,QAAU,GAkChBlF,WAAW6B,EAAMJ,EAAO0D,EAAKC,EAAGC,GAC/B,IAC2BC,EAAIC,EAAIC,EAAIC,EAAIC,EADvCC,EAAa9F,EAAG+F,eAAe/F,EAAGuE,KAAK,mBAAmB,KAAM,WAAY,SAC5EyB,EAAQ,GAAIC,EAAO,GACnBC,EAAWlG,EAAGmG,OAAO,OAAOC,wBAChC,QAAmB,MAAa,CAM/B,GALAN,EAAa9F,EAAGmG,OAAO,IAAIb,GAAKe,QAAoB,WACjDP,IACFA,EAAaQ,KAAKC,MAAMT,KAGrBA,EAAY,CACf,IAAIU,EAAe,GACnBA,EAAa,GAAK,CAACC,KAAK,KAAKC,MAAMpB,GACnCkB,EAAa,GAAK,CAACC,KAAK,OAAQC,MAAO,WACvCF,EAAa,GAAK,CAACC,KAAK,MAAOC,MAAOC,SAAS3G,EAAGmG,OAAO,IAAIb,GAAKlB,MAAMJ,IAAI4C,MAAM,MAAM,KACxFJ,EAAa,GAAK,CAACC,KAAK,OAAQC,MAAOC,SAAS3G,EAAGmG,OAAO,IAAIb,GAAKlB,MAAML,KAAK6C,MAAM,MAAM,KAC1FJ,EAAa,GAAK,CAACC,KAAK,QAASC,MAAOC,SAAS3G,EAAGmG,OAAO,IAAIb,GAAKlB,MAAM1D,MAAMkG,MAAM,MAAM,KAC5FJ,EAAa,GAAK,CAACC,KAAK,SAAUC,MAAOC,SAAS3G,EAAGmG,OAAO,IAAIb,GAAKlB,MAAMzD,OAAOiG,MAAM,MAAM,KAC9Fd,EAAaU,EAEdV,EAAWe,SAAQ,CAACC,EAAOC,EAAOC,KACjC,OAAOF,EAAML,MACZ,IAAK,QACJK,EAAMJ,MAAQnB,EAAG0B,YACjB,MACD,IAAK,SACJH,EAAMJ,MAAQnB,EAAG2B,aACjB,MACD,IAAK,MACJJ,EAAMJ,OAAWI,EAAW,MAAKlF,EAAMuF,QAAY5B,EAAG2B,aAAa,EAChEJ,EAAMJ,MAAQ,IAChBI,EAAMJ,MAAQ,GAEVI,EAAMJ,MAAQnB,EAAG2B,aAAgBhB,EAASvF,SAC9CmG,EAAMJ,MAAQR,EAASvF,OAAS4E,EAAG2B,cAEpC,MACD,IAAK,OACJJ,EAAMJ,OAAWI,EAAW,MAAIlF,EAAMwF,QAAY7B,EAAG0B,YAAY,EAC9DH,EAAMJ,MAAQ,IAChBI,EAAMJ,MAAQ,GAEVI,EAAMJ,MAAQnB,EAAG0B,YAAef,EAASxF,QAC7CoG,EAAMJ,MAAQR,EAASxF,MAAQ6E,EAAG0B,aAIrCD,EAAYD,GAASD,KAavB,OAVAhB,EAAWe,SAAQ,CAACH,EAAOK,KACR,SAAdL,EAAMD,OAAkBhB,EAAKiB,EAAMA,OACrB,UAAdA,EAAMD,OAAkBf,EAAKgB,EAAMA,OACrB,OAAdA,EAAMD,OAAkBd,EAAKe,EAAMA,OACrB,QAAdA,EAAMD,OAAkBb,EAAKc,EAAMA,OACrB,SAAdA,EAAMD,MAAyC,IAAtBC,EAAMA,MAAMW,SACxCrB,EAAQhG,EAAGmG,OAAO,YAAYtE,aAAa,QAAU6E,EAAMA,MAAMW,QAElEpB,EAAKS,EAAMD,MAAQC,EAAMD,QAElBzE,GACP,IAAK,MACJ6D,EAAQ,QAAQP,MAChBtF,EAAGmG,OAAO,QAAQb,MAAS,MAAO,CAAC5E,MAAO+E,EAAG,KAAM9E,OAAQ+E,EAAG,KAAM1B,IAAK2B,EAAG,KAAM5B,KAAM6B,EAAG,OAAOS,QAAoB,WAAIC,KAAKgB,UAAUxB,GACzI,MACD,IAAK,OACJD,EAAQ,UACR7F,EAAGmG,OAAO,YAAYE,QAAoB,WAAIC,KAAKgB,UAAUxB,GAG/D,GAAY,QAAR9D,EAAgB,CACnB,IAAIuF,EAAiB,WAALjC,EAAkB,WAAa,WAE/C,GAAa,IAATU,EAAa,CAChB,IAAIwB,EAAM,IAAIC,MACdD,EAAIE,IAAM1B,EACV,IAAI2B,EAAUH,EAAIE,IAAIE,OAAQJ,EAAIE,IAAIG,YAAY,KAAO,GACzDC,YAAW,KACVN,EAAI9G,MAAQ8G,EAAI9G,MAAQ,EAAI8G,EAAI9G,MAAQ,MACxC8G,EAAI7G,OAAS6G,EAAI7G,OAAS,EAAI6G,EAAI7G,OAAS,MAC3CX,EAAGmG,OAAO,kBAAmB,MAAO,CAACzF,MAAO8G,EAAI9G,QACjC,OAAXiH,IACC3H,EAAG+H,UAAUR,EAAW,QAAQS,OAAS,GAC5ChI,EAAGmG,OAAOoB,EAAU,MAAO,CAAC7G,MAAO8G,EAAI9G,MAAOC,OAAQ6G,EAAI7G,SAC1DX,EAAG+H,UAAUR,EAAW,OAAO,OAAQ,CAACG,IAAK1B,KAC7B,WAAPV,GACTtF,EAAGuE,KAAKgD,EAAU,SAAU,CAACU,OAAQ,OAAOC,WAAY,CAACxH,MAAO8G,EAAI9G,MAAOC,OAAQ6G,EAAI7G,UACvFX,EAAG+H,UAAU/H,EAAGmI,SAASZ,GAAW,MAAO,CAAC7G,MAAO8G,EAAI9G,QACvDV,EAAGmG,OAAOoB,EAAS,MAAO,CAAC7G,MAAO8G,EAAI9G,MAAOC,OAAQ6G,EAAI7G,OAAQyH,gBAAgB,OAASpC,EAAQ,OAElGhG,EAAG+B,OAAO/B,EAAGmG,OAAOoB,EAAU,MAAO,CAAC7G,MAAM8G,EAAI9G,MAAOC,OAAO6G,EAAI7G,SAAU,aAAaqF,EAAM,OAAQ,kBAGvG,UAEChG,EAAG+H,UAAUR,EAAW,QAAQS,OAAS,IAC5ChI,EAAGmG,OAAOoB,EAAU,MAAM,CAAC7G,MAAO,QAASC,OAAQ,UACnDX,EAAGmG,OAAOoB,EAAW,OAAQ,WAIhC,MAAY,OAARvF,EACIrC,KAAK0I,UAAUrG,EAAM6D,EAAOC,EAAWH,EAAGC,EAAGJ,GAEtC,OAAXmC,SAAkC,oBAAPH,IACvB7H,KAAK0I,UAAUrG,EAAM6D,EAAOC,EAAW0B,IAAI9G,MAAM8G,IAAI7G,OAAO6E,QAEnExF,EAAGsI,MAAM,kCAIXnI,iBAAiBoI,EAAGC,EAAKlE,GACxB,IACImE,EADIvG,SAASC,eAAeoG,GACpBnG,WAAW,MACnBsG,EAAMC,OAAOC,KAAKJ,GAAMR,OAC5B,GAAU,IAANQ,EACH,IAAK,IAAIK,EAAI,EAAGA,GAAKH,EAAMG,IAC1B,IAAK,IAAIC,EAAI,EAAGA,GAAKN,EAAKK,GAAM,EAAEb,OAAQc,IACzCL,EAAI1D,YACJ0D,EAAIpG,UAAc,IAClBoG,EAAI3D,YAAc9B,OAAOsB,MACzBmE,EAAIzD,OAAOwD,EAAKK,GAAM,EAAEC,GAAIN,EAAKK,GAAM,EAAEC,IACzCL,EAAIxD,OAAOuD,EAAKK,GAAM,EAAEC,EAAE,GAAIN,EAAKK,GAAM,EAAEC,EAAE,IAC7CL,EAAIvD,SAMR/E,UAAU6B,EAAM6D,EAAOC,EAAWiD,EAAMC,EAAMxD,GAC7C,IACyBzD,EADrBkH,EAASjJ,EAAGmE,UAAUqB,GAW1B,GARCzD,EADY,WAAT8D,EACMoD,EAEAjJ,EAAGuE,KAAK0E,EAAQpD,GAEtB9D,GAAUgH,EAAQ,GAAKC,EAAQ,IAClCjH,EAAOmH,aAAa,QAASH,GAC7BhH,EAAOmH,aAAa,SAAUF,IAE3BlD,EACH,IAAK,IAAIqD,KAAarD,EACG,KAApBqD,EAAUzC,OACb3E,GAAUA,EAAOmH,aAAaC,EAAU1C,KAAM0C,EAAUzC,OACpC,QAAhByC,EAAU1C,MAAc1E,GAAUA,EAAOmH,aAAaC,EAAUzC,MAAO,YAE3E3E,EAAOqH,gBAAgBD,EAAU1C,MAIpC,OAAO4C,UAAUJ,EAAOK,kvBCg1B2E,6gCAjB1Eb,KAAMc,mSAcPd,KAAMe,yKAGmC,GAAvBf,KAAMgB,cAAsB,iBAAmB,4FAM5C,GAAvBhB,KAAMgB,cAAsB,qBAAuB,mVAUAhB,KAAMiB,gDAJ7B,GAAvBjB,KAAMgB,cAAsB,gCAAkC,0LAiBXhB,KAAMkB,sDAJlC,GAAvBlB,KAAMgB,cAAsB,2BAA6B,gQAgBZhB,KAAMmB,mDAJhC,GAAvBnB,KAAMgB,cAAsB,GAAK,uEAjElD1H,kBAKAA,SACI8H,OACIA,cASAA,cAQJA,OACIA,cAEJA,OACIA,qBAEJA,WAKgBpB,KAAMqB,YAItBD,OACIA,OACIA,cAGAA,OACIA,OACAA,OACAA,OACAA,OACAA,OACAA,WANmDpB,KAAMiB,kBASjEG,OACIA,cAGAA,OACIA,OACAA,QACAA,YAHwDpB,KAAMkB,wBAO1EE,gBACAA,QACIA,kBAGAA,SACIA,SACAA,SACAA,SACAA,cAJsDpB,KAAMmB,gHAAoBnB,MAAW/F,KAAK/C,wCA1DzF8I,KAAMc,sDAcPd,KAAMe,0CAGmC,GAAvBf,KAAMgB,cAAsB,iBAAmB,2CAM5C,GAAvBhB,KAAMgB,cAAsB,qBAAuB,gEAC/ChB,KAAMqB,SAANrB,KAAMqB,mBASyCrB,KAAMiB,4BAJ7B,GAAvBjB,KAAMgB,cAAsB,gCAAkC,wCAiBXhB,KAAMkB,mCAJlC,GAAvBlB,KAAMgB,cAAsB,2BAA6B,0CAgBZhB,KAAMmB,8BAJhC,GAAvBnB,KAAMgB,cAAsB,GAAK,8FAmB3CM,EAAEC,uFAOFD,EAAEE,gIAXW,YACF,8FAFAxB,sFAWLsB,EAAEE,8DAHGxB,MAAa/F,KAAK/C,KAAM,yHAV1CoC,q/CAmBAA,kBAKAA,+DA6DOgI,EAAEC,uFAQAD,EAAEG,+HAZS,YACF,8FAFAzB,sFAWLsB,EAAEG,4DAHGzB,MAAa/F,KAAK/C,KAAM,0HAV1CoC,4UAoBCoI,6EAEmE,qOADpEpI,qgBAjL0D0G,KAAM2B,qBAAN3B,KAAM2B,iPAgGN3B,KAAM4B,sBAAN5B,KAAM4B,6FA+EN,UAAe,2GAArD5B,KAAM6B,uBAAN7B,KAAM6B,gMA/P2BP,EAAEQ,6gBA9B7C9B,KAAU,gBAEJA,sCACCA,ydAeDA,+QAkBIA,mBACCA,sCACe+B,GAAY/B,KAAMc,gTAoCzCiB,GAAY/B,KAAMc,kCAEVd,KAAMgC,uBACPhC,KAAMiC,uBACLjC,KAAMiB,8BACAjB,KAAMkB,4BAEpBlB,KAAMqB,yRAGA,2EAGGrB,gBAAoBA,mBAAsBA,kBAAwBA,qCA7B9E+B,iEAE6B/B,2GA+C5BA,KAAMjD,sDAhHzBzD,SACI8H,OACIA,cAkBAA,OACIA,OAQIA,OAKIA,cACAA,cAGRA,OAWIA,OACIA,cAWZA,OAMIA,OACIA,cAQJA,cAYAA,OAMIA,OACIA,eAQJA,0BACAA,0BACAA,0BAGRA,kGA5FcpB,mBAqCYA,MAAU/F,KAAK/C,KAAM,oBAiBzB8I,MAAU/F,KAAK/C,KAAM,oBA2BjB8I,MAAW/F,KAAK/C,KAAM,8BAM8C8I,8BACAA,8BACEA,+CApGtFA,KAAU,+CAEJA,sCACCA,gFAeDA,iCAkBIA,kCACCA,uDACe+B,GAAY/B,KAAMc,wCAoCzCiB,GAAY/B,KAAMc,oDAEVd,KAAMgC,wCACPhC,KAAMiC,wCACLjC,KAAMiB,+CACAjB,KAAMkB,uCAEpBlB,KAAMqB,+CAMGrB,+BAAoBA,kCAAsBA,kCAAwBA,iCA3BjDA,+BA+C5BA,KAAMjD,6GAGyCiD,KAAM2B,kHAgGN3B,KAAM4B,4HA+E5C5B,KAAM6B,iRAroC1BE,GAAY,8CAqBZL,GAAU,8BA9BH3E,kBACAmF,WAELC,MAAiBzF,MAEnBC,EAAQ,EACRC,EAAU,GACVwF,EAAc,GACdC,EAAa,GAEbC,EAAa,GACbC,EAAgB,GAChBC,EAAe,GACfC,EAAc,GACdC,KACAC,KAAiBC,KAAgBC,EAAW,GAAIC,EAAY,GAChEH,EAAW,GAAK,6rBAChBA,EAAW,GAAK,8rBAChBA,EAAW,GAAK,2PAChBA,EAAW,GAAK,uPAGhBC,EAAU,GAAO,YACjBA,EAAU,GAAO,aACjBA,EAAU,GAAO,iBACjBA,EAAU,GAAO,UACjBA,EAAqB,UAAI,IACzBA,EAAsB,WAAI,IAC1BA,EAA0B,eAAI,IAC9BA,EAAmB,QAAI,QAEnBG,KACOC,GACHjG,IAAK,GACL4E,SAAS,EACTC,UAAU,EACVd,MAAO,GACPe,WAAW,EACXb,cAAe,IACfiC,MAAO,GACPZ,WAAY,QACZD,YAAa,QACbf,IAAK,GACLW,UAAW,GACXC,SAAU,GACVhB,UAAW,GACXC,eAAgB,GAChBC,UAAW,GACXJ,UAAW,KAEKmC,WAAWC,QAC/BJ,EAAQI,eAuJHC,QAEDC,EAAUC,QAAQC,aAAaC,UAAUC,YAAaC,OAAQ,QAGlEL,EAAUA,EAAQtH,QAAQsH,EAAS,kJAAoJA,EAAU,WAGjMC,QAAQC,aAAaC,UAAUG,WAAWN,GAG1CO,aAgGKC,EAAU9G,OACX+G,EAAO/G,EAAI3D,aAAa,MAAO2K,KACf,SAAhBhH,EAAIiH,WACJF,EAA+C,kBAAxC/G,EAAIkH,SAAS,GAAG7K,aAAa,QAA8B,UAAY,WAElF8K,MAAMC,UAAU/F,QAAQgG,KAAKrH,EAAIM,aAAagH,EAAEjE,KAC5C2D,EAAM3D,IAAOpC,KAAQqG,EAAErG,KAAMC,MAASoG,EAAEpG,UAGjB,GAAvBlB,EAAIkH,SAAS1E,QAAyC,IAA1BxC,EAAIuH,YAAY1F,SAC5CmF,EAAMA,EAAMxE,SAAYvB,KAAQ,QAASC,MAASlB,EAAIuH,YAAY1F,cAEnD,IAARkF,GACJA,IACCS,EAAG7G,OAAO,IAAMoG,GAAMlG,QAAoB,WAAIC,KAAKgB,UAAUkF,IAGjEhH,EAAIkH,SAAS1E,OAAS,GACtB2E,MAAMC,UAAU/F,QAAQgG,KAAKrH,EAAIkH,UAAWO,IACxCX,EAAUW,eAMbC,QACDC,KAAYC,KAChBd,EAAUU,EAAG7I,UAAUqH,EAAMhG,UAGf6H,GACVC,WAAYxM,EAAGyE,SACXiG,EAAMhG,IAAMoF,EAAW2C,WAAW,MAAOzM,EAAGyE,EAAG1D,aAAa,MAAO0D,EAAIiG,EAAMhG,QAC7EmF,EAAYa,EAAMhG,QAI1BwH,EAAGQ,OAAO,WAAY,QAAS,yBAA0B5L,GACrDoL,EAAGjF,UAAU,uBAAwB,cAAe,cACpDiF,EAAG7G,OAAOvE,EAAO,WAAY,cAAc6L,WAI/CT,EAAGtK,KAAK,wBAAyB,cAAegB,QACxC9B,EAAQ8B,EAAMlD,OAClBwM,EAAGzI,KAAK3C,EAAO,UAAWqG,OAAQ,OAAQC,WAAY,aAE1D8E,EAAGtK,KAAK,wBAAyB,cAAegB,QACxC9B,EAAQ8B,EAAMlD,OAClBwM,EAAGzI,KAAK3C,EAAO,UAAWqG,OAAQ,YAItCqD,EAAW0B,EAAGzI,KAAK,eAAgB,YAAY0C,YAC/CsE,EAAYyB,EAAGzI,KAAK,eAAgB,YAAY2C,iBAG5CwG,MAAcxN,GACdM,OAAQwM,EAAGzI,KAAK,eAAgB,YAChC7D,MAAO4K,EACP3K,OAAQ4K,EACRtJ,WAnWsE,GAoWtErB,SAAU,cACVH,QAAS,EACTuB,KAAM,iBACNkC,UAAU,EACV/D,WACAA,YACAA,QAAmBW,GAEfqM,EAAMQ,KAAK7M,EAAEhB,GACbsN,EAAMO,KAAK7M,EAAEf,IAEjBI,UAAqBW,GACjBkM,EAAG7G,OAAO,4BAA4BO,MAAQ,OAC1CkH,EAAOZ,EAAGzI,KAAK,eAAgB,mBAAmB1C,aAAa,cACvD,IAAR+L,GACAA,EAAOjF,OAAOC,KAAKtC,KAAKC,MAAMqH,IAAO5F,OACrC6F,EAAcV,EAAOC,EAAOQ,IAE5BC,EAAcV,EAAOC,EAAOhI,GAEhC+H,KAAYC,QAGhBU,EAAeJ,EAAQ9D,UAAU4B,EAAM5B,cAC3CoD,EAAG7E,SAAS6E,EAAGzI,KAAK,eAAgB,aAAaA,MAAMwJ,QAC/CC,EAAMhB,EAAGzI,KAAKwJ,EAAK,OAAOlM,aAAa,aAC3CmL,EAAGtK,KAAK,IAAMsL,EAAK,kBAAmBtK,GAClCgK,EAAQO,eACR5I,EAAU,KACVD,EAAQ,EACR4H,EAAGzI,KAAK,eAAgB,mBAAoB0D,OAAQ,OAAQC,YAAajG,WAAYoD,KACrF6I,OAEGF,KAM0C,kBAFpChB,EAAG7I,UAAUqB,GAEdkH,SAAU,GAAG7K,aAAa,aAClCsM,EAAM3C,EAAMhG,IAEL,KADX2I,EAAMA,EAAIC,UAAUD,EAAIjL,QAAQ,KAAMiL,EAAItG,YAAY,KAAO,MAEzDsG,EAAM7H,KAAKC,MAAM4H,IAErBrG,uBAEI8C,EAAWyD,iBAAiBrB,EAAGzI,KAAK,eAAgB,mBAAmB1C,aAAa,MAAOsM,EAAKL,KACjG,KAEP9K,OAAO0K,QAAUA,WAIZG,EAAcV,EAAOC,EAAOhI,GACpB,GAATA,EACAC,EAAU,QAAWD,EAAS,WAAgB+H,EAAQ,UAAcC,EAAQ,OAE5E/H,EAAU2H,EAAGzI,KAAK,eAAgB,mBAAmB1C,aAAa,cAClEwD,EAAUA,EAAQiJ,MAAM,GAAI,GAC5BjJ,GAAW,QAAWD,EAAS,WAAgB+H,EAAQ,UAAcC,EAAQ,OAEjFJ,EAAGzI,KAAK,eAAgB,mBAAoB0D,OAAQ,OAAQC,YAAajG,WAAYoD,KACrF6I,aAIKK,EAAkBC,MAET,OAAVA,OAGAhD,EAAMjC,MAAQyD,EAAG7G,OAAO,oBAAoBO,aAC5C8E,EAAM1B,IAAMkD,EAAG7G,OAAO,WAAWO,aACjC8E,EAAMf,UAAYuC,EAAG7G,OAAO,cAAcO,aAC1C8E,EAAMd,SAAWsC,EAAG7G,OAAO,aAAaO,aACxC8E,EAAM9B,UAAYsD,EAAG7G,OAAO,cAAcO,aAC1C8E,EAAM7B,eAAiBqD,EAAG7G,OAAO,mBAAmBO,SACpD+H,WAAWC,IAAM1B,EAAGjF,UAAU,qFAG9ByD,EAAMhG,IAAMgG,EAAMhG,IAAIhB,QAAQ,yBAA0BgH,EAAM1B,IAAItF,QAAQ,KAAM,qBAChFgH,EAAMhG,IAAMgG,EAAMhG,IAAIhB,QAAQ,6BAA8BgH,EAAMjC,iBAClEiC,EAAMhG,IAAMgG,EAAMhG,IAAIhB,QAAQ,qCAAsCgH,EAAMf,qBAC1Ee,EAAMhG,IAAMgG,EAAMhG,IAAIhB,QAAQ,mCAAoCgH,EAAMd,oBACpEiE,EAAKC,EAAUpD,EAAMhG,KAGzBmJ,EAAGE,MAAMC,IAAIC,QAAUvD,EAAM9B,UAC7BiF,EAAGE,MAAMC,IAAIE,aAAexD,EAAM7B,eAClCgF,EAAGE,MAAMC,IAAIG,WAAajM,OAAOsB,UAC7B4K,MAAYzH,MAChByH,EAAMC,sBACFtE,EAAclL,KAAKgB,OAAS,UAC5BmK,EAAanL,KAAKe,MAAQ,MAC1BsM,EAAG7G,OAAO,WAAY,OAASxF,OAAQkK,EAAanK,MAAOoK,IAEjC,kBAAtB6D,EAAGE,MAAMC,IAAIM,QACbT,EAAGE,MAAMQ,OAAS1P,KAAKe,MACvBiO,EAAGE,MAAMS,QAAU3P,KAAKgB,OACxBqM,EAAGzI,KAAK,WAAY,UAAW0D,OAAQ,OAAQC,YAAavH,OAAQhB,KAAKgB,OAAQD,MAAOf,KAAKe,SAC7FsM,EAAGjF,UAAU,0DAA0DlB,SAASjF,IAC5EA,EAAM2N,gBAGd/D,EAAMhG,IAAMgK,EAAUb,MAEtBhE,EAAYa,EAAMhG,MAEtB0J,EAAMxH,IAAM8C,GAAYgB,EAAMjC,UAC9BiC,EAAMpB,SAAU,4BA5WhBqF,EAAezC,EAAG7G,OAAO,eAAeO,MACxCgJ,EAAuB/I,SAAS8I,GAChCE,EAAc3C,EAAG7G,OAAO,cAAcO,MACtCkJ,EAAsBjJ,SAASgJ,GAC/BE,EAAY7C,EAAG7G,OAAO,YAAYO,MAClCoJ,EAAoBnJ,SAASkJ,GAC7BE,EAAa/C,EAAG7G,OAAO,aAAaO,MACpCsJ,EAAqBrJ,SAASoJ,GAC9BE,EAAgBtJ,SAASkE,GACzBqF,EAAevJ,SAASmE,UACxBrL,MAAMC,OAAO+P,KAKThQ,MAAMiQ,IAJV1C,EAAGmD,QAAQ,gCACXnD,EAAG7G,OAAO,eAAesH,SAClB,GAOEiC,EAAuB/I,SAAUsJ,EAAgB,IAASP,EAAuB,IAClF1C,EAAGmD,QAAQ,wEAA0ExJ,SAAUsJ,EAAgB,IAC/GjD,EAAG7G,OAAO,eAAesH,SAClB,GAKfhO,MAAMC,OAAOiQ,KAKTlQ,MAAMmQ,IAJV5C,EAAGmD,QAAQ,gCACXnD,EAAG7G,OAAO,cAAcsH,SACjB,GAOEmC,EAAsBjJ,SAAUuJ,EAAe,IAASN,EAAsB,IAC/E5C,EAAGmD,QAAQ,uEAAyExJ,SAAUuJ,EAAe,IAC7GlD,EAAG7G,OAAO,cAAcsH,SACjB,GAKfhO,MAAMC,OAAOmQ,KAKTpQ,MAAMqQ,IAJV9C,EAAGmD,QAAQ,gCACXnD,EAAG7G,OAAO,YAAYsH,SACf,GAOEqC,EAAqBG,EAAgBP,GAA2BI,EAAoB,GACrF9C,EAAGmD,QAAQ,2EAA6EF,EAAgBP,IACxG1C,EAAG7G,OAAO,YAAYsH,SACf,GAKfhO,MAAMC,OAAOqQ,KAKTtQ,MAAMuQ,IAJVhD,EAAGmD,QAAQ,gCACXnD,EAAG7G,OAAO,aAAasH,SAChB,KAOEuC,EAAsBE,EAAeN,GAA0BI,EAAqB,KACrFhD,EAAGmD,QAAQ,4EAA8ED,EAAeN,IACxG5C,EAAG7G,OAAO,aAAasH,SAChB,GAiSM2C,QAGbvB,EAAQD,EAAUpD,EAAMhG,SAC5BwF,EAAgB6D,EAAMA,MAAMC,IAAIQ,QAAU3I,SAASqG,EAAG7G,OAAO,eAAeO,YAC5EuE,EAAe4D,EAAMA,MAAMC,IAAIO,OAAS1I,SAASqG,EAAG7G,OAAO,cAAcO,YACzEqE,EAAa8D,EAAMA,MAAMC,IAAIuB,KAAO1J,SAASqG,EAAG7G,OAAO,YAAYO,YACnEwE,EAAc2D,EAAMA,MAAMC,IAAIwB,MAAQ3J,SAASqG,EAAG7G,OAAO,aAAaO,YACtE8E,EAAMnB,UAAW,SACjBW,GAAiB,UACjBC,GAAgB,UAChBF,GAAc,UACdG,GAAe,MAGfP,EAAY6E,EAAUX,QAEtBrD,EAAMhG,IAAMgK,EAAUX,iBA+HzBX,QAEDjF,EAAS+D,EAAG7I,UAAUqH,EAAMhG,KAIrB,kBAFDyD,EAAOsH,cAAc,QAAQ1O,aAAa,UAEvBoH,EAAOsH,cAAc,OAAOC,UAAY,YAAcxD,EAAGzI,KAAK,eAAgB,mBAAmB1C,aAAa,cAAgB,WAEvJ4O,EAAWjF,EAAMhG,OACjBiL,OAEIC,EAAgBlF,EAAMhG,IAAIhB,QAAQiM,EAAUpH,UAAUJ,EAAOzD,IAAMyD,EAAOzD,SAAWmL,eAAiBC,kBAAkB3H,SAC5HuC,EAAMhG,IAAMkL,EAAcG,cAC1BlG,EAAYa,EAAMhG,eAKjB6G,QACDyE,KACAC,EAAe,GAEfC,EAAOjF,QAAQC,aAAaE,YAAaC,OAAQ,WAErD2E,EAAME,EAAKC,MAAM,yDAIJpI,EAAI,EAAGA,EAAIiI,EAAI9I,OAAQa,IAC5BkI,EAAeD,EAAIjI,GAAGrE,QAAQ,4CAA6C,IAC3EwM,EAAOA,EAAKxM,QAAQsM,EAAIjI,GAAI,KAAOkI,EAAe,UAItDN,EAAWjF,EAAMhG,IAAIyL,MAAM,kCAG3BR,OACIC,EAAgBD,EAASI,WAAWrM,QAAQ,iBAAe,IAAIA,QAAQ,WAAS,IAEpFkM,EAAgBlF,EAAMhG,IAAIhB,QAAQiM,EAAU,iBAAgBO,EAAO,gBAGnExF,EAAMhG,IAAMkL,EAAcG,cAG1BlG,EAAY+F,EAAcG,sBA6FzBK,EAAOC,EAAGC,EAAGC,EAAGtH,EAAGuH,OACpBC,EAAKvE,EAAG7G,OAAO,WACfoL,OACIC,EAASD,EAAGnL,wBACZd,EAAMiM,EAAG1P,aAAa,MACtBoH,EAAS+D,EAAG7I,UAAUqH,EAAMhG,KAC5BzD,EAASkH,EAAOsH,cAAc,QAAUjL,EAAM,cAC7B,IAATgM,GAAwBA,EAC5BG,QAAQ,+BACRF,EAAGG,SACH3P,EAAO2P,kBAEJH,EAAGI,YAAc,GAAKJ,EAAGK,aAAe,GAC/CT,EAAII,EAAGtK,YAAckK,EACrBC,EAAIG,EAAGrK,aAAekK,EACtBC,EAAIG,EAAOxN,IAAMqN,EACjBtH,EAAIyH,EAAOzN,KAAOgG,EAClBiD,EAAG7G,OAAOoL,EAAI,OAAS7Q,MAAOyQ,EAAI,KAAMxQ,OAAQyQ,EAAI,KAAMpN,IAAKqN,EAAI,KAAMtN,KAAMgG,EAAI,WAC/EjE,EAAakH,EAAG7G,OAAO,QAAUb,EAAM,MAAMe,QAAoB,WACrEC,KAAKgB,UAAUxB,GAAYe,UAASH,EAAOK,YAC/BL,EAAMD,UACL,QACDC,EAAMA,MAAQC,SAAS4K,EAAGtK,aAC1BlF,EAAOmH,aAAa,QAASxC,EAAMA,iBAElC,SACDA,EAAMA,MAAQC,SAAS4K,EAAGrK,cAC1BnF,EAAOmH,aAAa,SAAUxC,EAAMA,iBAEnC,MACDA,EAAMA,MAAQC,SAAS6K,EAAOxN,KAC9BjC,EAAOmH,aAAa,MAAOxC,EAAMA,iBAEhC,OACDA,EAAMA,MAAQC,SAAS6K,EAAOzN,MAC9BhC,EAAOmH,aAAa,OAAQxC,EAAMA,WAI9CsG,EAAG7G,OAAO,QAAUb,EAAM,MAAMe,QAAoB,WAAIP,EAI5DkH,EAAG7G,OAAO,uBAAuBO,MAAQuC,EAAOzD,IAAMyD,EAAOzD,SAAWmL,eAAiBC,kBAAkB3H,EAAO,QAClHuC,EAAMhG,IAAMyD,EAAOzD,IAAMyD,EAAOzD,SAAWmL,eAAiBC,kBAAkB3H,EAAO,OACrF0B,EAAY1B,EAAOzD,IAAMyD,EAAOzD,SAAWmL,eAAiBC,kBAAkB3H,EAAO,UAIzF4I,EACAC,EAGAC,EACAC,EACAC,WACKC,EAAQpR,OACTqR,EAASJ,EAAWK,WACpBC,EAAKR,EAAS/Q,EAAElB,OACpBiS,EAAS/Q,EAAElB,GACXuS,EAAO/N,MAAM1D,MAASiG,SAAS2L,iBAAiBH,EAAQ,IAAIzR,OAAS2R,EAAM,cAEtEE,EAAQzR,OACTqR,EAASH,EAAWI,WACpBI,EAAKV,EAAShR,EAAEjB,OACpBiS,EAAShR,EAAEjB,GACXsS,EAAO/N,MAAMzD,OAAUgG,SAAS2L,iBAAiBH,EAAQ,IAAIxR,QAAU6R,EAAM,cAExEC,EAAS3R,OACVqR,EAASH,EAAWI,WACpBC,EAAKR,EAAS/Q,EAAElB,EAChB4S,EAAKV,EAAShR,EAAEjB,OACpBgS,EAAS/Q,EAAElB,QACXkS,EAAShR,EAAEjB,GACXsS,EAAO/N,MAAM1D,MAASiG,SAAS2L,iBAAiBH,EAAQ,IAAIzR,OAAS2R,EAAM,KAC3EF,EAAO/N,MAAMzD,OAAUgG,SAAS2L,iBAAiBH,EAAQ,IAAIxR,QAAU6R,EAAM,KAnxBjFE,QACI1F,EAAG2F,WAAW3P,OAAO4P,QAAU,oCAAqCC,SAAS,mBAM7ErH,EAAMhG,IAAOA,SAETsN,EAASlE,EAAUpJ,MACnBsN,SAEAA,EAAOjE,MAAMC,IAAIM,MAAS0D,EAAOjE,MAAMC,IAAIM,MAAS0D,EAAOjE,MAAMC,IAAIM,MAAQ,cAE7E5D,EAAM/B,cAAgB4B,EAAUyH,EAAOjE,MAAMC,IAAIM,UAGzC/D,EAAUyH,EAAOjE,MAAMC,IAAIM,YAC1B,QACA,cA6NQ2D,OACrBvH,EAAME,MAAQqH,EAAKlE,MAAMC,IAAIkE,eAC7BnI,EAAckI,EAAKlE,MAAMS,QAAU,UACnCxE,EAAaiI,EAAKlE,MAAMQ,OAAS,MACjCrC,EAAG7G,OAAO,SAAU,QACpB6G,EAAGjF,UAAU,sBAAuB,QACjCiF,EAAGzI,KAAKrC,SAAU,WACjB8K,EAAGzI,KAAKrC,SAAU,UAAUwP,mBA+TnBlM,GAEbA,EAAMA,EAAIhB,QAAQ,OAAQ,mJAAmJA,QAAQ,OAAQ,WAC7LwI,EAAGzI,KAAK,eAAgB,4BAA4BiM,UAAYhL,EA9ThEyN,CAAQF,EAAKlE,MAAMC,IAAIkE,SAxOLE,CAAgBJ,aACrB,cAuMQC,OACrBvH,EAAMjC,MAAQwJ,EAAKlE,MAAMsE,cACzB3H,EAAM5B,UAAYmJ,EAAKlE,MAAMC,IAAIG,kBAC7BC,MAAYzH,MAChByH,EAAMC,sBACFtE,EAAekI,EAAKlE,MAAMS,QAAU3P,KAAKgB,OAAUoS,EAAKlE,MAAMS,QAAU,KAAO3P,KAAKgB,OAAS,UAC7FmK,EAAciI,EAAKlE,MAAMQ,OAAS1P,KAAKe,MAASqS,EAAKlE,MAAMQ,OAAS,KAAO1P,KAAKe,MAAQ,MAExFsM,EAAGzI,KAAK,kBAAmB,UAAUgL,QACrCvC,EAAGzI,KAAK,eAAgB,mBAAoB0D,OAAQ,OAAQC,YAAavH,OAAQkK,EAAanK,MAAOoK,EAAY7I,WAAY8Q,EAAKlE,MAAMC,IAAIkE,WAE5I9E,KAEJgB,EAAMxH,IAAM8C,GAAYuI,EAAKlE,MAAMsE,WACnC3H,EAAMjC,MAAQwJ,EAAKlE,MAAMsE,UACzBnG,EAAGjF,UAAU,aAAc,cAAe,UAC1CiF,EAAGjF,UAAU,kBAAmB,QAChCmF,IAxNkBkG,CAAgBN,aACrB,cAyKCC,OACdvH,EAAM9B,UAAYqJ,EAAKlE,MAAMC,IAAIC,eACjCvD,EAAM7B,eAAiBoJ,EAAKlE,MAAMC,IAAIE,oBACtCxD,EAAMjC,MAAQwJ,EAAKlE,MAAMsE,cAEzBtI,EAAckI,EAAKlE,MAAMS,QAAU,UACnC9D,EAAM1B,IAAMiJ,EAAKlE,MAAMwE,YACvBvI,EAAaiI,EAAKlE,MAAMQ,OAAS,UACjCpE,EAAe8H,EAAKlE,MAAMC,IAAIO,OAAS,UACvCrE,EAAgB+H,EAAKlE,MAAMC,IAAIQ,QAAU,UACzCpE,EAAevE,SAASoM,EAAKlE,MAAMC,IAAIwB,OAAS,EAAK,UACrDvF,EAAcpE,SAASoM,EAAKlE,MAAMC,IAAIuB,MAAQ,EAAK,UAC/CnB,MAAYzH,MAChByH,EAAMxH,IAAM8C,GAAYuI,EAAKlE,MAAMsE,OACnCjE,EAAMC,sBACFtE,EAAclL,KAAKgB,OAAS,UAC5BmK,EAAanL,KAAKe,MAAQ,MAC1B6K,EAAawH,EAAKlE,MAAMC,IAAIwE,WAAcP,EAAKlE,MAAMC,IAAIwE,WAAa,KAAO,kBAC7EhI,EAAYyH,EAAKlE,MAAMC,IAAIyE,UAAaR,EAAKlE,MAAMC,IAAIyE,UAAY,KAAO,sBAC1E/H,EAAMd,SAAWY,SACjBE,EAAMf,UAAYc,KAClByB,EAAG7G,OAAO,WAAY,OAASxF,OAAUkK,EAAanK,MAASoK,KAEnEkC,EAAG7G,OAAO,WAAY,cAAe,UACrC6G,EAAGjF,UAAU,oBAAqB,QAClCiF,EAAGzI,KAAKrC,SAAU,UAAW+F,OAAQ,WACrCiF,IAnMoBsG,CAASV,GA4lB7B9F,EAAGtK,KAAKR,SAAU,WAAYpB,OAStBA,EAAE2S,SAAW3S,EAAE4S,gBACN5S,EAAE6S,QAAS9C,gBACX,KACDK,GAAO,GAAI,EAAG,EAAG,aAEhB,KACDA,EAAM,GAAI,GAAI,EAAG,aAEhB,KACDA,EAAM,GAAI,EAAG,EAAG,aAEf,KACDA,EAAM,EAAG,GAAI,EAAG,WAGjBpQ,EAAE4S,gBAEA5S,EAAE6S,QAAS9C,gBACX,KACDK,GAAO,EAAG,EAAG,EAAG,aAEf,KACDA,EAAM,GAAI,EAAG,EAAG,aAEf,KACDA,EAAM,EAAG,EAAG,EAAG,aAEd,KACDA,EAAM,EAAG,EAAG,EAAG,WAGhBpQ,EAAE2S,eAEA3S,EAAE6S,QAAS9C,gBAEX,KACDK,EAAM,EAAG,EAAG,GAAI,cAEf,KACDA,EAAM,EAAG,GAAI,GAAI,aAEhB,KACDA,EAAM,EAAG,EAAG,EAAG,cAEd,KACDA,EAAM,EAAG,EAAG,GAAI,eAIfpQ,EAAE6S,QAAS9C,gBACX,KAED7D,EAAGjF,UAAU,oCAAqC,cAAe,wBAEhE,KAEDjH,EAAE6C,iBACFuN,EAAM,EAAG,GAAI,EAAG,aAEf,KAEDpQ,EAAE6C,iBACFuN,EAAM,EAAG,EAAG,EAAG,OA/pB/BnF,QAAQ6H,cAAcC,IAAI,gBAAiBC,GACvCA,EAAOC,YAAY,QACfC,KAAM,YACNC,GAAI,WACJ9T,UACI0L,KAEJqI,QAAS,SACTC,kBAAkB,OAmI1BC,QAAQzS,MACJ0S,SAAU,2BACVC,QAAQ,EACRC,MAAO,SACPC,UAAW,IACXC,QAAQ,EACRC,SAAS,EACTC,SAAS,EACTC,aAAa,EACbC,WAAW,EACXC,mBAAmB,EACnBC,qBAAqB,EACrBC,mBAAmB,EACnBC,eAAe,EAEfC,wBAAyB,gCACzBC,eAAgB,OAChBD,wBAAyB,mBACzBE,gBAAiB,oBACjBC,SAAU,yBAEVC,YAAa,cApJjBtI,EAAGQ,OAAOtL,SAAU,YAAa,aAAcmK,GAC/ClB,KACA6B,EAAGQ,OAAOtL,SAAU,aAAc,iCAC9BiJ,EAAOoK,OAAQC,MAAOC,aAE1BzI,EAAGQ,OAAOtL,SAAU,WAAY,iCAC5BiJ,EAAOrK,OAAQ0U,MAAOC,UAAYtK,EAAOoK,EACrCpK,EAAOrK,EAAI,IAAO,IAClB+K,IACAV,SAKR6B,EAAGQ,OAAOtL,SAAU,QAAS,sBAEzBc,OAAO0S,SAAS,sBAGpB1I,EAAGtK,KAAKR,SAAU,kBACdsJ,EAAMhC,UAAYgB,GAAY,GAAKwC,EAAG7G,OAAO,oBAAoBO,YAvDrEiP,0KAickBnH,OACdoH,EAAYhH,EAAUpD,EAAMhG,KAAMqQ,EAAgBrH,EAAQsH,GAAe,EAAMC,GAAgB,EAAMC,GAAc,KACtF,kBAA7BJ,EAAU/G,MAAMC,IAAIM,WAChBF,MAAYzH,MAChByH,EAAMC,kBAEE6G,OACAnL,EAAc+K,EAAU/G,MAAMS,QAAU,UACxCxE,EAAa8K,EAAU/G,MAAMQ,OAAS,YAGtCxE,EAAclL,KAAKgB,OAAS,UAC5BmK,EAAanL,KAAKe,MAAQ,OAG1Bf,KAAKe,OAAS,KAAOf,KAAKe,OAAS,KACnCoV,GAAe,EAEXnW,KAAKgB,QAAU,IAAMhB,KAAKgB,QAAU,IACpCoV,GAAgB,GAEhB/I,EAAG1E,MAAMyB,EAAEkM,gBACXF,GAAgB,KAGpB/I,EAAG1E,MAAMyB,EAAEmM,eACXJ,GAAe,GAIfC,GAAiBD,EAEbE,MACAxK,EAAMpB,SAAU,KAGhBmE,EAAkBsH,QAItBrK,EAAMpB,SAAU,KAChB8E,EAAMxH,IAAM8C,GAAYoL,EAAU/G,MAAMsE,OACxCnG,EAAGjF,UAAU,oBAAoBrB,MAAQkP,EAAU/G,MAAMsE,OACzD6C,GAAc,IAGtB9G,EAAMxH,IAAM8C,GAAYwC,EAAG7G,OAAO,oBAAoBO,WAEtD6H,EAAkBsH,mBAOtBrK,EAAMnB,UAAW,SACjBmB,EAAMpB,SAAU,iBAOhB4C,EAAG7G,OAAO,oBAAoBO,MAAQ8E,EAAMjC,UAC5CiC,EAAMhC,UAAYgB,GAAY,GAAKgB,EAAMjC,SACzCyD,EAAG7G,OAAO6G,EAAG7G,OAAO,oBAAoBgQ,uBAAuB,OAASC,UAAW,oCAAqC9R,MAAO,qBAC3HkH,EAAM9B,YAENsD,EAAG7G,OAAO,cAAcO,MAAQ8E,EAAM9B,UACtCsD,EAAG7G,OAAO6G,EAAG7G,OAAO,cAAcgQ,uBAAwB,OAASC,UAAW,oCAAqC9R,MAAO,sBAE1HkH,EAAM7B,iBAENqD,EAAG7G,OAAO,mBAAmBO,MAAQ8E,EAAM7B,eAC3CqD,EAAG7G,OAAO6G,EAAG7G,OAAO,mBAAmBgQ,uBAAwB,OAASC,UAAW,oCAAqC9R,MAAO,0BAInIkH,EAAMpB,SAAU,qBAKhBoB,EAAMnB,UAAW,SAEbgM,EAAQvO,uBAERkF,EAAG7G,OAAO,eAAeO,MAAQC,SAASqG,EAAG7G,OAAO,QAAQ/B,MAAMzD,QAClEqM,EAAG7G,OAAO,cAAcO,MAAQC,SAASqG,EAAG7G,OAAO,QAAQ/B,MAAM1D,OACjEsM,EAAG7G,OAAO,YAAYO,MAAQC,SAASqG,EAAG7G,OAAO,QAAQ/B,MAAMJ,KAC/DgJ,EAAG7G,OAAO,aAAaO,MAAQC,SAASqG,EAAG7G,OAAO,QAAQ/B,MAAML,MAChEuS,aAAaD,KACd,iBAiKa9J,OAEhBf,EAAM5B,UAAY2C,EAAK/L,OAAOkG,SAE9B1D,OAAOsB,MAAQkH,EAAM5B,oBAkFF9I,QACnB+Q,EAAS/Q,EAAElB,GACXsC,SAASqU,oBAAoB,YAAahE,GAAS,GACnDrQ,SAASM,iBAAiB,YAAa0P,GAAS,GAChDhQ,SAASM,iBAAiB,sBACtBN,SAASqU,oBAAoB,YAAarE,GAAS,GACnDhQ,SAASqU,oBAAoB,YAAahE,GAAS,GACnDrQ,SAASqU,oBAAoB,YAAa9D,GAAU,MACrD,aAEgB3R,QACnBgR,EAAShR,EAAEjB,GACXqC,SAASqU,oBAAoB,YAAarE,GAAS,GACnDhQ,SAASM,iBAAiB,YAAa+P,GAAS,GAChDrQ,SAASM,iBAAiB,sBACtBN,SAASqU,oBAAoB,YAAarE,GAAS,GACnDhQ,SAASqU,oBAAoB,YAAahE,GAAS,MACpD,aAEiBzR,QACpB+Q,EAAS/Q,EAAElB,QACXkS,EAAShR,EAAEjB,GACXqC,SAASqU,oBAAoB,YAAarE,GAAS,GACnDhQ,SAASqU,oBAAoB,YAAahE,GAAS,GACnDrQ,SAASM,iBAAiB,YAAaiQ,GAAU,GACjDvQ,SAASM,iBAAiB,sBACtBN,SAASqU,oBAAoB,YAAarE,GAAS,GACnDhQ,SAASqU,oBAAoB,YAAahE,GAAS,GACnDrQ,SAASqU,oBAAoB,YAAa9D,GAAU,MACrD,oDA0GkCV,uDACAC,uDACCC,2BA8ClBzG,EAAM1B,kCASyC0B,EAAM9B,qCAaD8B,EAAM7B,0CAYZ6B,EAAM5B,qDAtEd4B,EAAMpB,aAANoB,EAAMpB,8CAgGNoB,EAAMnB,cAANmB,EAAMnB,4BAkFtBmB,EAAMlB,WAAY,gCAHxCkB,EAAMlB,eAANkB,EAAMlB"}