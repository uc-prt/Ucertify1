tinymce.create("tinymce.plugins.EquationEditorPlugin", {
    init: function(t, e) {
        var n;
        return n = null, t.addCommand("mceMathquill", function(i) {
                var r;
                window.latexCopyMath = t;
                return i || (i = window.selecteddata) || (i = window.cursor_content) || (i = "") , r = t.windowManager.open({
                    url: baseUrlTheme + "pe-items/tinymce/plugins/equationeditor/equation_editor.html",
                    width: 850,
                    height: 475,
                    inline: 1,
                    popup_css: !1,
                    title: "Equation Editor",
                    buttons: [{
                            text: "Insert",
                            subtype: "primary",
                            onclick: function() {
                                var e, n;
                                return n = t.windowManager.getWindows()[0],  e = t.windowManager.getParams().latexInput.mathquill("latex"), t.execCommand("mceMathquillInsert", e), window.selecteddata = "", window.current_latex_node = "", window.cursor_content = "", n.close()
                            }
                        }, {
                            text: "Cancel",
                            onclick: function() {
                                return n = null, t.windowManager.getWindows()[0].close()
                            }
                        },
                        {
                            text: "Copy",
                            id: "my_copy",
                            onclick: function() {
                                var e = t.windowManager.getParams().latexInput.mathquill("latex");
                                let input = document.createElement('input');
                                input.value = e;
                                document.body.appendChild(input).focus();
                                input.select();
                                document.execCommand('copy');
                                showmsg("Latex Equation is copied");
                                document.querySelector('.mathtolatex').textContent = e;
                            }
                        }
                    ]
                }, {
                plugin_url: e,
                existing_latex: i
            })
        }), t.addCommand("mceMathquillInsert", function(e) {
            var i;
            if (window.currentId) return document.querySelector(window.currentInp).value = e
            if (e || e =="") {
                if(AI.parent('#'+tinymce.activeEditor.id, "#stem") || AI.parent('#'+tinymce.activeEditor.id, "#remediation") || document.querySelectorAll('#'+tinymce.activeEditor.id + ':not(.fillAuthor)').length>0  ) {
                    var current_latex = (e) && `\\begin{equation}${e}\\end{equation}`;
                    if(window.current_latex_node){
                        return window.current_latex_node.innerHTML = current_latex;
                    } else {
                        return i =  '&#160;<span class="latex_id">\\begin{equation}'+ e +'\\end{equation}</span>&#160;',/*window.currentId = "latexSpan"+window.spanCounter,*/ n && t.selection.select(n), n = null, t.selection.setContent(i)
                    }
                } else {
                    return i = '<span type="e" id="latexSpan'+(++window.spanCounter)+'" class="alert alert-info editFill editMath" latex="'+e+'" originalKey="%{'+e+'|e}%" style="padding: 5px;outline: none;line-height:40px;cursor:move;color:#000" contentEditable="false"><i style="padding-right:4px" class="icomoon-insert-template"></i>Math</span>',/*window.currentId = "latexSpan"+window.spanCounter,*/ n && t.selection.select(n), n = null, t.selection.setContent(i)
                }
            }
        }),
        
        t.on("init", function(ref) {
            if (ref.target.id == "fillAuthor") {
                return AI.listen(t.getDoc(), "click", ".latexEditButton", function(_this, e) {
                    var i;
                    var id = _this.children[0].id;
                    id = "#input" + (id.replace(/[^\d]/g,""));
                    window.currentInp = id;
                    
                    if(AI.select("#"+window.currentId).getAttribute("latex").indexOf('user Response') > -1) {
                        var new_latex = AI.select("#"+window.currentId).getAttribute("latex").replace(/user Response/g , '')
                        AI.select("#"+window.currentId).setAttribute("latex", new_latex);
                    }
                    return e.stopPropagation(), n = document.querySelector("#"+window.currentId), n = null, i = AI.select(id).value.replace(/user Response/g, "").replace(/\}\}/g, "}"), t.execCommand("mceMathquill", i);
                })
            } else {
                return null;
            }
        }), t.addButton("equationeditor", {
            title: "Equation editor",
            cmd: "mceMathquill",
            text: "f(x)"
        }), t.on("preProcess", function(t) {
            var e;
            //return e = t.target.dom.select(".rendered-latex:not(.mathquill-rendered-math)"), e.mathquill()
            return e = t.target.dom.select(".rendered-latex:not(.mathquill-rendered-math)")
        }), t.on("loadContent", function(t) {
            var e;
            //return e = t.target.dom.select("span.rendered-latex:not(.mathquill-rendered-math)"), e.mathquill()
            return e = t.target.dom.select("span.rendered-latex:not(.mathquill-rendered-math)")
        }), t.on("setContent", function(t) {
            var e;
            //return e = t.target.dom.select("span.rendered-latex:not(.mathquill-rendered-math)"), e.mathquill()
            return e = t.target.dom.select("span.rendered-latex:not(.mathquill-rendered-math)")
        }),
        t.on('mouseup', function(e) {
            tinymce.activeEditor.execCommand('mceDirectionLTR');
            window.selecteddata = tinymce.activeEditor.selection.getContent();
        }),
        t.on('keyup click', function(e) {
            var node = t.selection.getNode();
            var node_class =  t.selection.getNode().getAttribute("class");
            if (node_class == "latex_id"){
                window.current_latex_node = node;
                window.cursor_content_old = t.selection.getNode().textContent;
                window.cursor_content = t.selection.getNode().textContent.replace('\\begin{equation}','').replace('\\end{equation}','');
            } else {
                window.current_latex_node = "";
                window.cursor_content = "";
            }
        });
    },
    getInfo: function() {
        return {
            longname: "Equation Editor",
            author: "Foraker, derived from https://github.com/laughinghan/tinymce_mathquill_plugin",
            authorurl: "http://www.foraker.com",
            infourl: "https://github.com/foraker/equationeditor",
            version: "1.0"
        }
    }
}), tinymce.PluginManager.add("equationeditor", tinymce.plugins.EquationEditorPlugin);